----QUIT----2024-01-22T10:50:26.727457+01:00 Pharo11-SNAPSHOT-64bit-7b1fe35.image priorSource: 0!----QUIT----2024-01-22T10:51:03.352093+01:00 Pharo11-SNAPSHOT-64bit-7b1fe35.image priorSource: 0!SimpleButtonMorph subclass: #BotonAccion	instanceVariableNames: 'bloque'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonAccion methodsFor: 'as yet unclassified' stamp: 'Jere 1/12/2024 17:23'!mouseAction: unBloque^ bloque := unBloque.! !!BotonAccion methodsFor: 'event handling' stamp: 'Jere 1/12/2024 17:26'!mouseUp: unEventobloque value.! !BotonAccion subclass: #BotonCerrar	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonCerrar methodsFor: 'initialization' stamp: 'Jere 1/14/2024 18:16'!initializesuper initialize.self label: ('CERRAR' asText allBold). self extent: 45@20; color: Color red; borderColor: Color darkGray ; borderWidth: 3.! !!BotonCerrar methodsFor: 'event handling' stamp: 'Jere 1/14/2024 18:16'!mouseUp: unEventosuper mouseUp: unEvento.self owner delete.! !BotonAccion subclass: #BotonInicioSesion	instanceVariableNames: 'campoUser campoClave sistema'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:59'!inicializar: unUsuario conContra: unaContra conSistema: unSistemacampoUser := unUsuario.campoClave := unaContra.sistema := unSistema.self iniciarSesion.! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 17:08'!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := ((sistema getEmpresa) encontrarClienteconDNI: campoUser).        tempUsuario        ifNotNil:         [            ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete. sistema abrirVisualContratos: tempUsuario. ]                ifFalse: [ sistema error: 'Contraseña incorrecta.'].        ]         ifNil:             [sistema error: 'Usuario no existe.'].    ]    ifFalse:    [ sistema error: 'Error: no ingresó correctamente en algún campo' ]! !BorderedMorph subclass: #Ventana	instanceVariableNames: 'empresa botonCerrarVentana'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!Ventana methodsFor: 'initialization' stamp: 'Jere 1/15/2024 20:20'!initializesuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100)."boton cerrar"botonCerrarVentana := BotonAccion new.self addMorph: botonCerrarVentana.botonCerrarVentana position: self topRight - (botonCerrarVentana width + 22@0)+(0@5).botonCerrarVentana label: 'CERRAR'.botonCerrarVentana mouseAction: [self delete].! !!Ventana methodsFor: 'error handling' stamp: 'Jere 1/16/2024 16:47'!error: unTexto|ventana texto|texto := TextMorph new contents: unTexto; color: Color blue ; bold.ventana := self class crearVentanaConAncho: (texto width + 40) altura: (texto height + 40) titulo: 'ERROR'.ventana addMorphCentered: texto.ventana openCenteredInWorld .! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 17:03'!iniciarSistema: unSistemaempresa := unSistema.VisualEmpresa abrirVisualEmpresa.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 17:04'!getEmpresa^ empresa.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:40'!abrirVisualContratos: unClienteVentanaContratos crearVistaContrato: unCliente.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/15/2024 20:20'!abrirInicioSesionVistaUsuario crearVistaUsuario.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ventana class	instanceVariableNames: ''!!Ventana class methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:47'!crearVentanaConAncho: unAncho altura: unaAltura titulo: unTitulo|frame barra titulo contenedorTitulo bCerrar|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.barra := self new color: Color veryDarkGray; extent: unAncho@20; borderColor: Color darkGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: unAncho@40.titulo := TextMorph new contents: (unTitulo asText allBold); fillsOwner: true.titulo font: (LogicalFont familyName: 'Roboto' pointSize: 20).bCerrar := BotonCerrar new.frame addMorph: bCerrar.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorphFront: titulo. titulo position: frame topLeft + (10@0).frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Ventana class methodsFor: 'as yet unclassified' stamp: 'Jere 1/15/2024 20:20'!crearVentanaConAncho: unAncho altura: unaAltura|frame barra bCerrar|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.barra := self new color: Color veryDarkGray; extent: unAncho@20; borderColor: Color darkGray; borderWidth: 3.bCerrar := BotonCerrar new.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !Ventana subclass: #VentanaContratos	instanceVariableNames: 'textoTitulo botonActualizar botonAñadir tabla cliente'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!VentanaContratos methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:14'!ventanaDeContratos: unClientesuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300).cliente := unCliente.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VentanaContratos class	instanceVariableNames: ''!!VentanaContratos class methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:10'!crearVistaContrato: unCliente|aux|.aux:= self new.aux ventanaDeContratos: unCliente.! !Ventana subclass: #VistaUsuario	instanceVariableNames: 'inicioSesion botonAceptar campoUsuario campoContrasenia titulo cliente'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!VistaUsuario methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 17:07'!ventanaInicioSesionsuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300)."titulo"titulo := StringMorph new.titulo contents: 'Iniciar Sesion:'.self addMorph: titulo.titulo position: self topLeft + (90@55)."campo usuario"campoUsuario := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU DNI'.self addMorph: campoUsuario.campoUsuario position: self center - (campoUsuario extent/2) - (0@40).self openCenteredInWorld."campo contraseña"campoContrasenia := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU CONTRASEÑA'.self addMorph: campoContrasenia.campoContrasenia position: self center - (campoContrasenia extent/2) - (0@5).self openCenteredInWorld."boton aceptar"botonAceptar := BotonInicioSesion new.botonAceptar label: 'ACEPTAR'.botonAceptar position: self center - (botonAceptar extent/2) + (0@30) - (70@0).botonAceptar mouseAction: [botonAceptar inicializar: campoUsuario conContra: campoContrasenia conSistema: self.].self addMorph: botonAceptar.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VistaUsuario class	instanceVariableNames: ''!!VistaUsuario class methodsFor: 'as yet unclassified' stamp: 'Jere 1/14/2024 18:34'!crearVistaUsuario|aux|.aux := self new.aux ventanaInicioSesion.! !Ventana subclass: #VisualEmpresa	instanceVariableNames: 'botonCerrar botonContrato numeroContrato fechaHoy miEmpresa origen botonCliente menuDatos botonTest tituloMenu botonUserAdmin botonUserNormal'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!VisualEmpresa methodsFor: 'initialization' stamp: 'Jere 1/14/2024 19:19'!initializesuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100).origen := self innerBounds origin."texto fecha hoy"fechaHoy := StringMorph new.fechaHoy contents: Date today asString.self addMorph: fechaHoy.fechaHoy position: origen + (5@5)."texto seleccione su rol"tituloMenu := StringMorph new.tituloMenu contents: 'SELECCIONE SU ROL'.tituloMenu position: origen + (160@30).self addMorph: tituloMenu."boton usuario admin"botonUserAdmin := BotonAccion new.self addMorph: botonUserAdmin.botonUserAdmin label: 'ADMINISTRADOR'.botonUserAdmin position: origen + (260@60)."boton usuario normal"botonUserNormal := BotonAccion new.self addMorph: botonUserNormal.botonUserNormal label: 'USUARIO'.botonUserNormal position: origen + (100@60).botonUserNormal mouseAction: [self delete. self abrirInicioSesion]. "abre el inicio de sesion""agregar clientebotonCliente := BotonAccion new.botonCliente label: 'AGREGAR CLIENTE'.botonCliente mouseAction: [nombre := UIManager default	request: 'What''s your name?'	initialAnswer: 'no name'].self addMorph: botonCliente.botonCliente position: origen + (5@25)."self openCenteredInWorld.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VisualEmpresa class	instanceVariableNames: ''!!VisualEmpresa class methodsFor: 'as yet unclassified' stamp: 'Jere 1/14/2024 18:49'!abrirVisualEmpresa|aux|.aux := VisualEmpresa new.! !----End fileIn----!Object subclass: #AAA_Inicializador	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL'!!AAA_Inicializador methodsFor: 'inicializarViaje' stamp: 'Caiu 7/30/2023 16:39'!inicializarViajeOrganizado|viaje1 viaje2|"viaje1 := crear: 'España-Italia-Londres' conCostoPersona:350 conImpuestos:70 conCantDias: 10 conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida.viaje2 := crear: '' conCostoPersona:350 conImpuestos:70 conCantDias: 10 conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida."! !!AAA_Inicializador methodsFor: 'inicializarViaje' stamp: 'Caiu 7/30/2023 17:34'!inicializarViajeEspecial|viaje1 viaje2 viaje3|viaje1 := ViajeEspecial crear: 'Recital de Tan Bionica' conCostoPersona: 300	conImpuestos: 75 conDisponibilidad: 10	conFechaSalida: ((Date today)addMonths: 4)								conCiudad: 'Buenos Aires' conFechaRegreso: (((Date today)addMonths: 4)addDays: 3).viaje2 := ViajeEspecial crear: 'Mundial De Futbol Qatar 2022' conCostoPersona: 1200	conImpuestos: 300 conDisponibilidad: 4	conFechaSalida:'18-12-22'asDate  								conCiudad: 'Qatar' conFechaRegreso: '23-12-22' asDate .viaje3 := ViajeEspecial crear: 'Carnaval Rio 2024' conCostoPersona: 600	conImpuestos: 35 conDisponibilidad: 5	conFechaSalida: ((Date today)addMonths: 6)								conCiudad: 'Rio De Janeiro' conFechaRegreso: (((Date today)addMonths: 6)addDays: 10)  .								! !!AAA_Inicializador methodsFor: 'InicializarCliente' stamp: 'Caiu 7/30/2023 15:59'!inicializarClientesNormales|cliente1 cliente2 cliente3|cliente1 := Cliente crear: 'Cayo' conDni: 40000000 conCiudadResidencia: 'Alumine' conContacto: 20000000.cliente2 := Cliente crear: 'Herrera' conDni: 41111111 conCiudadResidencia: 'Neuquen' conContacto: 21111111.cliente3 := Cliente crear: 'Vicentino' conDni: 42222222 conCiudadResidencia: 'Cinco Saltos' conContacto: 22222222.			! !!AAA_Inicializador methodsFor: 'InicializarCliente' stamp: 'Caiu 7/30/2023 16:01'!inicializarClienteFrecuente|clienteF1|clienteF1 := ClienteFrecuente crear: 'Tartaglia' conDni: 44444444  conCiudadResidencia: 'Fiske Menuco'  conContacto: 2555555555  conMillas: 500 ! !!AAA_Inicializador methodsFor: 'InicializarExcursion' stamp: 'Caiu 7/30/2023 17:17'!inicializarExcursionesOpcionales|exOp1 exOp2 exOp3|exOp1 := Excursion crear: 500 conCantPersonasE: 2.exOp2 := Excursion crear: 350 conCantPersonasE: 1.exOp3 := Excursion crear: 1500 conCantPersonasE: 4.! !!AAA_Inicializador methodsFor: 'InicializarContrato' stamp: 'Caiu 7/30/2023 17:41'!inicializarContratos|contrato1 contrato2 contrato3|"contrato1 := Contrato crear: 000 conFechaCreacion: (Date today)  conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: .contrato2 := Contrato crear: 001 conFechaCreacion: ((Date today)addMonths: 2) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: .contrato3 := Contrato crear: 002 conFechaCreacion: ((Date today)addMonths: 3) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: ."! !!AAA_Inicializador methodsFor: 'InicializarContrato' stamp: 'Caiu 7/30/2023 17:41'!inicializarContratosFlexibles|contratoF1 contratoF2|"contratoF1 := ContratoFlexible crear: 004 conFechaCreacion: (Date today) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas:  conValorPlus: .contratoF2 := ContratoFlexible crear: 005 conFechaCreacion: (Date today) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas:  conValorPlus: ."! !!AAA_Inicializador methodsFor: 'inicializarCuota' stamp: 'Caiu 7/30/2023 16:51'!inicializarCuotas|cta1 cta2 cta3 cta4 cta5 cta6 cta7|cta1 := Cuota crear: (Date today).cta2 := Cuota crear: ((Date today)addDays: 6).cta3 := Cuota crear: ((Date today)addDays: 14).cta4 := Cuota crear: ((Date today)addMonths:1).cta5 := Cuota crear: ((Date today)addMonths:3).cta6 := Cuota crear: ((Date today)addMonths:3).cta7 := Cuota crear: ((Date today)addMonths:5).! !Object subclass: #Cliente	instanceVariableNames: 'apellido dni ciudadResidencia contacto colContratos contrasenia'	classVariableNames: ''	package: 'TPOFINAL'!!Cliente methodsFor: 'queries' stamp: 'Jere 7/24/2023 17:34'!esIgual: unDni^ dni=unDni.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:30'!revisarContratos|rta|.rta := colContratos detect:[:contrato | contrato revisarCuotas] ifNone:[nil]."se fija si hay un contrato con cuotas sin pagar a punto de vencer"^ rta isNotNil.! !!Cliente methodsFor: 'queries' stamp: 'GiuliannaVicentino 8/1/2023 19:45'!tieneContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta isNotNil .! !!Cliente methodsFor: 'queries'!agregarContrato: unContratocolContratos add:unContrato.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/24/2023 17:43'!agregarContrato: unNumero conViaje: unViaje conFechaViaje: unaFecha conPersonas: personas conCuotas: cuotas|unContrato|.unContrato := Contrato crear: unNumero conFechaCreacion: Date today conViaje: unViaje conFechaViaje: unaFecha conCantPersonas: personas conColCuotas: cuotas conCantCuotas: cuotas size.colContratos add: unContrato.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:47'!eliminarRefViaje: unNombreViajecolContratos do:[:contrato | (contrato tieneViaje: unNombreViaje) ifTrue:[colContratos remove: contrato]].! !!Cliente methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:02'!getContrasenia^ contrasenia.! !!Cliente methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:22'!buscarContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta .! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:07'!pagarCuotas: cantCuotasAPagar conContrato: elContrato^ elContrato cancelarCuotas: cantCuotasAPagar.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/28/2023 19:57'!obtenerContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta.! !!Cliente methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:00'!inicializar: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContraseniaapellido:= unApellido .dni:= unDni .ciudadResidencia := unaCiudad .contacto := unContacto .colContratos := OrderedCollection new.contrasenia := unaContrasenia.! !!Cliente methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/24/2023 21:11'!buscarContratoAPagar: unNroContrato|elContrato|elContrato := colContratos detect: [:cadaContrato| (cadaContrato numero = unNroContrato )].^ elContrato.! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!dni	^ dni! !!Cliente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 19:49'!getContratos^ colContratos.! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!apellido	^ apellido! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!colContratos	^ colContratos! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!apellido: anObject	apellido := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!colContratos: anObject	colContratos := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!contacto	^ contacto! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!ciudadResidencia	^ ciudadResidencia! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!dni: anObject	dni := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!contacto: anObject	contacto := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!ciudadResidencia: anObject	ciudadResidencia := anObject! !!Cliente methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:22'!cancelarContratoA: unNroContrato|elContrato elReembolso elViaje laFecha laCantPersonas|elContrato  := (colContratos detect: [:cdaContrato | (cdaContrato getNroContrato = unNroContrato  )]).elReembolso := elContrato reembolsar.elViaje := elContrato getRefViaje.laFecha := elContrato getFechaViaje.laCantPersonas := elContrato getCantPersonas.elViaje liberarCupo: laCantPersonas enFecha: laFecha .colContratos remove: [ :cdaContrato | cdaContrato = elContrato].^ elReembolso .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'constructor' stamp: 'Jere 1/15/2024 20:06'!crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra|nuevoCliente|nuevoCliente:=self new.nuevoCliente inicializar: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra.^ nuevoCliente.! !Cliente subclass: #ClienteFrecuente	instanceVariableNames: 'millas'	classVariableNames: ''	package: 'TPOFINAL'!!ClienteFrecuente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:47'!getMillas^ millas.! !!ClienteFrecuente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:45'!setMillas: unasMillasmillas := unasMillas.! !!ClienteFrecuente methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:24'!cancelarContratoA: unNroContrato|elReembolso|elReembolso := super cancelarContratoA: unNroContrato. millas := millas + elReembolso.^ elReembolso .! !!ClienteFrecuente methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:58'!pagarCuotasCFrecuente: cantCuotasAPagar conQuiereMillas: quiereMillas conContrato: elContrato|rta|.rta := elContrato pagarContratoFrecuente: cantCuotasAPagar conQuiereMillas: quiereMillas conCliente: self.^ rta.! !!ClienteFrecuente methodsFor: 'queries' stamp: 'Caiu 7/30/2023 15:56'!inicializar: unasMillasmillas:= unasMillas .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ClienteFrecuente class	instanceVariableNames: ''!!ClienteFrecuente class methodsFor: 'constructor' stamp: 'Jere 1/16/2024 17:34'!crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conMillas: unasMillas conContrasenia: unaContra|nuevoClienteFrecuente|nuevoClienteFrecuente := self crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra.nuevoClienteFrecuente inicializar: unasMillas.^nuevoClienteFrecuente ! !Object subclass: #Contrato	instanceVariableNames: 'numero fechaCreacion refViaje fechaViaje cantPersonas colCuotas cantCuotas colExcursionesContrato'	classVariableNames: ''	package: 'TPOFINAL'!!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!numero	^ numero! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!refViaje	^ refViaje! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!cantCuotas: anObject	cantCuotas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!fechaViaje	^ fechaViaje! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!cantPersonas	^ cantPersonas! !!Contrato methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:10'!getCuotas^ colCuotas.! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!refViaje: anObject	refViaje := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!colCuotas: anObject	colCuotas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!cantCuotas	^ cantCuotas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!numero: anObject	numero := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!cantPersonas: anObject	cantPersonas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!fechaViaje: anObject	fechaViaje := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/29/2023 23:10'!getNroContrato^ numero ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!colCuotas	^ colCuotas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!fechaCreacion: anObject	fechaCreacion := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37'!fechaCreacion	^ fechaCreacion! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:10'!getRefViaje ^ refViaje ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:09'!getFechaViaje^ fechaViaje ! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:42'!tieneViaje: unNombreViaje^ refViaje esIgual: unNombreViaje.! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:42'!eliminarCuotas: cuotasAPagar				"este metodo da por sentado que la coleccion de cuotas está ordenada de modo que la ultima cuota es la mas proxima a vencer"	|pagoExitoso cuotasAPagarAux |	cuotasAPagarAux := cuotasAPagar."chequea que efectivamene tenga cuotas que pagar" 1 to: cuotasAPagarAux  size do: [ colCuotas detect: [ :unaCuota| (unaCuota cuotaPagada) ifTrue:[ unaCuota pagar.   cuotasAPagarAux := (cuotasAPagarAux - 1).pagoExitoso := true.  ] ]. ]. 						^ pagoExitoso .		 ! !!Contrato methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:33'!efectivizarContratoB|efectivizado|efectivizado := ((cantCuotas  = 0) & (( fechaViaje > ((Date today) addDays: 7 )))).^ efectivizado .! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 22:46'!inicializar: unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCantnumero:=unNumero.fechaCreacion :=unaFechaCreacion .refViaje := unViaje .fechaViaje := unaFechaV .colCuotas := unaColCuotas .cantCuotas := unaCant .cantPersonas := unaCantPersonas .colExcursionesContrato := OrderedCollection new.! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 23:15'!agregarExcursionOp: unaExcursion para: unaCantPersonas	|agregado|	(unaCantPersonas <= cantPersonas) ifTrue: [(unaExcursion actualizarCantPersonasE: unaCantPersonas ).															(refViaje actualizarExcursionesEnViaje: unaExcursion).															(agregado := true).															colExcursionesContrato add: unaExcursion.] 																										ifFalse: (agregado := false).		^ agregado.  	! !!Contrato methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/31/2023 20:04'!esIgual: unNumContrato^unNumContrato = numero ! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:29'!revisarCuotas|rta|.(colCuotas size > 0)ifTrue:[rta := colCuotas detect:[:cuota | cuota revisarFechaVencimiento] ifNone:[nil]].^ rta isNotNil. ! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:49'!pagarContratoFrecuente: cantCuotasPagar conQuiereMillas: quiereMillas conCliente: unCliente|pagoExitoso costoTotal millasPosibles|.pagoExitoso := self cancelarCuotas: cantCuotasPagar.(pagoExitoso & quiereMillas) ifTrue:	[		|millasCliente|.		millasCliente := unCliente getMillas.		costoTotal := refViaje obtenerCostoTotal: cantPersonas.		millasPosibles := costoTotal * 0.10.		(millasCliente >= millasPosibles) ifTrue:[unCliente setMillas: millasCliente-millasPosibles].	].^ pagoExitoso.! !!Contrato methodsFor: 'queries'!cancelarCuotas: cuotasAPagar"este metodo da por sentado que la coleccion de cuotas está ordenada de modo que la ultima cuota es la mas proxima a vencer"    |pagoExitoso cuotasAPagarAux cuotaAux|    cuotasAPagarAux := cuotasAPagar."chequea que efectivamene tenga cuotas que pagar" 1 to: cuotasAPagarAux  do: [:each|	      cuotaAux := colCuotas detect: [:unaCuota| (unaCuota cuotaPagada)]. cuotaAux ifNotNil: [cuotaAux pagar. pagoExitoso := true]    ].    ^ pagoExitoso .! !!Contrato methodsFor: 'as yet unclassified' stamp: 'Caiu 7/30/2023 00:10'!getCantPersonas^ cantPersonas ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Contrato class	instanceVariableNames: ''!!Contrato class methodsFor: 'constructor'!crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant|nuevoContrato|nuevoContrato := self new.nuevoContrato inicializar: unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant.^nuevoContrato ! !Contrato subclass: #ContratoFlexible	instanceVariableNames: 'valorPlus'	classVariableNames: ''	package: 'TPOFINAL'!!ContratoFlexible methodsFor: 'punto_e' stamp: 'Jere 7/30/2023 19:54'!reembolsar|elReembolso elCosto elImpuesto|elCosto := refViaje getCostoXPersona.elImpuesto := refViaje getImpuesto.((Date today) <= (fechaViaje addMonths: -3))ifTrue: [    elReembolso := ((0,75)* ((elCosto * cantPersonas) + elImpuesto )).] ifFalse: [	elReembolso := ((0,25)* ((elCosto * cantPersonas) + elImpuesto)).    ((Date today) > (fechaViaje addMonths: -3) & ((Date today) < (fechaViaje addMonths: -2))) ifTrue: [        elReembolso := ((0,50)* ((elCosto * cantPersonas) + elImpuesto )).    ]     ].																	 ^ elReembolso ! !!ContratoFlexible methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:02'!modificarContratoB: unaFecha |modificacionValida|(self tieneViajeOrganizado) ifTrue: [ (refViaje buscaFecha: unaFecha conCupo: cantPersonas )ifTrue: [ self fechaViaje: unaFecha. modificacionValida := true.  ] ifFalse: [ modificacionValida := false ]  ] ifFalse: [ modificacionValida := false ].^ modificacionValida. ! !!ContratoFlexible methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/21/2023 20:05'!inicializar:unValorPlusvalorPlus :=unValorPlus ! !!ContratoFlexible methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 22:23'!inicializarvalorPlus := (((refViaje getCostoXPersona) * cantPersonas) + (((refViaje getCostoXPersona) * cantPersonas)*0.10)).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ContratoFlexible class	instanceVariableNames: ''!!ContratoFlexible class methodsFor: 'constructor'!crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant conValorPlus: unValorPlus	|nuevoContratoFlexible|	nuevoContratoFlexible := self crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant.	nuevoContratoFlexible inicializar.	^nuevoContratoFlexible ! !Object subclass: #Cuota	instanceVariableNames: 'fechaVencimiento estado'	classVariableNames: ''	package: 'TPOFINAL'!!Cuota methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:23'!inicializar:unaFechafechaVencimiento := unaFecha .estado:= false! !!Cuota methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:23'!pagarestado:=true! !!Cuota methodsFor: 'queries'!cuotaPagada^estado not.! !!Cuota methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:28'!revisarFechaVencimiento^ ((Date today<fechaVencimiento) & (Date today>= (fechaVencimiento - 7 days))). "es decir que esta en los ultimos 7 dias"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cuota class	instanceVariableNames: ''!!Cuota class methodsFor: 'constructor'!crear: unaFecha	|nuevaCuota|	nuevaCuota := self new.	nuevaCuota inicializar:unaFecha.	^nuevaCuota ! !Object subclass: #EmpresaTurismo	instanceVariableNames: 'colClientes colViajes'	classVariableNames: ''	package: 'TPOFINAL'!!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!colClientes: anObject	colClientes := anObject! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!colViajes	^ colViajes! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!colClientes	^ colClientes! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48'!colViajes: anObject	colViajes := anObject! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/29/2023 22:07'!modificarCostoPersona: nuevoCosto conNombreViaje: nombreViaje|unViaje|.unViaje := colViajes detect:[:viaje | viaje esIgual: nombreViaje].unViaje setCostoPersona: nuevoCosto.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:16'!listar: fecha1 conOtraFecha: fecha2|listado|listado:=OrderedCollection new.listado := colViajes select:[:unViaje|unViaje verificarFecha: fecha1 conOtraFecha: fecha2].^ listado.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:53'!generarContrato: unDni conNum: unNumero conViaje: unViaje conFecha: unaFecha conPersonas: personas conCuotas: cuotas|unCliente|.unCliente := colClientes detect:[:cliente | cliente esIgual: unDni] ifNone:[nil].(unCliente) ifNotNil:[unCliente agregarContrato: unNumero conViaje: unViaje conFechaViaje:  unaFecha conPersonas: personas conCuotas: cuotas].! !!EmpresaTurismo methodsFor: 'queries'!agregarCliente: unClientecolClientes add:unCliente.! !!EmpresaTurismo methodsFor: 'queries'!revisionDiariaContratos|clientesANotificar|.clientesANotificar := colClientes select:[:cliente | cliente revisarContratos]."se retornan los clientes y luego se les deberia mandar una notificacion a cada uno"^ clientesANotificar.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/30/2023 20:00'!modificarFechaViaje: unNombreViaje conFecha1: fecha1 conFecha2: fecha2|elViaje|.elViaje := colViajes detect:[:unViaje | unViaje esIgual: unNombreViaje].! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:01'!encontrarClienteconDNI: unDni|rta|.rta := colClientes detect:[:unCliente | unCliente esIgual: unDni].^ rta.! !!EmpresaTurismo methodsFor: 'queries'!agregarViaje: unViajecolViajes add:unViaje.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/29/2023 22:08'!modificarValorImpuestos: nuevoValor conNombreViaje: nombreViaje|elViaje|.elViaje := colViajes detect:[:viaje | viaje esIgual: nombreViaje].elViaje setValorImpuesto: nuevoValor.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:03'!verificarContrasenia: unCliente conContrasenia: unaContrasenia|correcta contraseniaCorrecta|.contraseniaCorrecta := unCliente getContrasenia.correcta := unaContrasenia = contraseniaCorrecta.^ correcta.! !!EmpresaTurismo methodsFor: 'queries'!inicializar colClientes:= OrderedCollection new.colViajes := OrderedCollection new.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'GiuliannaVicentino 8/1/2023 19:46'!registrarPagos:unNroContrato conCuotas: cantCuotasAPagar conQuiereMillas:quiereMillas|clienteAPagar contratoAPagar mensajeRespuesta|.clienteAPagar := colClientes detect:[:cadaCliente | cadaCliente tieneContrato: unNroContrato].(clienteAPagar) ifNotNil:[contratoAPagar := clienteAPagar  buscarContrato: unNroContrato.].(contratoAPagar) ifNotNil: [quiereMillas ifTrue:[[clienteAPagar  pagarContratoFrecuente:cantCuotasAPagar conQuiereMillas: quiereMillas conCliente:clienteAPagar] ifTrue: [mensajeRespuesta := 'Pago Exitoso'] ifFalse: [[mensajeRespuesta := 'Error al pagar las Cuotas']]] ifFalse:[clienteAPagar pagarCuotas: cantCuotasAPagar conContrato:contratoAPagar]].  ^ mensajeRespuesta.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:49'!cancelarViaje: unNombreViajecolClientes do:[:cliente | cliente eliminarRefViaje: unNombreViaje].! !!EmpresaTurismo methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 22:55'!ModificarContrato: unNroContrato A: unaFecha| elCliente elContrato reembolso|elContrato := (colClientes   detect: [ :cdaCliente | cdaCliente buscarContrato: unNroContrato  ]).( elContrato isNotNil ) ifTrue: [ elCliente := (colClientes   detect: [ :cdaCliente | cdaCliente buscarContrato: unNroContrato.											  (elContrato modificarContratoB: unaFecha) ifFalse: [reembolso := (elCliente cancelarContrato: unNroContrato)] . ]) ].^ reembolso ! !!EmpresaTurismo methodsFor: 'punto_e' stamp: 'Jere 7/30/2023 18:56'!efectivizarContratoA: unNroContrato	|elContrato elCliente|	elCliente  := colClientes detect:[:cdaCliente | (cdaCliente getNroContrato)=unNroContrato].	(elCliente) ifNotNil: [elContrato := elCliente buscarContrato: unNroContrato].	^ elContrato efectivizarContratoB.! !!EmpresaTurismo methodsFor: 'punto_f' stamp: 'GiuliVicentino 1/3/2024 23:26'!agregarExcOpcional: unaExcursion AContrato: nroContrato paraCantPersonas: unaCantPersonas	| agregada elCliente elContrato |	elCliente := colClientes detect: [ :cdaCliente | (cdaCliente buscarContrato: nroContrato) isNotNil  ].	Transcript show: 'jeree'.	elCliente ifNotNil: [elContrato:= elCliente buscarContrato:nroContrato.		                 agregada := (elContrato agregarExcursionOp:unaExcursion para: unaCantPersonas )].	^ agregada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EmpresaTurismo class	instanceVariableNames: ''!!EmpresaTurismo class methodsFor: 'constructor'!crear |nuevaEmpresa|.nuevaEmpresa := self new.nuevaEmpresa inicializar.^nuevaEmpresa .! !Object subclass: #Etapa	instanceVariableNames: 'fechaLlegada diasEnCiudad hotel tipoPension listaActividades'	classVariableNames: ''	package: 'TPOFINAL'!!Etapa methodsFor: 'queries'!inicializar:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaListafechaLlegada :=unaFechaLlegada .diasEnCiudad := unosDias .hotel :=unHotel.listaActividades := unaLista! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Etapa class	instanceVariableNames: ''!!Etapa class methodsFor: 'constructor'!crear:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaLista	|nuevaEtapa|	nuevaEtapa := self new.	nuevaEtapa inicializar:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaLista.	^ nuevaEtapa ! !Object subclass: #Excursion	instanceVariableNames: 'costo cantPersonasE'	classVariableNames: ''	package: 'TPOFINAL'!!Excursion methodsFor: 'queries'!inicializar:unCosto conCantPersonasE: unaCantcosto := unCosto .cantPersonasE := unaCant .! !!Excursion methodsFor: 'queries' stamp: 'Caiu 7/29/2023 21:47'!actualizarCantPersonasE: unaCantPersonascantPersonasE := unaCantPersonas ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Excursion class	instanceVariableNames: ''!!Excursion class methodsFor: 'constructor'!crar:unCosto conCantPersonasE: unaCant	|nuevaExcursion|	nuevaExcursion := self new.	nuevaExcursion inicializar:unCosto conCantPersonasE: unaCant.	^nuevaExcursion ! !!Excursion class methodsFor: 'constructor' stamp: 'Caiu 7/30/2023 17:05'!crear: unCosto conCantPersonasE: unaCant	|nuevaExcursion|	nuevaExcursion := self new.	nuevaExcursion inicializar:unCosto conCantPersonasE: unaCant.	^nuevaExcursion ! !Object subclass: #Viaje	instanceVariableNames: 'nombre costoPersona impuestos'	classVariableNames: ''	package: 'TPOFINAL'!!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 22:06'!setValorImpuesto: nuevoValorimpuestos := nuevoValor.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 21:17'!getNombre^ nombre.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/30/2023 19:52'!getCostoXPersona^ costoPersona.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 22:06'!setCostoPersona: nuevoCostocostoPersona := nuevoCosto.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/30/2023 19:53'!getImpuesto^ impuestos.! !!Viaje methodsFor: 'queries'!verificarFecha: fecha1 conOtraFecha: fecha2self subclassResponsibility.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:36'!obtenerCostoTotal: cantPersonas^ (costoPersona * cantPersonas) + impuestos.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/29/2023 21:15'!esIgual: unNombre^ nombre = unNombre.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:09'!modificarFecha: fecha1 conFecha2: fecha2self subclassResponsibility.! !!Viaje methodsFor: 'queries'!inicializar:unNombre conCostoPersona:unCosto conImpuestos:unosImpuestosnombre := unNombre .costoPersona :=unCosto .impuestos := unosImpuestos .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Viaje class	instanceVariableNames: ''!!Viaje class methodsFor: 'constructor'!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos|nuevoViaje|nuevoViaje := self new.nuevoViaje inicializar:unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.^nuevoViaje ! !Viaje subclass: #ViajeEspecial	instanceVariableNames: 'disponibilidad fechaSalida ciudad fechaRegreso'	classVariableNames: ''	package: 'TPOFINAL'!!ViajeEspecial methodsFor: 'queries'!inicializar:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaRdisponibilidad := unaDisponibilidad .fechaSalida :=unaFechaS .fechaRegreso := unaFechaR .ciudad:= unaCiudad.! !!ViajeEspecial methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:19'!verificarFecha: fecha1 conOtraFecha: fecha2|rta|.rta := false.((disponibilidad) > 0 & (fechaSalida>=fecha1) & (fechaSalida<=fecha2)) ifTrue:[rta := true].^ rta.! !!ViajeEspecial methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:10'!modificarFecha: fecha1 conFecha2: fecha2|fueModificada|.fueModificada := false.(fecha2>=fecha1) ifTrue:[fueModificada := true. fechaSalida := fecha1. fechaRegreso := fecha2].^ fueModificada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeEspecial class	instanceVariableNames: ''!!ViajeEspecial class methodsFor: 'constructor'!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos conDisponibilidad:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaR|nuevoViajeEspecial|nuevoViajeEspecial := self crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.nuevoViajeEspecial inicializar:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaR.^nuevoViajeEspecial ! !Viaje subclass: #ViajeOrganizado	instanceVariableNames: 'cantDias colEtapas colOpcionesSalida colExcursiones'	classVariableNames: ''	package: 'TPOFINAL'!!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:13'!liberarCupo: laCantPersonas enFecha: laFecha "si existe una opSalida en colOpcionesSalida tal que fechaSalida == laFecha entonces cupo := cupo + laCantPersonas "! !!ViajeOrganizado methodsFor: 'queries'!inicializar:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalidacantDias := unaCantDias .colEtapas := unaColEtapas .colOpcionesSalida := unaColOpSalida .colExcursiones := OrderedCollection new.! !!ViajeOrganizado methodsFor: 'queries'!agregarExcursion: unaExcursioncolExcursiones add:unaExcursion! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/29/2023 21:46'!actualizarExcursionesEnViaje: unaExcursioncolExcursiones add: unaExcursion.! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:27'!modificarFecha: fecha1 conFecha2: fecha2|fueModificada valorAux|.fueModificada := false.colOpcionesSalida keysAndValuesDo: [:clave :valor | (clave=fecha1) ifTrue:[valorAux := valor.colOpcionesSalida remove: clave. colOpcionesSalida at:fecha2 put: valorAux. fueModificada := true]].^ fueModificada.! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/29/2023 23:07'!buscaFecha: laFecha conCupo: laCantPersonas|fechaDisponible|fechaDisponible := colOpcionesSalida detect: [ :cdaOpSalida | cdaOpSalida " como comparo elementos de una dupla??"  ].^ fechaDisponible .! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:20'!verificarFecha: fecha1 conOtraFecha: fecha2|rta|rta:=true.colOpcionesSalida keysAndValuesDo: [:clave :cupo| ((clave>=fecha1) & (clave<=fecha2) & (cupo>0)) ifTrue:[rta:=true]].^ rta.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeOrganizado class	instanceVariableNames: ''!!ViajeOrganizado class methodsFor: 'constructor'!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos conCantDias:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida|nuevoViajeOrganizado|nuevoViajeOrganizado := self crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.nuevoViajeOrganizado inicializar:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida.^nuevoViajeOrganizado ! !PackageManifest subclass: #ManifestTPOFINAL	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL-Manifest'!!ManifestTPOFINAL commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestTPOFINAL class	instanceVariableNames: ''!!ManifestTPOFINAL class methodsFor: 'code-critics' stamp: 'Jere 7/28/2023 20:49'!ruleGuardingClauseRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#TPOFINAL)) #'2023-07-28T20:49:39.187-03:00') )! !----End fileIn----!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:36' prior: 33555708!inicializar: unUsuario conContra: unaContra conSistema: unSistemacampoUser := unUsuario.campoClave := unaContra.sistema := unSistema getEmpresa .self iniciarSesion. ! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:36' prior: 33555953!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := ((sistema) encontrarClienteconDNI: campoUser).        tempUsuario        ifNotNil:         [            ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete. sistema abrirVisualContratos: tempUsuario. ]                ifFalse: [ sistema error: 'Contraseña incorrecta.'].        ]         ifNil:             [sistema error: 'Usuario no existe.'].    ]    ifFalse:    [ sistema error: 'Error: no ingresó correctamente en algún campo' ]! !BotonAccion subclass: #BotonInicioSesion	instanceVariableNames: 'campoUser campoClave sistema ventanita'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:38'!inicializar: unUsuario conContra: unaContra conSistema: unSistema conVentana: unaVentanacampoUser := unUsuario.campoClave := unaContra.sistema := unSistema.ventanita:= unaVentana.self iniciarSesion. ! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:39' prior: 33597318!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser).        tempUsuario        ifNotNil:         [            ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete. ventanita abrirVisualContratos: tempUsuario. ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !!VistaUsuario methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:40' prior: 33560733!ventanaInicioSesionsuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300)."titulo"titulo := StringMorph new.titulo contents: 'Iniciar Sesion:'.self addMorph: titulo.titulo position: self topLeft + (90@55)."campo usuario"campoUsuario := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU DNI'.self addMorph: campoUsuario.campoUsuario position: self center - (campoUsuario extent/2) - (0@40).self openCenteredInWorld."campo contraseña"campoContrasenia := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU CONTRASEÑA'.self addMorph: campoContrasenia.campoContrasenia position: self center - (campoContrasenia extent/2) - (0@5).self openCenteredInWorld."boton aceptar"botonAceptar := BotonInicioSesion new.botonAceptar label: 'ACEPTAR'.botonAceptar position: self center - (botonAceptar extent/2) + (0@30) - (70@0).botonAceptar mouseAction: [botonAceptar inicializar: campoUsuario conContra: campoContrasenia conSistema: empresa conVentana:self.].self addMorph: botonAceptar.! !----SNAPSHOT----2024-01-22T10:41:17.78-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 99!!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/23/2024 00:18' prior: 33585325!encontrarClienteconDNI: unDni^colClientes detect:[:unCliente | unCliente esIgual: unDni]ifNone: [ nil ].! !BotonInicioSesion removeSelector: #inicializar:conContra:conSistema:!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 00:43'!setSistema:unSistema setVentana:unaVentanasistema :=unSistema .ventanita :=unaVentana .! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 00:45' prior: 33598279!inicializar: unUsuario conContra: unaContra conSistema: unSistema conVentana: unaVentanacampoUser := unUsuario.campoClave := unaContra.self  setSistema: unSistema  setVentana: unaVentana. self mouseAction: [ self iniciarSesion]. ! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 00:47' prior: 33598592!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (ventanita getEmpresa  encontrarClienteconDNI: campoUser).        tempUsuario        ifNotNil:         [            ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete. ventanita abrirVisualContratos: tempUsuario. ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/23/2024 00:49' prior: 33600680!encontrarClienteconDNI: unDni^colClientes detect:[:unCliente | unCliente = unDni]ifNone: [ nil ].! !!VisualEmpresa methodsFor: 'initialization' stamp: 'Giuuuuli 1/23/2024 01:14'!inicializarConSISTEMA:unSistemasuper initialize.self iniciarSistema: unSistema.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100).origen := self innerBounds origin."texto fecha hoy"fechaHoy := StringMorph new.fechaHoy contents: Date today asString.self addMorph: fechaHoy.fechaHoy position: origen + (5@5)."texto seleccione su rol"tituloMenu := StringMorph new.tituloMenu contents: 'SELECCIONE SU ROL'.tituloMenu position: origen + (160@30).self addMorph: tituloMenu."boton usuario admin"botonUserAdmin := BotonAccion new.self addMorph: botonUserAdmin.botonUserAdmin label: 'ADMINISTRADOR'.botonUserAdmin position: origen + (260@60)."boton usuario normal"botonUserNormal := BotonAccion new.self addMorph: botonUserNormal.botonUserNormal label: 'USUARIO'.botonUserNormal position: origen + (100@60).botonUserNormal mouseAction: [self delete. self abrirInicioSesion]. "abre el inicio de sesion""agregar clientebotonCliente := BotonAccion new.botonCliente label: 'AGREGAR CLIENTE'.botonCliente mouseAction: [nombre := UIManager default	request: 'What''s your name?'	initialAnswer: 'no name'].self addMorph: botonCliente.botonCliente position: origen + (5@25)."self openCenteredInWorld.! !!VisualEmpresa class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 01:14'!abrirVisualEmpresaConSistema:unSistema|aux|.aux := VisualEmpresa new.aux inicializarConSISTEMA: unSistema ! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 01:15' prior: 33557688!iniciarSistema: unSistemaempresa := unSistema.VisualEmpresa abrirVisualEmpresaConSistema: unSistema .! !----QUIT/NOSAVE----2024-01-23T01:23:21.575-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 46056!!Biblioteca class methodsFor: 'as yet unclassified'!crearConId: unId direccion: unaDireccion nombre: unNombre telefono: unTelefono nombreRepresentante: unNombreRepresentante|unaBiblioteca|unaBiblioteca := self new.unaBiblioteca inicializarConId:  unId direccion: unaDireccion nombre: unNombre telefono: unTelefono    nombreRepresentante: unNombreRepresentante.^unaBiblioteca! !!Biblioteca methodsFor: 'as yet unclassified'!añadirLibro: unLibrocolLibros add: unLibro.self changed.^ true! !!Biblioteca methodsFor: 'as yet unclassified'!devolverPrestamo: unDni|prestamo|prestamo := colPrestamos detect: [ :p | p dni = unDni ].colPrestamos remove: prestamo.prestamo libros do: [ :l | l desmarcar ].self changed: {2. prestamo.}.! !!Biblioteca methodsFor: 'accessing'!direccion	^ direccion! !!Biblioteca methodsFor: 'accessing'!direccion: anObject	direccion := anObject! !!Biblioteca methodsFor: 'as yet unclassified'!getPrestamos^ colPrestamos ! !!Biblioteca methodsFor: 'as yet unclassified'!getPrestamosDeUsuario: unDni|colRetorno|colRetorno := colPrestamos select: [ :p | p dni = unDni].^ colRetorno ! !!Biblioteca methodsFor: 'accessing'!id	^ id! !!Biblioteca methodsFor: 'accessing'!id: anObject	id := anObject! !!Biblioteca methodsFor: 'as yet unclassified'!inicializarConId: unId direccion: unaDireccion nombre: unNombre telefono: unTelefono nombreRepresentante: unNombreRepresentanteid := unId.direccion := unaDireccion.nombre := unNombre .telefono := unTelefono.nombreRepresentante := unNombreRepresentante.colLibros := OrderedCollection new.colPrestamos := OrderedCollection new.cantDiasPrestamo := 7.ultIdPrestamo := 0.! !!Biblioteca methodsFor: 'as yet unclassified'!libros^ colLibros! !!Biblioteca methodsFor: 'accessing'!nombre	^ nombre! !!Biblioteca methodsFor: 'accessing'!nombre: anObject	nombre := anObject! !!Biblioteca methodsFor: 'accessing'!nombreRepresentante	^ nombreRepresentante! !!Biblioteca methodsFor: 'accessing'!nombreRepresentante: anObject	nombreRepresentante := anObject! !!Biblioteca methodsFor: 'as yet unclassified'!quitarLibro: unLibrocolLibros remove: unLibro .self changed.^ true! !!Biblioteca methodsFor: 'as yet unclassified'!registrarPrestamoConLibros: unaColLibros deUsuario: unUsuario|unPrestamo cantLibros tienePrestamo nuevaId colVerificada colPlus esPlus|"chequeos:	detecta si el usuario está multado	detecta si el usuario tiene un préstamo activo en la colección de préstamos	1. Cantidad de libros entre 1 y 5	2. Que los libros pertenezcan a la biblioteca	3. Que los libros pedidos que ya estén en préstamo se quiten de la solicitud (se creará una nueva colección con libros disponibles)"esPlus := unUsuario esPlus.colPlus := OrderedCollection new.(unUsuario estaMultado) ifTrue: [^ false ]ifFalse:[ colVerificada := OrderedCollection new.ultIdPrestamo := ultIdPrestamo + 1.nuevaId := ((id)asString, '-', (ultIdPrestamo)asString)asString."detecta si el Usuario tiene un préstamo activo en la colección de préstamos"tienePrestamo := (colPrestamos anySatisfy:  [ :xPrestamo | xPrestamo dni = unUsuario dni]).tienePrestamo ifTrue: [^ false ]ifFalse: 	[	cantLibros := unaColLibros size.		(cantLibros > 0 & cantLibros <= 5) ifFalse: [^ false ]	ifTrue: 	[ unaColLibros do: [ :unLibro | (unLibro estaEnDeuda) 												ifFalse: [																(unLibro esAudioLibro)																ifTrue: [ 																			esPlus 																			ifTrue: [ colPlus add: unLibro. unLibro marcarConDni: unUsuario dni ]																			ifFalse: [ ^ false ] ] 																ifFalse: [ colVerificada add: unLibro. unLibro marcarConDni: unUsuario dni].															]												ifTrue:  [^ false].   ].											   	(colVerificada isEmpty) ifFalse: 		[		"Si la colección de libros verificada no es vacía, se crea el préstamo con los libros disponibles"			unPrestamo := Prestamo new. 		unPrestamo inicializarPrestamoConId: nuevaId conLibros: colVerificada deUsuario: unUsuario conDias: cantDiasPrestamo enBib: id.		colPrestamos add: unPrestamo 		].	(colPlus isEmpty) ifFalse: 		[		"Si la colección de libros verificada plus no es vacía, se crea el préstamo con los libros disponibles"			unPrestamo := Prestamo new. 		unPrestamo inicializarPrestamoConId: nuevaId conLibros: colPlus deUsuario: unUsuario conDias: ((cantDiasPrestamo/2) ceiling) enBib: id.		colPrestamos add: unPrestamo 		].	]	]] ."devuelve un arreglo dinamico con 1. la operacion realizada (1 adicion 2 removicion) y el prestamo en cuestion."self changed: {1. unPrestamo.}.^ true! !!Biblioteca methodsFor: 'as yet unclassified'!registrarPrestamoVencidoConLibros: unaColLibros deUsuario: unUsuario "metodo utilizado en mensaje default de Sistema para registrar un prestamo vencido a modo de testeo"|unPrestamo cantLibros tienePrestamo nuevaId colVerificada colPlus esPlus|"chequeos:	detecta si el usuario está multado	detecta si el usuario tiene un préstamo activo en la colección de préstamos	1. Cantidad de libros entre 1 y 5	2. Que los libros pertenezcan a la biblioteca	3. Que los libros pedidos que ya estén en préstamo se quiten de la solicitud (se creará una nueva colección con libros disponibles)"esPlus := unUsuario esPlus.colPlus := OrderedCollection new.(unUsuario estaMultado) ifTrue: [Transcript show: 1.^ false ]ifFalse:[ colVerificada := OrderedCollection new.ultIdPrestamo := ultIdPrestamo + 1.nuevaId := ((id)asString, '-', (ultIdPrestamo)asString)asString."detecta si el Usuario tiene un préstamo activo en la colección de préstamos"tienePrestamo := (colPrestamos anySatisfy:  [ :xPrestamo | xPrestamo dni = unUsuario dni]).tienePrestamo ifTrue: [Transcript show: 2. ^ false ]ifFalse: 	[	cantLibros := unaColLibros size.		(cantLibros > 0 & cantLibros <= 5) ifFalse: [Transcript show: 3. ^ false ]	ifTrue: 	[ unaColLibros do: [ :unLibro | (unLibro estaEnDeuda) 												ifFalse: [																(unLibro esAudioLibro)																ifTrue: [ 																			esPlus 																			ifTrue: [ colPlus add: unLibro ]																			ifFalse: [ Transcript show: 4.^ false ] ] 																ifFalse: [ colVerificada add: unLibro. ].															]												ifTrue:  [Transcript show: 6.^ false].   ].											   	(colVerificada isEmpty) ifFalse: 		[		"Si la colección de libros verificada no es vacía, se crea el préstamo con los libros disponibles"			unPrestamo := Prestamo new. 		unPrestamo inicializarPrestamoConId: nuevaId conLibros: colVerificada deUsuario: unUsuario conDias: cantDiasPrestamo enBib: id.		colPrestamos add: unPrestamo 		].	(colPlus isEmpty) ifFalse: 		[		"Si la colección de libros verificada plus no es vacía, se crea el préstamo con los libros disponibles"			unPrestamo := Prestamo new. 		unPrestamo inicializarPrestamoConId: nuevaId conLibros: colPlus deUsuario: unUsuario conDias: ((cantDiasPrestamo/2) ceiling) enBib: id.		colPrestamos add: unPrestamo 		].	]	]] .unPrestamo vencer."devuelve un arreglo dinamico con 1. la operacion realizada (1 adicion 2 removicion) y el prestamo en cuestion"self changed: {1. unPrestamo.}.^ true! !!Biblioteca methodsFor: 'initialization'!setColLibros: unaColcolLibros := unaCol.! !!Biblioteca methodsFor: 'initialization'!setDiasPrestamo: unaCantDiascantDiasPrestamo := unaCantDias .! !!Biblioteca methodsFor: 'accessing'!telefono	^ telefono! !!Biblioteca methodsFor: 'accessing'!telefono: anObject	telefono := anObject! !!Audiolibro methodsFor: 'as yet unclassified'!esAudioLibro^ true! !!Libro class methodsFor: 'as yet unclassified'!crearConNombre: unNombre editorial: unaEd anioEdicion: unAnio autores: unaColA|unLibro|unLibro := self new.unLibro inicializarConNombre:  unNombre editorial: unaEd anioEdicion: unAnio autores: unaColA.^ unLibro! !!Libro methodsFor: 'accessing'!anioEdicion	^ anioEdicion! !!Libro methodsFor: 'accessing'!anioEdicion: anObject	anioEdicion := anObject! !!Libro methodsFor: 'accessing'!autores	^ autores! !!Libro methodsFor: 'accessing'!autores: anObject	autores := anObject! !!Libro methodsFor: 'as yet unclassified'!desmarcarenDeuda := false.dniTemp := 0.! !!Libro methodsFor: 'accessing'!editorial	^ editorial! !!Libro methodsFor: 'accessing'!editorial: anObject	editorial := anObject! !!Libro methodsFor: 'as yet unclassified'!esAudioLibro^ false! !!Libro methodsFor: 'as yet unclassified'!estaEnDeuda^ enDeuda! !!Libro methodsFor: 'as yet unclassified'!inicializarConNombre: unNombre editorial: unaEd anioEdicion: unAnio autores: unaColAnombre := unNombre.editorial := unaEd.anioEdicion := unAnio .autores := unaColA .enDeuda := false.dniTemp := 0.! !!Libro methodsFor: 'as yet unclassified'!marcarConDni: unDnienDeuda := true.dniTemp := unDni.! !!Libro methodsFor: 'accessing'!nombre	^ nombre! !!Libro methodsFor: 'accessing'!nombre: anObject	nombre := anObject! !!Prestamo methodsFor: 'as yet unclassified'!dni^ dniUsuario ! !!Prestamo methodsFor: 'accessing'!fechaLimite	^ fechaLimite! !!Prestamo methodsFor: 'accessing'!fechaRealizacion	^ fechaRealizacion! !!Prestamo methodsFor: 'accessing'!id	^ id! !!Prestamo methodsFor: 'accessing'!idBiblioteca^ idBiblioteca ! !!Prestamo methodsFor: 'as yet unclassified'!inicializarPrestamoConId: unaId conLibros: unaColLibros deUsuario: unUsuario conDias: unaCantDias enBib: otraIdid := unaId.libros := unaColLibros .idBiblioteca := otraId.dniUsuario := unUsuario dni.fechaRealizacion := Date today.fechaLimite := (fechaRealizacion addDays: unaCantDias).! !!Prestamo methodsFor: 'accessing'!libros	^ libros! !!Prestamo methodsFor: 'as yet unclassified'!vencer"metodo utilizado a modo de testeo"fechaRealizacion := fechaRealizacion subtractDays: 12.fechaLimite := fechaLimite subtractDays: 12.! !!Sistema class methodsFor: 'accessing'!default|libro1 libro2 libro3 libro4 libro5 libro6 bib1 bib2 bib3 bib4 bib5 bib6 user1 colBUser1 colBUser2 user2 user3 col1 col2 col3 col4 col5 colA colAllLibros colAllB colAllU sistema|colA := OrderedCollection new.colA add: 'Marcel Proust'.colA add: 'James Joyce'.colA add: 'Miguel de Cervantes'.colA add: 'Gabriel Garcia Marquez'.colA add: 'Maxwell Cresswell'; add: 'George Hughes'.colA add: 'Ramez Elmasri'; add: 'Shamkant Navathe'.libro1 := Libro crearConNombre: 'In Search of Lost Time' editorial: 'Grasset' anioEdicion: 1913 autores: {colA at: 1}.libro2 := Audiolibro crearConNombre: 'Ulysses' editorial: 'Shakespeare and Company' anioEdicion: 1922 autores: {colA at: 2}.libro3 := Libro crearConNombre: 'Don Quijote' editorial: '	Francisco de Robles' anioEdicion: 1605 autores: {colA at: 3}.libro4 := Libro crearConNombre: 'Cien años de soledad' editorial: 'Editorial Sudamericana' anioEdicion: 1967 autores: {colA at: 4}.libro5 := Libro crearConNombre: 'A New Introduction to Modal Logic' editorial: 'Charles Scribner''s Sons' anioEdicion: 1925 autores: {colA at: 5. colA at: 6}.libro6 := Libro crearConNombre: 'Fundamentals of Database Systems' editorial: 'Richard Bentley' anioEdicion: 1851 autores: {colA at: 7. colA at: 8}.colAllLibros := OrderedCollection new.colAllLibros add: libro1; add: libro2; add: libro3; add: libro4; add: libro5; add: libro6.bib1 := Biblioteca crearConId: 1 direccion: 'Irigoyen 280' nombre: 'Biblioteca Pública Provincial del Neuquén' telefono: 23456 nombreRepresentante: 'Yo'.bib1 setColLibros: colAllLibros deepCopy.bib2 := Biblioteca crearConId: 2 direccion: 'Boulevard Francisco Arro 352' nombre: 'Biblioteca Pública de Carmen de Patagones' telefono: 12345 nombreRepresentante: 'Zo'.bib2 setColLibros: colAllLibros deepCopy.bib3 := Biblioteca crearConId: 3 direccion: 'Dr. Mantero 318' nombre: 'Biblioteca Maestro Trombotto' telefono: 12345 nombreRepresentante: 'Zo'.bib3 setColLibros: colAllLibros deepCopy.bib4 := Biblioteca crearConId: 4 direccion: 'Buenos Aires 131' nombre: 'Biblioteca Provincial 9 de Julio' telefono: 12345 nombreRepresentante: 'Zo'.bib4 setColLibros: colAllLibros deepCopy.bib5 := Biblioteca crearConId: 5 direccion: 'Dr. Fleming 240' nombre: 'Biblioteca Ricardo Güiraldes' telefono: 12345 nombreRepresentante: 'Zo'.bib5 setColLibros: colAllLibros deepCopy.bib6 := Biblioteca crearConId: 6 direccion: 'República Bolivariana de Venezuela 1538' nombre: 'Biblioteca Martín del Barco Centenera' telefono: 12345 nombreRepresentante: 'Zo'.bib6 setColLibros: colAllLibros deepCopy.colAllB := OrderedCollection new.colAllB add: bib1; add: bib2; add: bib3; add: bib4; add: bib5; add: bib6.colBUser1 := OrderedCollection new. colBUser1 add: bib1; add: bib4; add: bib6.colBUser2 := OrderedCollection new. colBUser2 add: bib1; add: bib2; add: bib3; add: bib5.user1 := UsuarioComun crearConNombre: 'Ignacio' apellido: 'Navarro' dni: 44481878 contraseña: 'asd'. user1 setBibliotecasInteres: colBUser1  .user2 := UsuarioPlus crearConNombre: 'Sebastián' apellido: 'Navarro' dni: 32123456 contraseña: 'zxc'. user2 setBibliotecasInteres: colBUser2 . user2 pagarCuota.user3 := UsuarioComun crearConNombre: 'Pepe' apellido: 'Mujica' dni: 12345678 contraseña: 'asd'. user3 setBibliotecasInteres: colAllB  .colAllU := OrderedCollection new.colAllU add: user1; add: user2; add: user3.col1 := OrderedCollection new. col1 add: (bib1 libros at: 1); add: (bib1 libros at: 5)."col1 add: libro1; add: libro5. B1"col2 := OrderedCollection new. "col2 add: libro2; add: libro3; add: libro4. B2"col2 add: (bib1 libros at: 2); add: (bib1 libros at: 3); add: (bib1 libros at: 4).col3 := OrderedCollection new. "col3 add: libro5; add: libro6. B3"col3 add: (bib4 libros at: 5); add: (bib4 libros at: 6).col4 := OrderedCollection new. "col4 add: libro5; add: libro6. B5"col4 add: (bib5 libros at: 5); add: (bib5 libros at: 6).col5 := OrderedCollection new. "col3 add: libro2; add: libro6. B1"col5 add: (bib3 libros at: 2); add: (bib3 libros at: 3).bib1 registrarPrestamoConLibros: col1 deUsuario: user1.bib4 registrarPrestamoConLibros: col3 deUsuario: user1.bib1 registrarPrestamoConLibros: col2 deUsuario: user2.bib5 registrarPrestamoConLibros: col4 deUsuario: user3.bib3 registrarPrestamoVencidoConLibros: col5 deUsuario: user3.sistema := self new.sistema inicializarSistemaConColBibliotecas: colAllB colUsuarios: colAllU colAutores: 1 cantDiasMulta: 7.^ sistema! !!Sistema methodsFor: 'as yet unclassified'!agregarBiblioteca: unaBibliotecacolBibliotecas add: unaBiblioteca .! !!Sistema methodsFor: 'usuarios'!agregarUsuario: unUsuario(self buscarUsuarioConDni: (unUsuario dni)) ifNil: [ colUsuarios add: unUsuario . ] ifNotNil: [ ^false ].^ true! !!Sistema methodsFor: 'as yet unclassified'!añadirAutor: unAutor(colAutores anySatisfy: [ :a | a = unAutor ]) ifFalse: [colAutores add: unAutor].! !!Sistema methodsFor: 'as yet unclassified'!añadirLibro: unLibro enBib: unaBibliotecaunaBiblioteca añadirLibro: unLibro.(unLibro autores) do: [ :a | self añadirAutor: a ]. ! !!Sistema methodsFor: 'as yet unclassified'!buscarBibliotecaConId: unaId^ colBibliotecas detect: [ :b | b id = (unaId asInteger) ] ifNone: [ nil ].! !!Sistema methodsFor: 'as yet unclassified'!buscarUsuarioConDni: unDni^ colUsuarios detect: [ :u | u dni = unDni asNumber] ifNone: [ nil ].! !!Sistema methodsFor: 'accessing'!cantDiasMulta^ cantDiasMulta! !!Sistema methodsFor: 'as yet unclassified'!devolverPrestamo: unDni deBib: unaIdBib(self buscarBibliotecaConId: unaIdBib) devolverPrestamo: unDni.self changed.! !!Sistema methodsFor: 'as yet unclassified'!eliminarUsuario: unDnicolUsuarios remove: (self buscarUsuarioConDni: unDni) ifAbsent: [^false].^true! !!Sistema methodsFor: 'as yet unclassified'!generarListadoUsuariosRetrasados|colRetorno|colRetorno := OrderedCollection new.colUsuarios do: [ :u | |idBiblioteca| idBiblioteca :=  self verificarMulta: u dni. idBiblioteca ifNotNil: [ colRetorno add: {u. self verificarMulta: u dni.} ] ].^ colRetorno! !!Sistema methodsFor: 'as yet unclassified'!getAutores^ colAutores   ! !!Sistema methodsFor: 'as yet unclassified'!getBibliotecas^ colBibliotecas ! !!Sistema methodsFor: 'as yet unclassified'!getPrestamosDeUsuario: unDni|colTotal colAux|colTotal := OrderedCollection new.colBibliotecas do: [ :b | colAux := (b getPrestamosDeUsuario: unDni). colAux ifNotEmpty: [colTotal addAll: colAux]. ].^ colTotal ! !!Sistema methodsFor: 'as yet unclassified'!getUsuarios^ colUsuarios  ! !!Sistema methodsFor: 'as yet unclassified'!inicializarSistemaConColBibliotecas: colB colUsuarios: colU colAutores: colA cantDiasMulta: unKcolBibliotecas := colB.colAutores := colA.colUsuarios := colU.cantDiasMulta := unK."|controlDiario presTemp|controlDiario := 	[ Delay forSeconds: 86400.	colBibliotecas do: [ :b | presTemp := b getPrestamos. presTemp do: [ :p | (p fechaLimite = Date tomorrow) ifTrue: [ (colUsuarios detect: [ :u | u dni = p dni ]) multarConDias: 7]  ]  ]	] newProcess.controlDiario name: 'Control Prestamos'.controlDiario resume."! !!Sistema methodsFor: 'as yet unclassified'!obtenerIDBibliotecaSiguientecolBibliotecas ifNil: [ ^ 1 ].^ colBibliotecas size + 1 ! !!Sistema methodsFor: 'as yet unclassified'!verificarMulta: unDni|col retorno usuario|usuario := self buscarUsuarioConDni: unDni.col := (self getPrestamosDeUsuario: unDni).retorno := (col detect: [ :p | (p fechaLimite) isBefore: (Date today) ] ifNone: [^ nil]).(retorno) ifNotNil: [ usuario multarConDias: 7 ]."retorna la primera biblioteca que detecta deuda, sino nil"^ retorno idBiblioteca! !!Usuario class methodsFor: 'initialization'!crearConNombre: unNombre apellido: unApellido dni: unDni contraseña: unaContraseña|unUsuario|unUsuario := self new.unUsuario inicializarConNombre: unNombre apellido: unApellido dni: unDni contraseña: unaContraseña.^ unUsuario! !!Usuario methodsFor: 'accessing'!apellido	^ apellido! !!Usuario methodsFor: 'accessing'!apellido: anObject	apellido := anObject! !!Usuario methodsFor: 'initialization'!bibliotecasInteres ^ bibInteres ! !!Usuario methodsFor: 'accessing'!contrasenia	^ contrasenia! !!Usuario methodsFor: 'accessing'!contrasenia: anObject	contrasenia := anObject! !!Usuario methodsFor: 'as yet unclassified'!desmultarmultado := false.! !!Usuario methodsFor: 'accessing'!dni	^ dni! !!Usuario methodsFor: 'accessing'!dni: anObject	dni := anObject! !!Usuario methodsFor: 'as yet unclassified'!esPlus"se pretende crear usuarios de acuerdo a sus subclases"^ self subclassResponsibility  ! !!Usuario methodsFor: 'accessing'!estaAlDiaConCuota^estaAlDiaConCuota! !!Usuario methodsFor: 'as yet unclassified'!estaMultado^ multado ! !!Usuario methodsFor: 'as yet unclassified'!inicializarConNombre: unNombre apellido: unApellido dni: unDni contraseña: unaContraseñaapellido := unApellido.nombre := unNombre.dni := unDni.contrasenia := unaContraseña.multado := false.estaAlDiaConCuota := false.! !!Usuario methodsFor: 'as yet unclassified'!multarmultado := true.! !!Usuario methodsFor: 'as yet unclassified'!multarConDias: cantDiasmultado := true.fechaLimite := (Date today) addDays: cantDias.! !!Usuario methodsFor: 'instance creation'!new"es abstracta, no se pueden crear instancias de Usuario (igual, esto no funciona)"^ self subclassResponsibility.! !!Usuario methodsFor: 'accessing'!nombre	^ nombre! !!Usuario methodsFor: 'accessing'!nombre: anObject	nombre := anObject! !!Usuario methodsFor: 'as yet unclassified'!pagarCuotaestaAlDiaConCuota := true.! !!Usuario methodsFor: 'initialization'!setBibliotecasInteres: colBibbibInteres := colBib .! !!UsuarioComun methodsFor: 'as yet unclassified'!cambiarModalidad: unSistema|usuarioCambiado|usuarioCambiado := UsuarioPlus crearConNombre: nombre apellido: apellido dni: dni contraseña: contrasenia .(self estaAlDiaConCuota) ifTrue: [  (unSistema eliminarUsuario: (self dni)).(unSistema agregarUsuario: usuarioCambiado).usuarioCambiado setBibliotecasInteres: (self bibliotecasInteres).] ifFalse:[^ self].self changed.^ usuarioCambiado! !!UsuarioComun methodsFor: 'as yet unclassified'!esPlus^ false! !!UsuarioPlus methodsFor: 'as yet unclassified'!cambiarModalidad: unSistema|usuarioCambiado|usuarioCambiado := UsuarioComun crearConNombre: nombre apellido: apellido dni: dni contraseña: contrasenia ."no hay errores en esta fase (no chequeo si devuelven true o false)"(unSistema eliminarUsuario: (self dni)).(unSistema agregarUsuario: usuarioCambiado).usuarioCambiado setBibliotecasInteres: (self bibliotecasInteres).self changed.^ usuarioCambiado ! !!UsuarioPlus methodsFor: 'as yet unclassified'!esPlus^ true! !"SistemaBiblioteca"!!ManifestSistemaBibliotecaGUI commentStamp: '' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!!UsuarioAtrasadoDataSource commentStamp: '' prior: 0!Esta clase no solo contiene usuarios, sino también la biblioteca en la que adeudan, en forma de tuplas (x,y), siendo x el objeto Usuario e y la id de la biblioteca!!ManifestSistemaBibliotecaGUI class methodsFor: 'code-critics'!ruleGuardingClauseRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#SistemaBiblioteca_GUI)) #'2023-12-10T14:48:06.372-03:00') )! !!ManifestSistemaBibliotecaGUI class methodsFor: 'code-critics'!ruleLongMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#SistemaBiblioteca_GUI)) #'2023-11-30T20:28:22.487-03:00') )! !!ManifestSistemaBibliotecaGUI class methodsFor: 'code-critics'!ruleReGuardClauseRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#SistemaBiblioteca_GUI)) #'2023-12-10T14:48:04.346-03:00') )! !!ManifestSistemaBibliotecaGUI class methodsFor: 'code-critics'!ruleTempsReadBeforeWrittenRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#SistemaBiblioteca_GUI)) #'2023-11-30T20:28:26.73-03:00') )! !!ManifestSistemaBibliotecaGUI class methodsFor: 'code-critics'!ruleUnclassifiedMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#SistemaBiblioteca_GUI)) #'2023-11-30T20:28:29.31-03:00') )! !!BotonCerrar_UI methodsFor: 'as yet unclassified'!initializesuper initialize.self label: ('cerrar' asText allBold). self extent: 45@20; color: Color red; borderColor: Color darkGray ; borderWidth: 3.! !!BotonCerrar_UI methodsFor: 'event handling'!mouseUp: unEventosuper mouseUp: unEvento.self owner delete.! !!BotonGenerico_UI methodsFor: 'as yet unclassified'!definirAccion: unaAccionaccion := unaAccion .! !!BotonGenerico_UI methodsFor: 'as yet unclassified'!deshabilitarhabilitado := false.self color: Color darkGray.! !!BotonGenerico_UI methodsFor: 'as yet unclassified'!habilitarhabilitado := true.self color: Color orange.! !!BotonGenerico_UI methodsFor: 'as yet unclassified'!inicializarConAccion: unaAccionaccion := unaAccion .! !!BotonGenerico_UI methodsFor: 'initialization'!initializesuper initialize.self color: Color orange.habilitado := true.! !!BotonGenerico_UI methodsFor: 'event handling'!mouseUp: unEventosuper mouseUp: unEvento.habilitado ifTrue:[accion value. ].! !!BotonGenerico_UI methodsFor: 'as yet unclassified'!textoBoton: unTextosuper label: unTexto font: (LogicalFont familyName: 'Roboto' pointSize: 14); color: Color orange.! !!BotonIniciarSesion_UI methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystemUI := unSistema.! !!BotonIniciarSesion_UI methodsFor: 'as yet unclassified'!inicializarConSistema: unSistema campoDNI: unCampoDNI campoPass: unCampoPasscampoDNI := unCampoDNI.campoPass := unCampoPass.self asignarSistema: unSistema.self definirAccion: [ self iniciarSesion ].self textoBoton: 'Iniciar sesión'.! !!BotonIniciarSesion_UI methodsFor: 'as yet unclassified'!iniciarSesion((campoDNI getText) asString = 'admin')ifTrue: [  	"puede ser admin"	(((campoPass getText) asString) = 'admin')	ifTrue: [ self owner delete. systemUI vistaAdmin. ]	ifFalse: [ systemUI error: 'Contraseña incorrecta.' ].]ifFalse: [	"es usuario comun"	((campoDNI getText ~= '')  & (campoDNI getText asString isAllDigits) & (campoPass getText ~= ''))	ifTrue: 	[ 		|tempUsuario|		tempUsuario := ((systemUI getSistema) buscarUsuarioConDni: (campoDNI getText)).		tempUsuario		ifNotNil: 		[			((tempUsuario contrasenia) asString = (campoPass getText) asString)						ifTrue: [ self owner delete. systemUI vistaUsuario: (campoDNI getText) asNumber . ]				ifFalse: [ systemUI error: 'Contraseña incorrecta.' ].		] 		ifNil: 			[systemUI error: 'Usuario no existe.'].		]	ifFalse:	[ systemUI error: 'Error: no ingresó correctamente en algún campo' ]]! !!BotonRegistrar_UI methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystemUI := unSistema.! !!BotonRegistrar_UI methodsFor: 'as yet unclassified'!inicializarConSistema: unSistemaself asignarSistema: unSistema.self definirAccion: [ self registrar ].self textoBoton: 'Registrar'. ! !!BotonRegistrar_UI methodsFor: 'as yet unclassified'!registrarsystemUI vistaRegistro . self owner delete. ! !!BibliotecaDataSource methodsFor: 'accessing'!cellColumn: column row: rowIndex(column id = 'ID') ifTrue: [ ^ self idCellColumn: column row: rowIndex ].(column id = 'Nombre') ifTrue: [ ^ self nombreCellColumn: column row: rowIndex ].(column id = 'Dirección') ifTrue: [ ^ self direccionCellColumn: column row: rowIndex ].(column id = 'Teléfono') ifTrue: [ ^ self telefonoCellColumn: column row: rowIndex ].(column id = 'Nombre representante') ifTrue: [ ^ self nombreRCellColumn: column row: rowIndex ].(column id = 'Préstamos') ifTrue: [ ^ self prestamosCellColumn: column row: rowIndex ].! !!BibliotecaDataSource methodsFor: 'as yet unclassified'!direccionCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) direccion) asStringMorph;		yourself! !!BibliotecaDataSource methodsFor: 'as yet unclassified'!idCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) id) asStringMorph;		yourself! !!BibliotecaDataSource methodsFor: 'as yet unclassified'!nombreCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) nombre) asStringMorph;		yourself! !!BibliotecaDataSource methodsFor: 'as yet unclassified'!nombreRCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) nombreRepresentante) asStringMorph;		yourself! !!BibliotecaDataSource methodsFor: 'as yet unclassified'!prestamosCellColumn: column row: rowIndex|tabla boton|boton := BotonGenerico_UI new.tabla := Tabla_UI crearPConDataSource: (PrestamoDataSource elements: (self elementAt: rowIndex) getPrestamos ) ancho: 500 altura: 200.^ FTCellMorph new		addMorphBack: (boton definirAccion: [Ventana_UI crearConMorph: tabla]; label: 'Ver préstamos'; color: (Color r: 0.4 g: 0.8 b: 0.6));		yourself! !!BibliotecaDataSource methodsFor: 'as yet unclassified'!telefonoCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) telefono) asStringMorph;		yourself! !!LibroDataSource methodsFor: 'as yet unclassified'!anioCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) anioEdicion) asStringMorph;		yourself! !!LibroDataSource methodsFor: 'as yet unclassified'!autoresCellColumn: column row: rowIndex|colAutores string size iter|colAutores := (elements at: rowIndex) autores.string := colAutores at: 1.size := colAutores size.iter := 1.colAutores do: [ :a | (iter > 1) ifTrue: [ string := string, (colAutores at: iter) ]. (size = iter) ifFalse: [ string := string, ', '. iter := iter + 1 ] ].^ FTCellMorph new		addMorphBack: (string) asStringMorph;		yourself! !!LibroDataSource methodsFor: 'accessing'!cellColumn: column row: rowIndex(column id = 'Nombre') ifTrue: [ ^ self nombreCellColumn: column row: rowIndex   ].(column id = 'Editorial') ifTrue: [ ^ self editorialCellColumn: column row: rowIndex  ].(column id = 'Año de publicación') ifTrue: [  ^ self anioCellColumn: column row: rowIndex ].(column id = 'Autores') ifTrue: [  ^ self autoresCellColumn: column row: rowIndex ].! !!LibroDataSource methodsFor: 'as yet unclassified'!editorialCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) editorial) asStringMorph;		yourself! !!LibroDataSource methodsFor: 'as yet unclassified'!nombreCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) nombre) asStringMorph;		yourself! !!LibroDataSource methodsFor: 'updating'!update: unCambioself tableRefresh.! !!PrestamoDataSource methodsFor: 'accessing'!cellColumn: column row: row(column id = 'ID') ifTrue: [ ^ self idCellColumn: column row: row ].(column id = 'Fecha de realización') ifTrue: [ ^ self fechaRCellColumn: column row: row ].(column id = 'Fecha límite') ifTrue: [ ^ self fechaLCellColumn: column row: row ].(column id = 'Libros') ifTrue: [ ^ self librosCellColumn: column row: row ].! !!PrestamoDataSource methodsFor: 'as yet unclassified'!fechaLCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) fechaLimite) asStringMorph;		yourself! !!PrestamoDataSource methodsFor: 'as yet unclassified'!fechaRCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) fechaRealizacion) asStringMorph;		yourself! !!PrestamoDataSource methodsFor: 'as yet unclassified'!idCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) id) asStringMorph;		yourself! !!PrestamoDataSource methodsFor: 'as yet unclassified'!librosCellColumn: column row: rowIndex|tabla boton|boton := BotonGenerico_UI new.tabla := Tabla_UI crearLConDataSource: (LibroDataSource elements: ((elements at: rowIndex) libros)) ancho: 800 altura: 300.^ FTCellMorph new		addMorphBack: (boton definirAccion: [Ventana_UI crearConMorph: tabla]; label: 'Ver libros';color: (Color r: 0.4 g: 0.8 b: 0.6));		yourself! !!PrestamoDataSource methodsFor: 'updating'!update: unCambio"debe informarse que operacion se realizo, ya que la coleccion de prestamos de la tabla no apunta a la coleccion de prestamos de cada biblioteca, y por ende no se reflejan los cambios en la coleccion de la tabla"((unCambio at: 1) = 1) ifTrue: [ elements add: (unCambio at: 2). ].((unCambio at: 1) = 2) ifTrue: [ elements remove: (unCambio at: 2). ].self tableRefresh.! !!UsuarioAtrasadoDataSource class methodsFor: 'as yet unclassified'!crear: unSistema|unaDS|unaDS := self elements: unSistema getUsuarios .unaDS asignarSistema: unSistema .^ unaDS! !!UsuarioAtrasadoDataSource class methodsFor: 'as yet unclassified'!elements: unaCol conSistema: unSistema|ds|ds := super elements: unaCol.ds asignarSistema: unSistema.^ ds! !!UsuarioAtrasadoDataSource methodsFor: 'as yet unclassified'!apellidoCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: (((elements at: rowIndex) at: 1) apellido) asStringMorph;		yourself! !!UsuarioAtrasadoDataSource methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!UsuarioAtrasadoDataSource methodsFor: 'accessing'!cellColumn: column row: rowIndex(column id = 'DNI') ifTrue: [ ^ self dniCellColumn: column row: rowIndex ].(column id = 'Nombre') ifTrue: [ ^ self nombreCellColumn: column row: rowIndex ].(column id = 'Apellido') ifTrue: [ ^ self apellidoCellColumn: column row: rowIndex ].(column id = 'Multado') ifTrue: [ ^ self multaCellColumn: column row: rowIndex ].(column id = 'Biblioteca en la que adeuda') ifTrue: [ ^ self idBibliotecaCellColumn: column row: rowIndex ].! !!UsuarioAtrasadoDataSource methodsFor: 'as yet unclassified'!dniCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: (((elements at: rowIndex) at: 1) dni) asStringMorph;		yourself! !!UsuarioAtrasadoDataSource methodsFor: 'as yet unclassified'!idBibliotecaCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) at: 2) asStringMorph;		yourself! !!UsuarioAtrasadoDataSource methodsFor: 'as yet unclassified'!multaCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: (((elements at: rowIndex) at: 1) estaMultado) asStringMorph;		yourself! !!UsuarioAtrasadoDataSource methodsFor: 'as yet unclassified'!nombreCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: (((elements at: rowIndex) at: 1) nombre) asStringMorph;		yourself! !!UsuarioDataSource class methodsFor: 'as yet unclassified'!crear: unSistema|unaDS|unaDS := self elements: unSistema getUsuarios .unaDS asignarSistema: unSistema .^ unaDS! !!UsuarioDataSource class methodsFor: 'as yet unclassified'!elements: unaCol conSistema: unSistema|ds|ds := super elements: unaCol.ds asignarSistema: unSistema.^ ds! !!UsuarioDataSource methodsFor: 'as yet unclassified'!apellidoCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) apellido) asStringMorph;		yourself! !!UsuarioDataSource methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!UsuarioDataSource methodsFor: 'as yet unclassified'!bibInteresCellColumn: column row: rowIndex|tabla boton|boton := BotonGenerico_UI new.tabla := Tabla_UI crearBConDataSource: (BibliotecaDataSource elements: ((elements at: rowIndex) bibliotecasInteres)) ancho: 500 altura: 200.^ FTCellMorph new		addMorphBack: (boton definirAccion: [Ventana_UI crearConMorph: tabla]; label: 'Ver bibliotecas'; color: (Color r: 0.4 g: 0.8 b: 0.6));		yourself! !!UsuarioDataSource methodsFor: 'accessing'!cellColumn: column row: rowIndex(column id = 'DNI') ifTrue: [ ^ self dniCellColumn: column row: rowIndex ].(column id = 'Nombre') ifTrue: [ ^ self nombreCellColumn: column row: rowIndex ].(column id = 'Apellido') ifTrue: [ ^ self apellidoCellColumn: column row: rowIndex ].(column id = 'Multado') ifTrue: [ ^ self multaCellColumn: column row: rowIndex ].(column id = 'Bib. interés') ifTrue: [ ^ self bibInteresCellColumn: column row: rowIndex ].(column id = 'Préstamos') ifTrue: [ ^ self prestamosCellColumn: column row: rowIndex ].! !!UsuarioDataSource methodsFor: 'as yet unclassified'!dniCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) dni) asStringMorph;		yourself! !!UsuarioDataSource methodsFor: 'as yet unclassified'!multaCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) estaMultado) asStringMorph;		yourself! !!UsuarioDataSource methodsFor: 'as yet unclassified'!nombreCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) nombre) asStringMorph;		yourself! !!UsuarioDataSource methodsFor: 'as yet unclassified'!prestamosCellColumn: column row: rowIndex|tabla boton|boton := BotonGenerico_UI new.tabla := Tabla_UI crearPConDataSource: (PrestamoDataSource elements: (system getPrestamosDeUsuario: ((elements at: rowIndex) dni) )) ancho: 500 altura: 200.^ FTCellMorph new		addMorphBack: (boton definirAccion: [Ventana_UI crearConMorph: tabla]; label: 'Ver préstamos'; color: (Color r: 0.4 g: 0.8 b: 0.6));		yourself! !!Tabla_UI class methodsFor: 'as yet unclassified'!crearBConDataSource: unaDataSource ancho: unAncho altura: unaAltura|tabla columnas|tabla := self new extent: unAncho@unaAltura;addColumn: (FTColumn id: 'ID'); addColumn: (FTColumn id: 'Nombre'); addColumn: (FTColumn id: 'Dirección'); addColumn: (FTColumn id: 'Teléfono'); addColumn: (FTColumn id: 'Nombre representante');dataSource: unaDataSource;		beMultipleSelection;		beResizable;		yourself.tabla secondarySelectionColor: tabla selectionColor.columnas := (tabla columns).(columnas at: 1) width: 20.(columnas at: 2) width: 280.(columnas at: 4) width: 100.(columnas at: 5) width: 150.^ tabla ! !!Tabla_UI class methodsFor: 'as yet unclassified'!crearLConDataSource: unaDataSource ancho: unAncho altura: unaAltura|tabla columnas|tabla := self new extent: unAncho@unaAltura;addColumn: (FTColumn id: 'Nombre'); addColumn: (FTColumn id: 'Editorial'); addColumn: (FTColumn id: 'Año de publicación'); addColumn: (FTColumn id: 'Autores');dataSource: unaDataSource;		beMultipleSelection;		beResizable;		yourself.tabla secondarySelectionColor: tabla selectionColor.columnas := tabla columns.(columnas at: 1) width: 220.(columnas at: 2) width: 170.(columnas at: 3) width: 110.^ tabla ! !!Tabla_UI class methodsFor: 'as yet unclassified'!crearPConDataSource: unaDataSource ancho: unAncho altura: unaAltura|tabla|tabla := self new extent: unAncho@unaAltura;addColumn: (FTColumn id: 'ID'); addColumn: (FTColumn id: 'Fecha de realización'); addColumn: (FTColumn id: 'Fecha límite'); addColumn: (FTColumn id: 'Libros');dataSource: unaDataSource;		beMultipleSelection;		beResizable;		yourself.tabla secondarySelectionColor: tabla selectionColor.^ tabla ! !!Tabla_UI class methodsFor: 'as yet unclassified'!crearUConDataSource2: unaDataSource ancho: unAncho altura: unaAltura|tabla|"tabla para usuarios atrasados"tabla := self new extent: unAncho@unaAltura;addColumn: (FTColumn id: 'DNI'); addColumn: (FTColumn id: 'Nombre'); addColumn: (FTColumn id: 'Apellido'); addColumn: (FTColumn id: 'Multado'); addColumn: (FTColumn id: 'Biblioteca en la que adeuda');dataSource: unaDataSource;		beMultipleSelection;		beResizable;		yourself.tabla secondarySelectionColor: tabla selectionColor.^ tabla ! !!Tabla_UI class methodsFor: 'as yet unclassified'!crearUConDataSource: unaDataSource ancho: unAncho altura: unaAltura|tabla|tabla := self new extent: unAncho@unaAltura;addColumn: (FTColumn id: 'DNI'); addColumn: (FTColumn id: 'Nombre'); addColumn: (FTColumn id: 'Apellido'); addColumn: (FTColumn id: 'Multado'); addColumn: (FTColumn id: 'Bib. interés'); addColumn: (FTColumn id: 'Préstamos');dataSource: unaDataSource;		beMultipleSelection;		beResizable;		yourself.tabla secondarySelectionColor: tabla selectionColor.^ tabla ! !!Sistema_UI methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!Sistema_UI methodsFor: 'error handling'!error: unTexto|ventana texto|texto := TextMorph new contents: unTexto; color: Color lightRed; bold.ventana := self class crearVentanaConAncho: (texto width + 20) altura: (texto height + 20) titulo: 'ERROR'.ventana addMorphCentered: texto.ventana openCenteredInWorld .! !!Sistema_UI methodsFor: 'as yet unclassified'!getSistema^system! !!Sistema_UI methodsFor: 'initialization'!inicializarConSistema: unSistema"metodo abstracto"! !!Sistema_UI methodsFor: 'as yet unclassified'!iniciarMenuPrincipalConSistema: unSistemasystem := unSistema.VistaPrincipal crearConSistema: unSistema .! !!Sistema_UI methodsFor: 'as yet unclassified'!mensaje: unTexto|ventana texto|texto := TextMorph new contents: unTexto.ventana := self class crearVentanaConAncho: (texto width + 20) altura: (texto height + 20).ventana addMorphCentered: texto.ventana openCenteredInWorld .! !!Sistema_UI methodsFor: 'as yet unclassified'!mensaje: unTexto conAccion: unaAccion|ventana texto|texto := TextMorph new contents: unTexto.ventana := self class crearVentanaConAncho: (texto width + 20) altura: (texto height + 20).ventana definirAccion: unaAccion .ventana addMorphCentered: texto.ventana openCenteredInWorld .! !!Sistema_UI methodsFor: 'as yet unclassified'!vistaAdmin^ VistaAdmin crearConSistema: system! !!Sistema_UI methodsFor: 'as yet unclassified'!vistaPrestamo: unDni^ VistaPrestamo crearConSistema: system usuario: unDni! !!Sistema_UI methodsFor: 'as yet unclassified'!vistaPrincipal^ (VistaPrincipal crearConSistema: system)! !!Sistema_UI methodsFor: 'as yet unclassified'!vistaRegistro^ VistaRegistro crearConSistema: system! !!Sistema_UI methodsFor: 'as yet unclassified'!vistaRegistroOld|vista campoDNI campoNombre campoApellido campoPass bibliotecas checklist bibliotecasElegidas bibliotecasElegidasMorph bElegir bCompletar bAtras|vista := self class crearVentanaConAncho:  400 altura: 600 titulo: 'ALTA DE NUEVO USUARIO'."campos de ingreso de datos"campoNombre := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su nombre'.vista añadirMorph: campoNombre conMargen: 40.campoApellido := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su apellido'.vista añadirMorph: campoApellido conMargen: 20.campoDNI := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su DNI'.vista añadirMorph: campoDNI conMargen: 20.campoPass := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su contraseña'.vista añadirMorph: campoPass conMargen: 20."boton para efectivizar el registro con los datos de los campos"bCompletar := (BotonGenerico_UI new inicializarConSistema: system label: 'Registrar').vista añadirMorph: bCompletar conMargen: 20."boton que invoca una checklist con bibliotecas"bElegir := BotonGenerico_UI new inicializarConSistema: system label: 'Elegir bibliotecas de interés'.vista añadirMorph: bElegir conMargen: 20."checklist para seleccionar bibliotecas de interes"bibliotecas := Dictionary new.(system getBibliotecas) do: [:b | bibliotecas at: b nombre put: b].checklist := TickDialogWindow itemsList: (bibliotecas keys) itemsHeaderName: 'Elija las bibliotecas que desee' title: 'Bibliotecas de interés' .bElegir definirAccion: [ bibliotecasElegidas := (checklist choose) . bElegir deshabilitar .  bibliotecasElegidas ifNotNil: [bibliotecasElegidas do: [ :b | bibliotecasElegidasMorph addMorphBack: (TextMorph new contents: b; position: (bibliotecasElegidasMorph lastSubmorph position + (0@20))). ].]]."morph para mostrar las bibliotecas seleccionadas (se agregan las seleccionadas despues de completar el checklist en bElegir)"bibliotecasElegidasMorph := BorderedMorph new extent: 370@200; color: Color darkGray; borderWidth: 1.bibliotecasElegidasMorph addMorph: (TextMorph new contents: 'Bibliotecas elegidas:'; position: bibliotecasElegidasMorph position + (10@0)).vista añadirMorph: bibliotecasElegidasMorph conMargen: 20.bCompletar definirAccion: [|nuevoUsuario| (bibliotecasElegidas isNotNil & (campoNombre getText ~= '') & (campoApellido getText ~= '') & (campoDNI getText ~= '') & (campoPass getText ~= '')) ifTrue: 	[ 	nuevoUsuario := Usuario crearConNombre: (campoNombre getText) apellido: (campoApellido getText) dni: ((campoDNI getText) asNumber) contraseña: (campoPass getText). nuevoUsuario setBibliotecasInteres: (bibliotecasElegidas collect: [:b | bibliotecas at: b]). 	(system agregarUsuario: nuevoUsuario) ifTrue: [bCompletar owner delete. self mensaje: 'Registro completado con éxito!!' conAccion: [self vistaPrincipal]. ] ifFalse: [ self mensaje: 'Usuario ya existente.' ]	] ifFalse: 	[self error: 'Ha ocurrido un error, intenta de nuevo'.] ] ."boton atras que vuelve a la vista principal"bAtras := (BotonGenerico_UI new inicializarConSistema: system label: 'Atrás').vista añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ bAtras owner delete. self vistaPrincipal ].vista openCenteredInWorld .^vista! !!Sistema_UI methodsFor: 'as yet unclassified'!vistaUsuario: unDni^ (VistaUsuario crearConSistema: system usuario: unDni)! !!VistaAdmin class methodsFor: 'as yet unclassified'!crearConSistema: unSistema|vista|vista := self crearVentanaConAncho: 1000 altura: 700.vista inicializarConSistema: unSistema .^ vista! !!VistaAdmin methodsFor: 'as yet unclassified'!agregarBiblioteca|ventana nuevaBiblioteca campoDias campoNombre campoDireccion campoTelefono campoNombreR bCompletar bAtras|ventana := self class crearVentanaConAncho: 850 altura: 800 titulo: 'AGREGAR BIBLIOTECA'."campos de ingreso de datos"campoNombre := RubTextFieldMorph new extent: 700@20; ghostText: 'Ingrese nombre'.ventana añadirMorph: campoNombre conMargen: 40.campoDireccion := RubTextFieldMorph new extent: 700@20; ghostText: 'Ingrese dirección'.ventana añadirMorph: campoDireccion conMargen: 20.ventana añadirMorph: (TextMorph new contents: 'Días préstamo') alLadoDe: campoDireccion.campoTelefono := RubTextFieldMorph new extent: 700@20; ghostText: 'Ingrese teléfono'.ventana añadirMorph: campoTelefono conMargen: 20.campoDias := DropListMorph new list: (1 to: 30); extent: 40@20.ventana añadirMorph: campoDias alLadoDe: campoTelefono.campoNombreR := RubTextFieldMorph new extent: 700@20; ghostText: 'Ingrese nombre de representante'.ventana añadirMorph: campoNombreR conMargen: 20.bCompletar := BotonGenerico_UI new textoBoton: 'Agregar'; definirAccion:[	(campoDias selectedItem notNil) & (campoDireccion getText ~= '') & (campoNombre getText ~= '') & (campoNombreR getText ~= '') & (campoTelefono getText ~= '') 	ifTrue: 		[ 			nuevaBiblioteca := Biblioteca crearConId: system obtenerIDBibliotecaSiguiente direccion: campoDireccion getText nombre: campoNombre getText telefono: (campoTelefono getText) asNumber nombreRepresentante: campoNombreR getText. nuevaBiblioteca setDiasPrestamo: campoDias selectedItem.			system agregarBiblioteca: nuevaBiblioteca .			self mensaje: 'La biblioteca ',nuevaBiblioteca nombre,' ha sido agregada correctamente.' conAccion: [ventana delete. self vistaAdmin].		]	ifFalse: 		[ self error: 'Algún dato no ha sido ingresado correctamente.' ].].ventana añadirMorph: bCompletar conMargen: 20.bAtras := (BotonGenerico_UI new textoBoton: 'Atrás').ventana añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ bAtras owner delete. self vistaAdmin ].ventana openCenteredInWorld .^ventana! !!VistaAdmin methodsFor: 'as yet unclassified'!agregarLibroA: unaBiblioteca|ventana nuevoLibro campoNombre campoEditorial campoAnio campoAutor colAutores bAgregarA bCompletar bAtras|ventana := self class crearVentanaConAncho: 700 altura: 500 titulo: 'AGREGAR LIBRO'.colAutores := OrderedCollection new."campos de ingreso de datos"campoNombre := RubTextFieldMorph new extent: 680@20; ghostText: 'Ingrese nombre'.ventana añadirMorph: campoNombre conMargen: 40.campoEditorial := RubTextFieldMorph new extent: 680@20; ghostText: 'Ingrese editorial'.ventana añadirMorph: campoEditorial conMargen: 20.campoAnio := RubTextFieldMorph new extent: 680@20; ghostText: 'Ingrese el año de edición'.ventana añadirMorph: campoAnio conMargen: 20.campoAutor := RubTextFieldMorph new extent: 680@20; ghostText: 'Ingrese aquí el nombre completo de un autor y pulse el botón para agregarlo'.ventana añadirMorph: campoAutor conMargen: 20.bAgregarA := BotonGenerico_UI new textoBoton: 'Agregar autor'; definirAccion: [ (campoAutor getText ~= '') ifTrue: [ colAutores add: (campoAutor getText)asString. campoAutor setText: ''. self mensaje: 'Autor agregado correctamente.' ] ifFalse: [ self error: 'Ingrese el nombre completo del autor antes de presionar el botón' ]].ventana añadirMorph: bAgregarA conMargen: 20. bCompletar := BotonGenerico_UI new textoBoton: 'Agregar libro'; definirAccion:[	(campoEditorial getText ~= '') & (campoNombre getText ~= '') & (campoAnio getText ~= '') & (colAutores notEmpty)	ifTrue: 		[ 			nuevoLibro := Libro crearConNombre: (campoNombre getText)asString editorial: (campoEditorial getText)asString  anioEdicion: (campoAnio getText) asNumber autores: colAutores.			system añadirLibro: nuevoLibro enBib: unaBiblioteca.			self mensaje: 'El libro ', nuevoLibro nombre, ' ha sido agregado correctamente.'.		]	ifFalse: 		[ self error: 'Algún dato no ha sido ingresado correctamente.' ].].ventana añadirMorph: bCompletar conMargen: 20.bAtras := (BotonGenerico_UI new textoBoton: 'Atrás').ventana añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ bAtras owner delete. self vistaAdmin ].ventana openCenteredInWorld .^ventana! !!VistaAdmin methodsFor: 'initialization'!inicializarConSistema: unSistemaself asignarSistema: unSistema.(system getUsuarios) do: [ :u | system verificarMulta: (u dni) ].self añadirMorph: (TextMorph new contents: 'Usuarios') conMargen: 10.uDataSource := UsuarioDataSource crear: system.uTabla := Tabla_UI crearUConDataSource: uDataSource ancho: 970 altura: 150.self añadirMorph: uTabla conMargen: 10.self añadirMorph: (TextMorph new contents: 'Bibliotecas') conMargen: 10.bDataSource := BibliotecaDataSource elements: (system getBibliotecas).bTabla := Tabla_UI crearBConDataSource: bDataSource ancho: 970 altura: 150.bTabla addColumn: (FTColumn id: 'Préstamos').bTabla beSingleSelection.(bTabla columns at: 6) width: 100.self añadirMorph: bTabla conMargen: 10.bAgregarB := BotonGenerico_UI new textoBoton: 'Agregar biblioteca'.self añadirMorph: bAgregarB conMargen: 10.bAgregarB definirAccion: [ self delete. self agregarBiblioteca ].bModificarB := BotonGenerico_UI new textoBoton: 'Modificar biblioteca'.bModificarB definirAccion: [ |seleccion| seleccion := (bTabla selectedIndex). (seleccion = 0) ifTrue:  [ self error: 'No seleccionó una biblioteca.' ] ifFalse: [ self delete. self modificarBiblioteca: (bDataSource elementAt: seleccion)] ].self añadirMorph: bModificarB alLadoDe: bAgregarB. bGenerarListadoRetrasados := BotonGenerico_UI new textoBoton: 'Generar listado de usuarios retrasados'.bGenerarListadoRetrasados definirAccion: [ tablaRetrasados := Tabla_UI crearUConDataSource2: (UsuarioAtrasadoDataSource elements: (system generarListadoUsuariosRetrasados) conSistema: system) ancho: 870 altura: 200 . Ventana_UI crearConMorph: tablaRetrasados ].self añadirMorph: bGenerarListadoRetrasados conMargen: 10.bCerrarSesion := BotonGenerico_UI new textoBoton: 'Cerrar sesión'; definirAccion: [ self delete. self vistaPrincipal ].self añadirMorph: bCerrarSesion conMargen: 10.self openCenteredInWorld .! !!VistaAdmin methodsFor: 'as yet unclassified'!modificarBiblioteca: unaBiblioteca|ventana lDataSource lTabla bAgregarLibro bQuitarLibro bAtras|ventana := self class crearVentanaConAncho: 850 altura: 800 titulo: 'MODIFICAR BIBLIOTECA'.lDataSource := LibroDataSource elements: unaBiblioteca libros.lTabla := Tabla_UI crearLConDataSource: lDataSource ancho: 830 altura: 150.lTabla beSingleSelection.unaBiblioteca addDependent: lDataSource.ventana añadirMorph: lTabla conMargen: 20.bAgregarLibro := BotonGenerico_UI new textoBoton: 'Agregar libro'.bAgregarLibro definirAccion: [ self agregarLibroA: unaBiblioteca ].ventana añadirMorph: bAgregarLibro conMargen: 20.bQuitarLibro := BotonGenerico_UI new textoBoton: 'Quitar libro'.bQuitarLibro definirAccion: [ unaBiblioteca quitarLibro: (lDataSource elementAt: lTabla selectedIndex). self mensaje: 'El libro seleccionado ha sido quitado correctamente.' ].ventana añadirMorph: bQuitarLibro conMargen: 20.bAtras := (BotonGenerico_UI new textoBoton: 'Atrás').ventana añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ bAtras owner delete. self vistaAdmin ].ventana openCenteredInWorld.^ventana! !!VistaPrestamo class methodsFor: 'as yet unclassified'!crearConSistema: unSistema usuario: unDni|vista|vista := self crearVentanaConAncho:  850 altura: 650 titulo: 'GESTIÓN NUEVO PRÉSTAMO'.vista inicializarConSistema: unSistema usuario: unDni.^vista! !!VistaPrestamo methodsFor: 'initialization'!inicializarConSistema: unSistema usuario: unDni|cajaNegra|"cajaNegra es el espacio que ocupa lTabla luego de seleccionar una biblioteca"cajaNegra := Morph new color: Color black; extent: 830@150.system := unSistema .usuario := system buscarUsuarioConDni: unDni.self añadirMorph: (TextMorph new contents: 'Selecciona la biblioteca en la cual deseas realizar tu préstamo') conMargen: 20.bDataSource := BibliotecaDataSource elements: (usuario bibliotecasInteres).bTabla := Tabla_UI crearBConDataSource: bDataSource ancho: 830 altura: 150.bTabla beSingleSelection.self añadirMorph: bTabla conMargen: 20.bElegirBiblioteca := BotonGenerico_UI new textoBoton: 'Elegir biblioteca'.self añadirMorph: bElegirBiblioteca conMargen: 20.bElegirBiblioteca definirAccion:[bibliotecaElegida := bDataSource elementAt: (bTabla selectedIndex).lDataSource := LibroDataSource elements: bibliotecaElegida libros.lTabla := Tabla_UI crearLConDataSource: lDataSource ancho: 830 altura: 150.self replaceSubmorph: cajaNegra by: lTabla.].self añadirMorph: cajaNegra conMargen: 20.librosElegidos := OrderedCollection new.bElegirLibros := BotonGenerico_UI new textoBoton: 'Elegir libros'.self añadirMorph: bElegirLibros conMargen: 20.bElegirLibros definirAccion: [ librosElegidos := (lTabla selectedIndexes) collect: [ :i | lDataSource elementAt: i ]. lTabla deselectAll. bElegirLibros deshabilitar  ].bCompletar := BotonGenerico_UI new textoBoton: 'Completar'.self añadirMorph: bCompletar conMargen: 20.bCompletar definirAccion: [ (bibliotecaElegida registrarPrestamoConLibros: librosElegidos deUsuario: usuario) ifFalse: [ self error: ('Ha ocurrido un error.') ] ifTrue: [self mensaje: 'Su préstamo ha sido registrado correctamente.' conAccion: [self delete. self vistaUsuario: unDni ] ]]."boton atras que vuelve a la vista usuario"bAtras := (BotonGenerico_UI new textoBoton: 'Atrás').self añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ self delete. self vistaUsuario: unDni ].self openCenteredInWorld .! !!VistaPrincipal class methodsFor: 'as yet unclassified'!crearConSistema: unSistema|vista|vista := self crearVentanaConAncho:  450 altura: 350 titulo: 'LIBRERÍA NACIONAL I.A'.vista inicializarConSistema: unSistema.^ vista! !!VistaPrincipal methodsFor: 'initialization'!inicializarConSistema: unSistemaself asignarSistema: unSistema . bienvenida := TextMorph new contents: 'Bienvenido a LIBRERÍAS I.A.!! :)'.self añadirMorph: bienvenida conMargen: 40.campoDNI := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su DNI'.self añadirMorph: campoDNI conMargen: 20.campoPass := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su contraseña'.self añadirMorph: campoPass conMargen: 20.bIniciarSesion := (BotonIniciarSesion_UI new inicializarConSistema: self campoDNI: campoDNI campoPass: campoPass ).self añadirMorph: bIniciarSesion conMargen: 20.bRegistrar := (BotonRegistrar_UI new inicializarConSistema: self).self añadirMorph: bRegistrar conMargen: 20.self openCenteredInWorld .! !!VistaRegistro class methodsFor: 'as yet unclassified'!crearConSistema: unSistema|vista|vista := self crearVentanaConAncho: 850 altura: 580 titulo: 'ALTA DE NUEVO USUARIO'.vista inicializarConSistema: unSistema.^ vista! !!VistaRegistro methodsFor: 'initialization'!inicializarConSistema: unSistemaself asignarSistema: unSistema ."campos de ingreso de datos"campoNombre := RubTextFieldMorph new extent: 800@20; ghostText: 'Ingrese su nombre'.self añadirMorph: campoNombre conMargen: 40.campoApellido := RubTextFieldMorph new extent: 800@20; ghostText: 'Ingrese su apellido'.self añadirMorph: campoApellido conMargen: 20.campoDNI := RubTextFieldMorph new extent: 800@20; ghostText: 'Ingrese su DNI'.self añadirMorph: campoDNI conMargen: 20.campoPass := RubTextFieldMorph new extent: 800@20; ghostText: 'Ingrese su contraseña'.self añadirMorph: campoPass conMargen: 20."boton para efectivizar el registro con los datos de los campos"bCompletar := (BotonGenerico_UI new textoBoton: 'Registrar').self añadirMorph: bCompletar conMargen: 20."tabla para seleccionar bibliotecas de interes"bibliotecas := (system getBibliotecas).dataSource := BibliotecaDataSource elements: bibliotecas.tabla := Tabla_UI crearBConDataSource: dataSource ancho: 800 altura: 120.self añadirMorph: tabla conMargen: 20."boton que agarra la seleccion del checklist para elegir bibliotecas"bElegir := BotonGenerico_UI new definirAccion: [ bibliotecasElegidas := (tabla selectedIndexes) collect: [ :i | dataSource elementAt: i ]. tabla deselectAll. bElegir deshabilitar ] ; textoBoton: 'Elegir bibliotecas de interés'.self añadirMorph: bElegir conMargen: 20.bAyuda := BotonGenerico_UI new definirAccion: [bAyuda showBalloon: 'Para elegir muchas bibliotecas, mantén apretada la tecla Ctrl y selecciona más bibliotecas :)']; textoBoton: '?'; color: Color blue; extent: 30@30; helpText: 'Para elegir muchas bibliotecas, mantén apretada la tecla Ctrl y selecciona más bibliotecas :)'.self añadirMorph: bAyuda alLadoDe: bElegir.bSeleccionarTodo := BotonGenerico_UI new definirAccion: [ tabla selectAll. ]; textoBoton: 'Seleccionar todas'.self añadirMorph: bSeleccionarTodo conMargen: 20.bCompletar definirAccion: [|nuevoUsuario| (bibliotecasElegidas isNotNil & (campoNombre getText ~= '') & (campoApellido getText ~= '') & (campoDNI getText ~= '') & (campoPass getText ~= '')) ifTrue: 	[ 	nuevoUsuario := UsuarioComun crearConNombre: (campoNombre getText) apellido: (campoApellido getText) dni: ((campoDNI getText) asNumber) contraseña: (campoPass getText). nuevoUsuario setBibliotecasInteres: bibliotecasElegidas. 	(system agregarUsuario: nuevoUsuario) ifTrue: [bCompletar owner delete. self mensaje: 'Registro completado con éxito!!' conAccion: [self vistaPrincipal]. ] ifFalse: [ self mensaje: 'Usuario ya existente.' ]	] ifFalse: 	[self error: 'Ha ocurrido un error, intenta de nuevo'.] ] ."boton atras que vuelve a la vista principal"bAtras := (BotonGenerico_UI new textoBoton: 'Atrás').self añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ bAtras owner delete. self vistaPrincipal ].self openCenteredInWorld .! !!VistaRegistro methodsFor: 'initialization'!oldInicializarConSistema: unSistemaself asignarSistema: unSistema ."campos de ingreso de datos"campoNombre := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su nombre'.self añadirMorph: campoNombre conMargen: 40.campoApellido := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su apellido'.self añadirMorph: campoApellido conMargen: 20.campoDNI := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su DNI'.self añadirMorph: campoDNI conMargen: 20.campoPass := RubTextFieldMorph new extent: 300@20; ghostText: 'Ingrese su contraseña'.self añadirMorph: campoPass conMargen: 20."boton para efectivizar el registro con los datos de los campos"bCompletar := (BotonGenerico_UI new inicializarConSistema: system label: 'Registrar').self añadirMorph: bCompletar conMargen: 20."checklist para seleccionar bibliotecas de interes"bibliotecas := Dictionary new.(system getBibliotecas) do: [:b | bibliotecas at: b nombre put: b].checklistModel := MorphTreeModel new rootItems: (bibliotecas keys).checklistModel autoMultiSelection: true; headerLabel: 'Elegí alguna biblioteca de interés :)'; beCheckList.checklist := checklistModel defaultTreeMorph buildContents; vResizing: #spaceFill; hResizing: #spaceFill; extent: 340@120.self añadirMorph: checklist conMargen: 20."boton que agarra la seleccion del checklist para elegir bibliotecas"bElegir := BotonGenerico_UI new inicializarConSistema: system label: 'Elegir bibliotecas de interés'.self añadirMorph: bElegir conMargen: 20.bElegir definirAccion: [ bibliotecasElegidas := (checklistModel selectedItems) collect:[ :b | bibliotecas at: b ]. bElegir color: Color darkGray; deshabilitar. checklist disable.].bSeleccionarTodo := BotonGenerico_UI new inicializarConSistema: system label: 'Seleccionar todas'.self añadirMorph: bSeleccionarTodo conMargen: 20.bSeleccionarTodo definirAccion: [ checklistModel selectAll].bCompletar definirAccion: [|nuevoUsuario| (bibliotecasElegidas isNotNil & (campoNombre getText ~= '') & (campoApellido getText ~= '') & (campoDNI getText ~= '') & (campoPass getText ~= '')) ifTrue: 	[ 	nuevoUsuario := UsuarioComun crearConNombre: (campoNombre getText) apellido: (campoApellido getText) dni: ((campoDNI getText) asNumber) contraseña: (campoPass getText). nuevoUsuario setBibliotecasInteres: bibliotecasElegidas. 	(system agregarUsuario: nuevoUsuario) ifTrue: [bCompletar owner delete. self mensaje: 'Registro completado con éxito!!' conAccion: [self vistaPrincipal]. ] ifFalse: [ self mensaje: 'Usuario ya existente.' ]	] ifFalse: 	[self error: 'Ha ocurrido un error, intenta de nuevo'.] ] ."boton atras que vuelve a la vista principal"bAtras := (BotonGenerico_UI new inicializarConSistema: system label: 'Atrás').self añadirMorph: bAtras conMargen: 20.bAtras definirAccion: [ bAtras owner delete. self vistaPrincipal ].self openCenteredInWorld .^self! !!VistaUsuario class methodsFor: 'as yet unclassified'!crearConSistema: unSistema usuario: unDni|vista|vista := self crearVentanaConAncho:  770 altura: 600 titulo: 'LIBRERÍA NACIONAL I.A'.vista inicializarConSistema: unSistema usuario: unDni.^ vista! !!VistaUsuario methodsFor: 'as yet unclassified'!inicializarConSistema: unSistema usuario: unDni|prestamosElegidos|usuario := (unSistema buscarUsuarioConDni: unDni).usuario addDependent: self.plus := usuario esPlus .self asignarSistema: unSistema .bibliotecas := usuario bibliotecasInteres.bDataSource := BibliotecaDataSource elements: bibliotecas.bTabla := Tabla_UI crearBConDataSource: bDataSource ancho: 900 altura: 200.bienvenida := TextMorph new contents: 'Bienvenido/a ',usuario nombre,'!! :)'.self añadirMorph: bienvenida conMargen: 20.modalidadMorph := TextMorph new contents: ((usuario esPlus) ifTrue: [ 'Usted es usuario plus.' ] ifFalse: [ 'Usted es usuario común.' ]).self añadirMorph: modalidadMorph conMargen: 20.bCambioModalidad := BotonGenerico_UI new textoBoton: 'Cambiar modalidad'; definirAccion: [ |usuarioCambiado| usuarioCambiado := (usuario cambiarModalidad: unSistema). (usuarioCambiado = usuario) ifFalse: [usuario addDependent: self. self mensaje: 'Usted ha cambiado su modalidad correctamente.'] ifTrue: [self error: 'Usted no realizó ningún pago: no puede mejorar su modalidad']].self añadirMorph: bCambioModalidad conMargen: 20.bPagar := (BotonGenerico_UI new definirAccion: [ (usuario estaAlDiaConCuota) ifTrue: [ self mensaje: 'Usted ya pagó su cuota anteriormente.' ] ifFalse: [ usuario pagarCuota. self mensaje: 'Usted ha pagado su cuota correctamente.' ] ]; textoBoton: 'Pagar cuota'; color: Color red).self añadirMorph: bPagar alLadoDe: bCambioModalidad.bMostrarBibInteres := (BotonGenerico_UI new definirAccion: [ Ventana_UI crearConMorph: bTabla ]; textoBoton: 'Mostrar mis bibliotecas de interés').self añadirMorph: bMostrarBibInteres conMargen: 20.pDataSource := PrestamoDataSource elements: (system getPrestamosDeUsuario: unDni).pTabla := Tabla_UI crearPConDataSource: pDataSource ancho: 750 altura: 150 .self añadirMorph: pTabla conMargen: 20.bibliotecas do: [ :b | b addDependent: pDataSource ].bRealizarPrestamo := (BotonGenerico_UI new textoBoton: 'Realizar préstamo').bRealizarPrestamo definirAccion: [ self delete. self vistaPrestamo: unDni ].self añadirMorph: bRealizarPrestamo conMargen: 20.bDevolverPrestamo := (BotonGenerico_UI new textoBoton: 'Devolver préstamo'; definirAccion: [ prestamosElegidos := (pTabla selectedIndexes) collect: [:i | pDataSource elementAt: i]. prestamosElegidos do: [ :p | system devolverPrestamo: unDni deBib: (p idBiblioteca). ]. self mensaje: 'Tus préstamos han sido devueltos correctamente.' ]).self añadirMorph: bDevolverPrestamo conMargen: 20.bSeleccionarTodos := BotonGenerico_UI new textoBoton: 'Seleccionar todos'; definirAccion: [ pTabla selectAll. ].self añadirMorph: bSeleccionarTodos alLadoDe: bDevolverPrestamo .bAyuda := BotonGenerico_UI new definirAccion: [bAyuda showBalloon: 'Para devolver muchos préstamos, mantén apretada la tecla Ctrl y selecciona más préstamos :)']; textoBoton: '?'; color: Color blue; extent: 30@30; helpText: 'Para devolver muchos préstamos, mantén apretada la tecla Ctrl y selecciona más préstamos :)'.self añadirMorph: bAyuda alLadoDe: bSeleccionarTodos.bCerrarSesion := (BotonGenerico_UI new definirAccion: [ self delete. self vistaPrincipal ]; textoBoton: 'Cerrar sesión').self añadirMorph: bCerrarSesion conMargen: 20.self openCenteredInWorld .(system verificarMulta: unDni) ifNotNil: [ self error: 'Algún préstamo no fue devuelto a tiempo. Se le aplicó una suspensión de ',(system cantDiasMulta) asString, ' días: no podrá realizar préstamos durante ese período.'. bRealizarPrestamo deshabilitar ].! !!VistaUsuario methodsFor: 'updating'!update: unUsuarioplus := plus not.modalidadMorph contents: ((plus) ifTrue: [ 'Usted es usuario plus.' ] ifFalse: ['Usted es usuario común.']).! !!Ventana_UI class methodsFor: 'as yet unclassified'!crearConMorph: unMorph|ventana|ventana := self crearVentanaConAncho: unMorph width + 20 altura: unMorph height + 20.ventana addMorphCentered: unMorph . ventana openCenteredInWorld.^ ventana! !!Ventana_UI class methodsFor: 'as yet unclassified'!crearVentanaConAncho: unAncho altura: unaAltura|frame barra bCerrar|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.barra := self new color: Color veryDarkGray; extent: unAncho@20; borderColor: Color darkGray; borderWidth: 3.bCerrar := BotonCerrar_UI new.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame inicializarBotones .(frame botones) add: bCerrar.frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Ventana_UI class methodsFor: 'as yet unclassified'!crearVentanaConAncho: unAncho altura: unaAltura titulo: unTitulo|frame barra titulo contenedorTitulo bCerrar|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.barra := self new color: Color veryDarkGray; extent: unAncho@20; borderColor: Color darkGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: unAncho@40.titulo := TextMorph new contents: (unTitulo asText allBold); fillsOwner: true.titulo font: (LogicalFont familyName: 'Roboto' pointSize: 20).bCerrar := BotonCerrar_UI new.frame inicializarBotones .(frame botones) add: bCerrar.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorphFront: titulo. titulo position: frame topLeft + (10@0).frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Ventana_UI methodsFor: 'as yet unclassified'!añadirMorph: unMorph alLadoDe: otroMorphunMorph position: otroMorph position + (otroMorph width + 10@0).self addMorph: unMorph behind: otroMorph! !!Ventana_UI methodsFor: 'as yet unclassified'!añadirMorph: unMorph conMargen: unMargenunMorph position: (10@(self lastSubmorph bottom + unMargen)).self addMorphBack: unMorph. ! !!Ventana_UI methodsFor: 'accessing'!botones^botones! !!Ventana_UI methodsFor: 'as yet unclassified'!definirAccion: unaAccion"añade una accion al boton cerrar (volver entre ventanas)"(botones at: 1) definirAccion: unaAccion .! !!Ventana_UI methodsFor: 'as yet unclassified'!inicializarBotonesbotones := OrderedCollection new.! !"SistemaBiblioteca_GUI"!!BDataSource methodsFor: 'accessing'!cellColumn: column row: rowIndex(column id = 'ID') ifTrue: [ ^ self idCellColumn: column row: rowIndex ].(column id = 'Dirección') ifTrue: [ ^ self direccionCellColumn: column row: rowIndex ].(column id = 'Nombre') ifTrue: [ ^ self nombreCellColumn: column row: rowIndex ].! !!BDataSource methodsFor: 'as yet unclassified'!direccionCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) direccion) asStringMorph;		yourself! !!BDataSource methodsFor: 'as yet unclassified'!idCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) id) asStringMorph;		yourself! !!BDataSource methodsFor: 'as yet unclassified'!mCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: (elements at: rowIndex) asMorph;		yourself! !!BDataSource methodsFor: 'as yet unclassified'!nombreCellColumn: column row: rowIndex^ FTCellMorph new		addMorphBack: ((elements at: rowIndex) nombre) asStringMorph;		yourself! !!BotonAgregarBiblioteca_TEST methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!BotonAgregarBiblioteca_TEST methodsFor: 'as yet unclassified'!inicializarConSistema: unSistemaself asignarSistema: unSistema.self label: 'Agregar biblioteca' font: (LogicalFont familyName: 'Roboto' pointSize: 14). ! !!BotonAgregarBiblioteca_TEST methodsFor: 'event handling'!mouseUp: anEvent|userInput id direccion nombre telefono nombreRepresentante cantDiasPrestamo nuevaBiblioteca|super mouseUp: anEvent .id :=  system obtenerIDBibliotecaSiguiente.userInput := UIManager default request: 'Ingrese el nombre de la biblioteca:'.nombre := userInput.0.5 seconds wait.userInput := UIManager default request: 'Ingrese la dirección de la biblioteca:'.direccion := userInput .0.5 seconds wait.userInput := UIManager default request: 'Ingrese el teléfono de la biblioteca:'.telefono := userInput.0.5 seconds wait.userInput := UIManager default request: 'Ingrese el nombre del representante de la biblioteca:'.nombreRepresentante := userInput.0.5 seconds wait.userInput := UIManager default request: 'Ingrese la cantidad de días para prestar de la biblioteca:'.cantDiasPrestamo := userInput .0.5 seconds wait.(nombre isNotNil & direccion isNotNil & telefono isNotNil & nombreRepresentante isNotNil & cantDiasPrestamo isNotNil) ifTrue: [nuevaBiblioteca := Biblioteca crearConId: id direccion: direccion nombre: nombre telefono: telefono nombreRepresentante: nombreRepresentante cantDiasPrestamo: cantDiasPrestamo.system agregarBiblioteca: nuevaBiblioteca.]ifFalse:[UIManager default abort: 'Error: ha ocurrido un error al ingresar los datos.'].! !!BotonCerrar_TEST methodsFor: 'as yet unclassified'!inicializarself label: ('cerrar' asText allBold). self extent: 45@20; color: Color red; borderColor: Color lightGray ; borderWidth: 3.! !!BotonCerrar_TEST methodsFor: 'as yet unclassified'!mouseUp: anEventsuper mouseUp: anEvent .self owner delete.! !!BotonIniciarSesion_TEST methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema.! !!BotonIniciarSesion_TEST methodsFor: 'as yet unclassified'!inicializarConSistema: unSistemaself asignarSistema: unSistema.self label: 'Iniciar sesión' font: (LogicalFont familyName: 'Roboto' pointSize: 14). ! !!BotonIniciarSesion_TEST methodsFor: 'as yet unclassified'!iniciarSesion|userInput tempUsuario|userInput := (UIManager default request: 'Ingrese su DNI') asInteger .userInput ifNotNil:[	(userInput isInteger)	ifFalse:	[		UIManager default abort: 'Error: el DNI debe ser un dato numérico.'	]		ifTrue:	[ 		tempUsuario := (system buscarUsuarioConDni: (userInput asInteger)).		tempUsuario ifNil: [ UIManager default abort: 'Error. Usuario no existe con DNI ingresado. '] ifNotNil: 		[ 			userInput := UIManager default request: 'Ingrese su contraseña'.			userInput 			ifNotNil: [(tempUsuario contrasenia = userInput) ifFalse: [ UIManager default abort: 'Contraseña incorrecta.' ]]			ifNil: [UIManager default abort: 'Error: la contraseña no fue ingresada correctamente.'].		]	]]ifNil:[UIManager default abort: 'Error: el DNI no fue ingresado correctamente.'].^ tempUsuario! !!BotonIniciarSesion_TEST methodsFor: 'event handling'!mouseUp: anEventsuper mouseUp: anEvent.self iniciarSesion! !!BotonMostrarBiblioteca_TEST methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!BotonMostrarBiblioteca_TEST methodsFor: 'as yet unclassified'!inicializarConSistema: unSistemaself asignarSistema: unSistema.self label: 'Mostrar biblioteca' font: (LogicalFont familyName: 'Roboto' pointSize: 14). ! !!BotonMostrarBiblioteca_TEST methodsFor: 'as yet unclassified'!mostrarInfoDeBiblioteca: unaBiblioteca|coleccionLibros|ventana := Sistema_UI crearVentanaConAncho: 600 altura: 402.colInfo := BorderedMorph new color: Color gray; borderColor: Color lightGray; borderWidth: 3; extent: 590@145.colLibros := BorderedMorph new color: Color gray; borderColor: Color lightGray; borderWidth: 3; extent: 590@245.colInfo añadirFilaCon: (('INFORMACIÓN DE LA BIBLIOTECA' asText) allBold).colInfo añadirFilaCon: 'ID: ', (unaBiblioteca id) asString.colInfo añadirFilaCon: 'Nombre: ', (unaBiblioteca nombre).colInfo añadirFilaCon: 'Nombre de representante: ', (unaBiblioteca nombreRepresentante).colInfo añadirFilaCon: 'Dirección: ', (unaBiblioteca direccion).colInfo añadirFilaCon: 'Teléfono:  ', (unaBiblioteca telefono) asString.colLibros añadirFilaCon: (('INFORMACIÓN DE SUS LIBROS (nombre, año, autores, editorial, esAudioLibro, estaEnDeuda)' asText) allBold).coleccionLibros := unaBiblioteca libros.coleccionLibros do: [ :l | colLibros añadirFilaCon: (l nombre) asString,', ',(l anioEdicion) asString,', ', (l autores) asString,', ', (l editorial) asString,', ', (l esAudioLibro) asString,', ', (l estaEnDeuda) asString  ].ventana addMorph: colInfo.ventana addMorph: colLibros.colInfo position: ventana position + 5.colLibros position: (colInfo position + (0@(colInfo height+2))).ventana openCenteredInWorld .! !!BotonMostrarBiblioteca_TEST methodsFor: 'event handling'!mouseUp: anEvent|userInput unaBiblioteca|super mouseUp: anEvent .userInput := UIManager default request: 'Ingrese la ID de biblioteca que desea buscar: '.userInputifNil:[ UIManager default abort: 'La ID no ha sido ingresada correctamente. ' ]ifNotNil: [ unaBiblioteca := (system buscarBibliotecaConId: (userInput asInteger)) .unaBibliotecaifNil:[ UIManager default abort: 'La biblioteca con la ID ingresada no existe. ' ]ifNotNil:[ self mostrarInfoDeBiblioteca: unaBiblioteca ]].! !!Boton_TEST methodsFor: 'event handling'!mouseUp: anEventsuper mouseUp: anEvent.(t getText = 'hola') ifTrue: [ Transcript show: 'hola21' ].! !!Boton_TEST methodsFor: 'initialization'!set: tet := te.! !!Table_TEST class methodsFor: 'as yet unclassified'!mostrarTablaConModel: model|ds  tabla|ds := BDataSource elements: model rootNodes.tabla := self new extent: 650@500;addColumn: (FTColumn id: '#');dataSource: ds; selectFirst;		showFirstSelection;		onAnnouncement: FTSelectionChanged do: [ :ann | ('rows selected: ' , ann newSelectedIndexes asString) crTrace ];		onAnnouncement: FTStrongSelectionChanged do: [ :ann | ('double-click on row: ' , ann selectedIndex asString) crTrace ];		beMultipleSelection;		beResizable;		yourself.^ tabla openInWindow! !!Table_TEST class methodsFor: 'as yet unclassified'!mostrarTablaConSistema: system|ds bibliotecas tabla|bibliotecas := system getBibliotecas .ds := BDataSource elements: bibliotecas.tabla := self new extent: 650@500;addColumn: (FTColumn id: 'ID'); addColumn: (FTColumn id: 'Dirección'); addColumn: (FTColumn id: 'Nombre');dataSource: ds; selectFirst;		showFirstSelection;		onAnnouncement: FTSelectionChanged do: [ :ann | ('rows selected: ' , ann newSelectedIndexes asString) crTrace ];		onAnnouncement: FTStrongSelectionChanged do: [ :ann | ('double-click on row: ' , ann selectedIndex asString) crTrace ];		beMultipleSelection;		beResizable;		yourself.^ tabla ! !!Table_TEST class methodsFor: 'as yet unclassified'!mostrarTablaConSistema: system model: model|ds bibliotecas tabla|bibliotecas := (system getBibliotecas) addAll: (model rootNodes) .ds := BDataSource elements: bibliotecas.tabla := self new extent: 650@500;addColumn: (FTColumn id: '#');addColumn: (FTColumn id: 'ID'); addColumn: (FTColumn id: 'Dirección'); addColumn: (FTColumn id: 'Nombre');dataSource: ds; selectFirst;		showFirstSelection;		onAnnouncement: FTSelectionChanged do: [ :ann | ('rows selected: ' , ann newSelectedIndexes asString) crTrace ];		onAnnouncement: FTStrongSelectionChanged do: [ :ann | ('double-click on row: ' , ann selectedIndex asString) crTrace ];		beMultipleSelection;		beResizable;		yourself.^ tabla openInWindow! !!Table_TEST methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!Table_TEST methodsFor: 'as yet unclassified'!mostrarTabla|ds bibliotecas|bibliotecas := system getBibliotecas .ds := BDataSource elements: bibliotecas.self addColumn: (FTColumn id: 'ID'); addColumn: (FTColumn id: 'Dirección'); addColumn: (FTColumn id: 'Nombre').! !!Ventana_TEST class methodsFor: 'as yet unclassified'!crearVentanaConAncho: unAncho altura: unaAltura|frame barra contenedorTitulo bCerrar|"este metodo quedaria mejor como parte de BorderedMorph, pero para que quede todo en el mismo paquete es de SistemaUI"frame := self new color: Color gray; extent: unAncho@unaAltura; borderColor: Color lightGray; borderWidth: 3.barra := self new color: Color gray; extent: unAncho@20; borderColor: Color lightGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: 300@40.bCerrar := BotonCerrar_UI new inicializar.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Ventana_TEST class methodsFor: 'as yet unclassified'!crearVentanaConAncho: unAncho altura: unaAltura titulo: unTitulo|frame barra titulo contenedorTitulo bCerrar|"este metodo quedaria mejor como parte de BorderedMorph, pero para que quede todo en el mismo paquete es de SistemaUI"frame := self new color: Color gray; extent: unAncho@unaAltura; borderColor: Color lightGray; borderWidth: 3.barra := self new color: Color gray; extent: unAncho@20; borderColor: Color lightGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: 300@40.titulo := TextMorph new contents: (unTitulo asText allBold); fillsOwner: true.titulo font: (LogicalFont familyName: 'Roboto' pointSize: 20). bCerrar := BotonCerrar_UI new inicializar.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorphFront: titulo.frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Ventana_TEST class methodsFor: 'as yet unclassified'!vistaInicioSesion: system|ventana bInicioSesion bRegistrar|ventana := self crearVentanaConAncho: 300 altura: 400 titulo: 'BIENVENIDO'.bInicioSesion := BotonIniciarSesion_UI new inicializarConSistema: system.bRegistrar := SimpleButtonMorph new label: 'Registrar' font: (LogicalFont familyName: 'Roboto' pointSize: 14).ventana agregarBoton: bInicioSesion.ventana addMorph: bInicioSesion.ventana agregarBoton: bRegistrar.ventana addMorph: bRegistrar.bInicioSesion position: ventana position + (10@50).bRegistrar position: ventana position + (10@(30 + bInicioSesion top)).ventana openCenteredInWorld .! !!Ventana_TEST methodsFor: 'as yet unclassified'!agregarBoton: unBotonbotones ifNil: [botones := OrderedCollection new. ].botones add: unBoton. self addMorph: unBoton .! !!Ventana_TEST methodsFor: 'accessing'!botones^botones! !!Sistema_TEST class methodsFor: 'as yet unclassified'!crearVentanaConAncho: unAncho altura: unaAltura|frame barra contenedorTitulo bCerrar|"este metodo quedaria mejor como parte de BorderedMorph, pero para que quede todo en el mismo paquete es de SistemaUI"frame := self new color: Color gray; extent: unAncho@unaAltura; borderColor: Color lightGray; borderWidth: 3.barra := self new color: Color gray; extent: unAncho@20; borderColor: Color lightGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: 300@40.bCerrar := BotonCerrar_UI new inicializar.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Sistema_TEST class methodsFor: 'as yet unclassified'!crearVentanaConAncho: unAncho altura: unaAltura titulo: unTitulo|frame barra titulo contenedorTitulo bCerrar|"este metodo quedaria mejor como parte de BorderedMorph, pero para que quede todo en el mismo paquete es de SistemaUI"frame := self new color: Color gray; extent: unAncho@unaAltura; borderColor: Color lightGray; borderWidth: 3.barra := self new color: Color gray; extent: unAncho@20; borderColor: Color lightGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: 300@40.titulo := TextMorph new contents: (unTitulo asText allBold); fillsOwner: true.titulo font: (LogicalFont familyName: 'Roboto' pointSize: 20). bCerrar := BotonCerrar_UI new inicializar.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorphFront: titulo.frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !!Sistema_TEST methodsFor: 'as yet unclassified'!agregarBotonesbAgregarBiblioteca := BotonAgregarBiblioteca_UI new inicializarConSistema: system .bMostrarBibliotecas := BotonMostrarBiblioteca_UI new inicializarConSistema: system.bIniciarSesion := BotonIniciarSesion_UI new inicializarConSistema: system.frame addMorph: bAgregarBiblioteca.frame addMorph: bMostrarBibliotecas.frame addMorph: bIniciarSesion.bAgregarBiblioteca position: frame position + (10@50).bMostrarBibliotecas position: frame position + (10@(30+bAgregarBiblioteca top)).bIniciarSesion position: frame position + (10@(30+bMostrarBibliotecas top)).! !!Sistema_TEST methodsFor: 'as yet unclassified'!asignarSistema: unSistemasystem := unSistema .! !!Sistema_TEST methodsFor: 'as yet unclassified'!getSistema^system! !!Sistema_TEST methodsFor: 'as yet unclassified'!iniciarMenuPrincipalConSistema: unSistemasystem := unSistema.self armarFrame.self agregarBotones.frame openCenteredInWorld .! !!Sistema_TEST methodsFor: 'as yet unclassified'!vistaInicioSesionVentana_UI vistaInicioSesion: system.! !"SistemaBiblioteca_TEST"!----QUIT/NOSAVE----2024-01-23T10:27:33.601-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 46056!!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:52'!setSistema:unSistemaempresa := unSistema.! !!VisualEmpresa methodsFor: 'initialization' stamp: 'Giuuuuli 1/23/2024 10:53'!inicializarConSISTEMA:unSistemaself setSistema: unSistema .super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100).origen := self innerBounds origin."texto fecha hoy"fechaHoy := StringMorph new.fechaHoy contents: Date today asString.self addMorph: fechaHoy.fechaHoy position: origen + (5@5)."texto seleccione su rol"tituloMenu := StringMorph new.tituloMenu contents: 'SELECCIONE SU ROL'.tituloMenu position: origen + (160@30).self addMorph: tituloMenu."boton usuario admin"botonUserAdmin := BotonAccion new.self addMorph: botonUserAdmin.botonUserAdmin label: 'ADMINISTRADOR'.botonUserAdmin position: origen + (260@60)."boton usuario normal"botonUserNormal := BotonAccion new.self addMorph: botonUserNormal.botonUserNormal label: 'USUARIO'.botonUserNormal position: origen + (100@60).botonUserNormal mouseAction: [self delete. self abrirInicioSesion]. "abre el inicio de sesion""agregar clientebotonCliente := BotonAccion new.botonCliente label: 'AGREGAR CLIENTE'.botonCliente mouseAction: [nombre := UIManager default	request: 'What''s your name?'	initialAnswer: 'no name'].self addMorph: botonCliente.botonCliente position: origen + (5@25)."self openCenteredInWorld.! !!VisualEmpresa class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:55'!abrirVisualEmpresaConSist:unSistema|aux|.aux := VisualEmpresa new.aux inicializarConSISTEMA: unSistema.^aux! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:55' prior: 33557688!iniciarSistema: unSistemaempresa := unSistema.VisualEmpresa abrirVisualEmpresaConSist: unSistema .! !----SNAPSHOT----2024-01-23T10:55:44.893-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 46056!!VistaUsuario methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:59'!ventanaInicioSesionConSist:unSistemaself setSistema: unSistema .super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300)."titulo"titulo := StringMorph new.titulo contents: 'Iniciar Sesion:'.self addMorph: titulo.titulo position: self topLeft + (90@55)."campo usuario"campoUsuario := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU DNI'.self addMorph: campoUsuario.campoUsuario position: self center - (campoUsuario extent/2) - (0@40).self openCenteredInWorld."campo contraseña"campoContrasenia := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU CONTRASEÑA'.self addMorph: campoContrasenia.campoContrasenia position: self center - (campoContrasenia extent/2) - (0@5).self openCenteredInWorld."boton aceptar"botonAceptar := BotonInicioSesion new.botonAceptar label: 'ACEPTAR'.botonAceptar position: self center - (botonAceptar extent/2) + (0@30) - (70@0).botonAceptar mouseAction: [botonAceptar inicializar: campoUsuario conContra: campoContrasenia conSistema: empresa conVentana:self.].self addMorph: botonAceptar.! !VistaUsuario removeSelector: #ventanaInicioSesion!!VistaUsuario class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:59'!crearVistaUsuarioConSist:unSistema|aux|.aux := self new.aux ventanaInicioSesionConSist:unSistema.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 11:03'!abrirVisualContratosConSist:unSistema conCliente: unClienteVentanaContratos crearVistaContratoConSist:unSistema conCliente:unCliente.! !Ventana removeSelector: #abrirVisualContratos:!!VentanaContratos methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 11:17'!inicializarContratosConSist: unSistema conCliente:unClienteself setSistema: unSistema .super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300).cliente := unCliente.! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 11:19' prior: 33598592!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser).        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 11:21'!abrirInicioSesionConSist:unSistemaVistaUsuario crearVistaUsuarioConSist:unSistema! !!VisualEmpresa methodsFor: 'initialization' stamp: 'Giuuuuli 1/23/2024 11:21' prior: 33686722!inicializarConSISTEMA:unSistemaself setSistema: unSistema .super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100).origen := self innerBounds origin."texto fecha hoy"fechaHoy := StringMorph new.fechaHoy contents: Date today asString.self addMorph: fechaHoy.fechaHoy position: origen + (5@5)."texto seleccione su rol"tituloMenu := StringMorph new.tituloMenu contents: 'SELECCIONE SU ROL'.tituloMenu position: origen + (160@30).self addMorph: tituloMenu."boton usuario admin"botonUserAdmin := BotonAccion new.self addMorph: botonUserAdmin.botonUserAdmin label: 'ADMINISTRADOR'.botonUserAdmin position: origen + (260@60)."boton usuario normal"botonUserNormal := BotonAccion new.self addMorph: botonUserNormal.botonUserNormal label: 'USUARIO'.botonUserNormal position: origen + (100@60).botonUserNormal mouseAction: [self delete. self abrirInicioSesionConSist: unSistema ]. "abre el inicio de sesion""agregar clientebotonCliente := BotonAccion new.botonCliente label: 'AGREGAR CLIENTE'.botonCliente mouseAction: [nombre := UIManager default	request: 'What''s your name?'	initialAnswer: 'no name'].self addMorph: botonCliente.botonCliente position: origen + (5@25)."self openCenteredInWorld.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/23/2024 11:25' prior: 33585325!encontrarClienteconDNI: unDni^ colClientes detect:[:unCliente | unCliente esIgual: unDni]ifNone: [0].! !----SNAPSHOT----2024-01-23T11:26:16.078-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 133955!!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/23/2024 11:29' prior: 33693007!encontrarClienteconDNI: unDni^ colClientes detect:[:unCliente | unCliente esIgual: unDni]ifNone: [nil].! !----SNAPSHOT----2024-01-23T11:38:06.676-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 138681!!Ventana methodsFor: 'error handling' stamp: 'Giuuuuli 1/23/2024 11:53' prior: 33557341!error: unTexto|ventanaAux texto|texto := TextMorph new contents: unTexto; color: Color blue ; bold.ventanaAux  := self class crearVentanaConAncho: (texto width + 40) altura: (texto height + 40) titulo: 'ERROR'.ventanaAux  addMorphCentered: texto.ventanaAux  openCenteredInWorld .! !----SNAPSHOT----2024-01-23T11:53:38.759-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 138986!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 00:50' prior: 33690631!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser asString ).        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 00:50' prior: 33694114!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 00:50' prior: 33694974!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) getText asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !BotonAccion subclass: #BotonInicioSesion	instanceVariableNames: 'campoUser campoClave sistema ventanita tipoError'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:05' prior: 33695842!iniciarSesion        |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) getText asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:06' prior: 33696888!iniciarSesion        |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).Transcript show: tempUsuario .        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) getText asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:07' prior: 33697522!iniciarSesion        |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).Transcript show: 'usuaaarioooo  '+tempUsuario .        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) getText asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:08' prior: 33698187!iniciarSesion        |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).Transcript show: 'usuaaarioooo  ',tempUsuario .        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) getText asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:09' prior: 33698869!iniciarSesion        |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString ).tipoError :='ejecuta?'.        tempUsuario        ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave) getText asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ]         ifNil:             [ventanita error: 'Usuario no existe.'].! !!Ventana class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:20' prior: 33559260!crearVentanaConAncho: unAncho altura: unaAltura|frame barra bCerrar|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.barra := self new color: Color veryDarkGray; extent: unAncho@20; borderColor: Color darkGray; borderWidth: 3.bCerrar := BotonCerrar new.! !!VentanaContratos class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:39'!crearVistaContratoConSist:unSistema conCliente: unCliente|aux|.aux:= self new.aux crearVentanaConAncho: 770 altura: 600 titulo: 'CONTRATOS'.aux inicializarContratosConSist: unSistema conCliente:unCliente.! !!Ventana class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/24/2024 01:42' prior: 33558338!crearVentanaConAncho: unAncho altura: unaAltura titulo: unTitulo|frame  titulo contenedorTitulo |frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: unAncho@40.titulo := TextMorph new contents: (unTitulo asText allBold); fillsOwner: true.titulo font: (LogicalFont familyName: 'Roboto' pointSize: 20).frame addMorphFront: titulo. titulo position: frame topLeft + (10@0).^ frame! !!Ventana methodsFor: 'error handling' stamp: 'Giuuuuli 1/24/2024 01:44' prior: 33693615!error: unTexto|ventanaAux texto|texto := TextMorph new contents: unTexto; color: Color blue ; bold.ventanaAux  := self class crearVentanaConAncho: (texto width + 800) altura: (texto height + 400) titulo: 'ERROR'.ventanaAux  addMorphCentered: texto.ventanaAux  openCenteredInWorld .! !!Ventana methodsFor: 'error handling' stamp: 'Giuuuuli 1/24/2024 01:44' prior: 33701539!error: unTexto|ventanaAux texto|texto := TextMorph new contents: unTexto; color: Color blue ; bold.ventanaAux  := self class crearVentanaConAncho: (texto width + 40) altura: (texto height + 40) titulo: 'ERROR'.ventanaAux  addMorphCentered: texto.ventanaAux  openCenteredInWorld .! !----QUIT/NOSAVE----2024-01-25T01:59:09.094-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 139470!Object subclass: #AAA_Inicializador	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL'!!AAA_Inicializador methodsFor: 'inicializarViaje' stamp: 'Caiu 7/30/2023 16:39' prior: 33564060!inicializarViajeOrganizado|viaje1 viaje2|"viaje1 := crear: 'España-Italia-Londres' conCostoPersona:350 conImpuestos:70 conCantDias: 10 conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida.viaje2 := crear: '' conCostoPersona:350 conImpuestos:70 conCantDias: 10 conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida."! !!AAA_Inicializador methodsFor: 'inicializarViaje' stamp: 'Caiu 7/30/2023 17:34' prior: 33564483!inicializarViajeEspecial|viaje1 viaje2 viaje3|viaje1 := ViajeEspecial crear: 'Recital de Tan Bionica' conCostoPersona: 300	conImpuestos: 75 conDisponibilidad: 10	conFechaSalida: ((Date today)addMonths: 4)								conCiudad: 'Buenos Aires' conFechaRegreso: (((Date today)addMonths: 4)addDays: 3).viaje2 := ViajeEspecial crear: 'Mundial De Futbol Qatar 2022' conCostoPersona: 1200	conImpuestos: 300 conDisponibilidad: 4	conFechaSalida:'18-12-22'asDate  								conCiudad: 'Qatar' conFechaRegreso: '23-12-22' asDate .viaje3 := ViajeEspecial crear: 'Carnaval Rio 2024' conCostoPersona: 600	conImpuestos: 35 conDisponibilidad: 5	conFechaSalida: ((Date today)addMonths: 6)								conCiudad: 'Rio De Janeiro' conFechaRegreso: (((Date today)addMonths: 6)addDays: 10)  .								! !!AAA_Inicializador methodsFor: 'InicializarCliente' stamp: 'Caiu 7/30/2023 15:59' prior: 33565345!inicializarClientesNormales|cliente1 cliente2 cliente3|cliente1 := Cliente crear: 'Cayo' conDni: 40000000 conCiudadResidencia: 'Alumine' conContacto: 20000000.cliente2 := Cliente crear: 'Herrera' conDni: 41111111 conCiudadResidencia: 'Neuquen' conContacto: 21111111.cliente3 := Cliente crear: 'Vicentino' conDni: 42222222 conCiudadResidencia: 'Cinco Saltos' conContacto: 22222222.			! !!AAA_Inicializador methodsFor: 'InicializarCliente' stamp: 'Caiu 7/30/2023 16:01' prior: 33565819!inicializarClienteFrecuente|clienteF1|clienteF1 := ClienteFrecuente crear: 'Tartaglia' conDni: 44444444  conCiudadResidencia: 'Fiske Menuco'  conContacto: 2555555555  conMillas: 500 ! !!AAA_Inicializador methodsFor: 'InicializarExcursion' stamp: 'Caiu 7/30/2023 17:17' prior: 33566092!inicializarExcursionesOpcionales|exOp1 exOp2 exOp3|exOp1 := Excursion crear: 500 conCantPersonasE: 2.exOp2 := Excursion crear: 350 conCantPersonasE: 1.exOp3 := Excursion crear: 1500 conCantPersonasE: 4.! !!AAA_Inicializador methodsFor: 'InicializarContrato' stamp: 'Caiu 7/30/2023 17:41' prior: 33566386!inicializarContratos|contrato1 contrato2 contrato3|"contrato1 := Contrato crear: 000 conFechaCreacion: (Date today)  conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: .contrato2 := Contrato crear: 001 conFechaCreacion: ((Date today)addMonths: 2) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: .contrato3 := Contrato crear: 002 conFechaCreacion: ((Date today)addMonths: 3) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: ."! !!AAA_Inicializador methodsFor: 'InicializarContrato' stamp: 'Caiu 7/30/2023 17:41' prior: 33566980!inicializarContratosFlexibles|contratoF1 contratoF2|"contratoF1 := ContratoFlexible crear: 004 conFechaCreacion: (Date today) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas:  conValorPlus: .contratoF2 := ContratoFlexible crear: 005 conFechaCreacion: (Date today) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas:  conValorPlus: ."! !!AAA_Inicializador methodsFor: 'inicializarCuota' stamp: 'Caiu 7/30/2023 16:51' prior: 33567450!inicializarCuotas|cta1 cta2 cta3 cta4 cta5 cta6 cta7|cta1 := Cuota crear: (Date today).cta2 := Cuota crear: ((Date today)addDays: 6).cta3 := Cuota crear: ((Date today)addDays: 14).cta4 := Cuota crear: ((Date today)addMonths:1).cta5 := Cuota crear: ((Date today)addMonths:3).cta6 := Cuota crear: ((Date today)addMonths:3).cta7 := Cuota crear: ((Date today)addMonths:5).! !Object subclass: #Cliente	instanceVariableNames: 'apellido dni ciudadResidencia contacto colContratos contrasenia'	classVariableNames: ''	package: 'TPOFINAL'!!Cliente methodsFor: 'queries' stamp: 'Jere 1/23/2024 19:25' prior: 33568055!esIgual: unDni^ dni asString = unDni asString.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:30' prior: 33568148!revisarContratos|rta|.rta := colContratos detect:[:contrato | contrato revisarCuotas] ifNone:[nil]."se fija si hay un contrato con cuotas sin pagar a punto de vencer"^ rta isNotNil.! !!Cliente methodsFor: 'queries' stamp: 'GiuliannaVicentino 8/1/2023 19:45' prior: 33568411!tieneContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta isNotNil .! !!Cliente methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:02' prior: 33569301!getContrasenia^ contrasenia.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/24/2023 17:43' prior: 33568695!agregarContrato: unNumero conViaje: unViaje conFechaViaje: unaFecha conPersonas: personas conCuotas: cuotas|unContrato|.unContrato := Contrato crear: unNumero conFechaCreacion: Date today conViaje: unViaje conFechaViaje: unaFecha conCantPersonas: personas conColCuotas: cuotas conCantCuotas: cuotas size.colContratos add: unContrato.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:47' prior: 33569097!eliminarRefViaje: unNombreViajecolContratos do:[:contrato | (contrato tieneViaje: unNombreViaje) ifTrue:[colContratos remove: contrato]].! !!Cliente methodsFor: 'queries' stamp: '' prior: 33568573!agregarContrato: unContratocolContratos add:unContrato.! !!Cliente methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:22' prior: 33569396!buscarContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta .! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:07' prior: 33569580!pagarCuotas: cantCuotasAPagar conContrato: elContrato^ elContrato cancelarCuotas: cantCuotasAPagar.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/28/2023 19:57' prior: 33569746!obtenerContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta.! !!Cliente methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:00' prior: 33569930!inicializar: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContraseniaapellido:= unApellido .dni:= unDni .ciudadResidencia := unaCiudad .contacto := unContacto .colContratos := OrderedCollection new.contrasenia := unaContrasenia.! !!Cliente methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/24/2023 21:11' prior: 33570298!buscarContratoAPagar: unNroContrato|elContrato|elContrato := colContratos detect: [:cadaContrato| (cadaContrato numero = unNroContrato )].^ elContrato.! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33571509!ciudadResidencia: anObject	ciudadResidencia := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33570520!dni	^ dni! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33570695!apellido	^ apellido! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33570784!colContratos	^ colContratos! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33570881!apellido: anObject	apellido := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33570990!colContratos: anObject	colContratos := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33571107!contacto	^ contacto! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33571301!dni: anObject	dni := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33571196!ciudadResidencia	^ ciudadResidencia! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33571400!contacto: anObject	contacto := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 19:49' prior: 33570599!getContratos^ colContratos.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 19:30'!getContratosString|contratos|.contratos := OrderedCollection new.colContratos do:[:contrato | contratos add: contrato toString].^ contratos.! !!Cliente methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:22' prior: 33571632!cancelarContratoA: unNroContrato|elContrato elReembolso elViaje laFecha laCantPersonas|elContrato  := (colContratos detect: [:cdaContrato | (cdaContrato getNroContrato = unNroContrato  )]).elReembolso := elContrato reembolsar.elViaje := elContrato getRefViaje.laFecha := elContrato getFechaViaje.laCantPersonas := elContrato getCantPersonas.elViaje liberarCupo: laCantPersonas enFecha: laFecha .colContratos remove: [ :cdaContrato | cdaContrato = elContrato].^ elReembolso .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'constructor' stamp: 'Jere 1/15/2024 20:06' prior: 33572293!crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra|nuevoCliente|nuevoCliente:=self new.nuevoCliente inicializar: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra.^ nuevoCliente.! !Cliente subclass: #ClienteFrecuente	instanceVariableNames: 'millas'	classVariableNames: ''	package: 'TPOFINAL'!!ClienteFrecuente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:47' prior: 33572787!getMillas^ millas.! !!ClienteFrecuente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:45' prior: 33572883!setMillas: unasMillasmillas := unasMillas.! !!ClienteFrecuente methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:24' prior: 33573001!cancelarContratoA: unNroContrato|elReembolso|elReembolso := super cancelarContratoA: unNroContrato. millas := millas + elReembolso.^ elReembolso .! !!ClienteFrecuente methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:58' prior: 33573226!pagarCuotasCFrecuente: cantCuotasAPagar conQuiereMillas: quiereMillas conContrato: elContrato|rta|.rta := elContrato pagarContratoFrecuente: cantCuotasAPagar conQuiereMillas: quiereMillas conCliente: self.^ rta.! !!ClienteFrecuente methodsFor: 'queries' stamp: 'Caiu 7/30/2023 15:56' prior: 33573516!inicializar: unasMillasmillas:= unasMillas .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ClienteFrecuente class	instanceVariableNames: ''!!ClienteFrecuente class methodsFor: 'constructor' stamp: 'Jere 1/16/2024 17:34' prior: 33573757!crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conMillas: unasMillas conContrasenia: unaContra|nuevoClienteFrecuente|nuevoClienteFrecuente := self crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra.nuevoClienteFrecuente inicializar: unasMillas.^nuevoClienteFrecuente ! !Object subclass: #Contrato	instanceVariableNames: 'numero fechaCreacion refViaje fechaViaje cantPersonas colCuotas cantCuotas colExcursionesContrato'	classVariableNames: ''	package: 'TPOFINAL'!!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575717!colCuotas	^ colCuotas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575809!fechaCreacion: anObject	fechaCreacion := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/29/2023 23:10' prior: 33575624!getNroContrato^ numero ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:09' prior: 33576122!getFechaViaje^ fechaViaje ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575192!cantCuotas	^ cantCuotas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33574573!cantCuotas: anObject	cantCuotas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575510!fechaViaje: anObject	fechaViaje := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575286!numero: anObject	numero := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:10' prior: 33579527!getCantPersonas^ cantPersonas ! !!Contrato methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:10' prior: 33574879!getCuotas^ colCuotas.! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33574483!refViaje	^ refViaje! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575080!colCuotas: anObject	colCuotas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575929!fechaCreacion	^ fechaCreacion! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33574970!refViaje: anObject	refViaje := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:10' prior: 33576029!getRefViaje ^ refViaje ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33574781!cantPersonas	^ cantPersonas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33575392!cantPersonas: anObject	cantPersonas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33574687!fechaViaje	^ fechaViaje! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33574397!numero	^ numero! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:29' prior: 33578218!revisarCuotas|rta|.(colCuotas size > 0)ifTrue:[rta := colCuotas detect:[:cuota | cuota revisarFechaVencimiento] ifNone:[nil]].^ rta isNotNil. ! !!Contrato methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/31/2023 20:04' prior: 33578104!esIgual: unNumContrato^unNumContrato = numero ! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:42' prior: 33576216!tieneViaje: unNombreViaje^ refViaje esIgual: unNombreViaje.! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 22:46' prior: 33577124!inicializar: unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCantnumero:=unNumero.fechaCreacion :=unaFechaCreacion .refViaje := unViaje .fechaViaje := unaFechaV .colCuotas := unaColCuotas .cantCuotas := unaCant .cantPersonas := unaCantPersonas .colExcursionesContrato := OrderedCollection new.! !!Contrato methodsFor: 'queries' stamp: '' prior: 33578964!cancelarCuotas: cuotasAPagar"este metodo da por sentado que la coleccion de cuotas está ordenada de modo que la ultima cuota es la mas proxima a vencer"    |pagoExitoso cuotasAPagarAux cuotaAux|    cuotasAPagarAux := cuotasAPagar."chequea que efectivamene tenga cuotas que pagar" 1 to: cuotasAPagarAux  do: [:each|	      cuotaAux := colCuotas detect: [:unaCuota| (unaCuota cuotaPagada)]. cuotaAux ifNotNil: [cuotaAux pagar. pagoExitoso := true]    ].    ^ pagoExitoso .! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:49' prior: 33578430!pagarContratoFrecuente: cantCuotasPagar conQuiereMillas: quiereMillas conCliente: unCliente|pagoExitoso costoTotal millasPosibles|.pagoExitoso := self cancelarCuotas: cantCuotasPagar.(pagoExitoso & quiereMillas) ifTrue:	[		|millasCliente|.		millasCliente := unCliente getMillas.		costoTotal := refViaje obtenerCostoTotal: cantPersonas.		millasPosibles := costoTotal * 0.10.		(millasCliente >= millasPosibles) ifTrue:[unCliente setMillas: millasCliente-millasPosibles].	].^ pagoExitoso.! !!Contrato methodsFor: 'queries' stamp: 'Jere 1/25/2024 19:45'!toString^ 'Numero de contrato: ',numero asString,' | Nombre del viaje: ',refViaje getNombre,' | Fecha creacion: ',fechaCreacion asString,' | Cantidad de personas: ',cantPersonas asString,' | Cantidad de cuotas por pagar: ',cantCuotas asString,'.'.! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:42' prior: 33576354!eliminarCuotas: cuotasAPagar				"este metodo da por sentado que la coleccion de cuotas está ordenada de modo que la ultima cuota es la mas proxima a vencer"	|pagoExitoso cuotasAPagarAux |	cuotasAPagarAux := cuotasAPagar."chequea que efectivamene tenga cuotas que pagar" 1 to: cuotasAPagarAux  size do: [ colCuotas detect: [ :unaCuota| (unaCuota cuotaPagada) ifTrue:[ unaCuota pagar.   cuotasAPagarAux := (cuotasAPagarAux - 1).pagoExitoso := true.  ] ]. ]. 						^ pagoExitoso .		 ! !!Contrato methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:33' prior: 33576912!efectivizarContratoB|efectivizado|efectivizado := ((cantCuotas  = 0) & (( fechaViaje > ((Date today) addDays: 7 )))).^ efectivizado .! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 23:15' prior: 33577615!agregarExcursionOp: unaExcursion para: unaCantPersonas	|agregado|	(unaCantPersonas <= cantPersonas) ifTrue: [(unaExcursion actualizarCantPersonasE: unaCantPersonas ).															(refViaje actualizarExcursionesEnViaje: unaExcursion).															(agregado := true).															colExcursionesContrato add: unaExcursion.] 																										ifFalse: (agregado := false).		^ agregado.  	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Contrato class	instanceVariableNames: ''!!Contrato class methodsFor: 'constructor' stamp: '' prior: 33579708!crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant|nuevoContrato|nuevoContrato := self new.nuevoContrato inicializar: unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant.^nuevoContrato ! !Contrato subclass: #ContratoFlexible	instanceVariableNames: 'valorPlus'	classVariableNames: ''	package: 'TPOFINAL'!!ContratoFlexible methodsFor: 'punto_e' stamp: 'Jere 7/30/2023 19:54' prior: 33580329!reembolsar|elReembolso elCosto elImpuesto|elCosto := refViaje getCostoXPersona.elImpuesto := refViaje getImpuesto.((Date today) <= (fechaViaje addMonths: -3))ifTrue: [    elReembolso := ((0,75)* ((elCosto * cantPersonas) + elImpuesto )).] ifFalse: [	elReembolso := ((0,25)* ((elCosto * cantPersonas) + elImpuesto)).    ((Date today) > (fechaViaje addMonths: -3) & ((Date today) < (fechaViaje addMonths: -2))) ifTrue: [        elReembolso := ((0,50)* ((elCosto * cantPersonas) + elImpuesto )).    ]     ].																	 ^ elReembolso ! !!ContratoFlexible methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:02' prior: 33580953!modificarContratoB: unaFecha |modificacionValida|(self tieneViajeOrganizado) ifTrue: [ (refViaje buscaFecha: unaFecha conCupo: cantPersonas )ifTrue: [ self fechaViaje: unaFecha. modificacionValida := true.  ] ifFalse: [ modificacionValida := false ]  ] ifFalse: [ modificacionValida := false ].^ modificacionValida. ! !!ContratoFlexible methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 22:23' prior: 33581494!inicializarvalorPlus := (((refViaje getCostoXPersona) * cantPersonas) + (((refViaje getCostoXPersona) * cantPersonas)*0.10)).! !!ContratoFlexible methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/21/2023 20:05' prior: 33581362!inicializar:unValorPlusvalorPlus :=unValorPlus ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ContratoFlexible class	instanceVariableNames: ''!!ContratoFlexible class methodsFor: 'constructor' stamp: '' prior: 33581786!crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant conValorPlus: unValorPlus	|nuevoContratoFlexible|	nuevoContratoFlexible := self crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant.	nuevoContratoFlexible inicializar.	^nuevoContratoFlexible ! !Object subclass: #Cuota	instanceVariableNames: 'fechaVencimiento estado'	classVariableNames: ''	package: 'TPOFINAL'!!Cuota methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:23' prior: 33582471!inicializar:unaFechafechaVencimiento := unaFecha .estado:= false! !!Cuota methodsFor: 'queries' stamp: '' prior: 33582665!cuotaPagada^estado not.! !!Cuota methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:23' prior: 33582613!pagarestado:=true! !!Cuota methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:28' prior: 33582753!revisarFechaVencimiento^ ((Date today<fechaVencimiento) & (Date today>= (fechaVencimiento - 7 days))). "es decir que esta en los ultimos 7 dias"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cuota class	instanceVariableNames: ''!!Cuota class methodsFor: 'constructor' stamp: '' prior: 33583042!crear: unaFecha	|nuevaCuota|	nuevaCuota := self new.	nuevaCuota inicializar:unaFecha.	^nuevaCuota ! !Object subclass: #EmpresaTurismo	instanceVariableNames: 'colClientes colViajes'	classVariableNames: ''	package: 'TPOFINAL'!!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33583469!colViajes	^ colViajes! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33583347!colClientes: anObject	colClientes := anObject! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33583567!colClientes	^ colClientes! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33583669!colViajes: anObject	colViajes := anObject! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:49' prior: 33587036!cancelarViaje: unNombreViajecolClientes do:[:cliente | cliente eliminarRefViaje: unNombreViaje].! !!EmpresaTurismo methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:53' prior: 33584299!generarContrato: unDni conNum: unNumero conViaje: unViaje conFecha: unaFecha conPersonas: personas conCuotas: cuotas|unCliente|.unCliente := colClientes detect:[:cliente | cliente esIgual: unDni] ifNone:[nil].(unCliente) ifNotNil:[unCliente agregarContrato: unNumero conViaje: unViaje conFechaViaje:  unaFecha conPersonas: personas conCuotas: cuotas].! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:16' prior: 33584035!listar: fecha1 conOtraFecha: fecha2|listado|listado:=OrderedCollection new.listado := colViajes select:[:unViaje|unViaje verificarFecha: fecha1 conOtraFecha: fecha2].^ listado.! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33584697!agregarCliente: unClientecolClientes add:unCliente.! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33584792!revisionDiariaContratos|clientesANotificar|.clientesANotificar := colClientes select:[:cliente | cliente revisarContratos]."se retornan los clientes y luego se les deberia mandar una notificacion a cada uno"^ clientesANotificar.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:03' prior: 33585847!verificarContrasenia: unCliente conContrasenia: unaContrasenia|correcta contraseniaCorrecta|.contraseniaCorrecta := unCliente getContrasenia.correcta := unaContrasenia = contraseniaCorrecta.^ correcta.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/23/2024 11:29' prior: 33693310!encontrarClienteconDNI: unDni^ colClientes detect:[:unCliente | unCliente esIgual: unDni]ifNone: [nil].! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33585478!agregarViaje: unViajecolViajes add:unViaje.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/29/2023 22:08' prior: 33585595!modificarValorImpuestos: nuevoValor conNombreViaje: nombreViaje|elViaje|.elViaje := colViajes detect:[:viaje | viaje esIgual: nombreViaje].elViaje setValorImpuesto: nuevoValor.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/30/2023 20:00' prior: 33585097!modificarFechaViaje: unNombreViaje conFecha1: fecha1 conFecha2: fecha2|elViaje|.elViaje := colViajes detect:[:unViaje | unViaje esIgual: unNombreViaje].! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33586095!inicializar colClientes:= OrderedCollection new.colViajes := OrderedCollection new.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'GiuliannaVicentino 8/1/2023 19:46' prior: 33586266!registrarPagos:unNroContrato conCuotas: cantCuotasAPagar conQuiereMillas:quiereMillas|clienteAPagar contratoAPagar mensajeRespuesta|.clienteAPagar := colClientes detect:[:cadaCliente | cadaCliente tieneContrato: unNroContrato].(clienteAPagar) ifNotNil:[contratoAPagar := clienteAPagar  buscarContrato: unNroContrato.].(contratoAPagar) ifNotNil: [quiereMillas ifTrue:[[clienteAPagar  pagarContratoFrecuente:cantCuotasAPagar conQuiereMillas: quiereMillas conCliente:clienteAPagar] ifTrue: [mensajeRespuesta := 'Pago Exitoso'] ifFalse: [[mensajeRespuesta := 'Error al pagar las Cuotas']]] ifFalse:[clienteAPagar pagarCuotas: cantCuotasAPagar conContrato:contratoAPagar]].  ^ mensajeRespuesta.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/29/2023 22:07' prior: 33583785!modificarCostoPersona: nuevoCosto conNombreViaje: nombreViaje|unViaje|.unViaje := colViajes detect:[:viaje | viaje esIgual: nombreViaje].unViaje setCostoPersona: nuevoCosto.! !!EmpresaTurismo methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 22:55' prior: 33587206!ModificarContrato: unNroContrato A: unaFecha| elCliente elContrato reembolso|elContrato := (colClientes   detect: [ :cdaCliente | cdaCliente buscarContrato: unNroContrato  ]).( elContrato isNotNil ) ifTrue: [ elCliente := (colClientes   detect: [ :cdaCliente | cdaCliente buscarContrato: unNroContrato.											  (elContrato modificarContratoB: unaFecha) ifFalse: [reembolso := (elCliente cancelarContrato: unNroContrato)] . ]) ].^ reembolso ! !!EmpresaTurismo methodsFor: 'punto_e' stamp: 'Jere 7/30/2023 18:56' prior: 33587728!efectivizarContratoA: unNroContrato	|elContrato elCliente|	elCliente  := colClientes detect:[:cdaCliente | (cdaCliente getNroContrato)=unNroContrato].	(elCliente) ifNotNil: [elContrato := elCliente buscarContrato: unNroContrato].	^ elContrato efectivizarContratoB.! !!EmpresaTurismo methodsFor: 'punto_f' stamp: 'GiuliVicentino 1/3/2024 23:26' prior: 33588078!agregarExcOpcional: unaExcursion AContrato: nroContrato paraCantPersonas: unaCantPersonas	| agregada elCliente elContrato |	elCliente := colClientes detect: [ :cdaCliente | (cdaCliente buscarContrato: nroContrato) isNotNil  ].	Transcript show: 'jeree'.	elCliente ifNotNil: [elContrato:= elCliente buscarContrato:nroContrato.		                 agregada := (elContrato agregarExcursionOp:unaExcursion para: unaCantPersonas )].	^ agregada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EmpresaTurismo class	instanceVariableNames: ''!!EmpresaTurismo class methodsFor: 'constructor' stamp: '' prior: 33588682!crear |nuevaEmpresa|.nuevaEmpresa := self new.nuevaEmpresa inicializar.^nuevaEmpresa .! !Object subclass: #Etapa	instanceVariableNames: 'fechaLlegada diasEnCiudad hotel tipoPension listaActividades'	classVariableNames: ''	package: 'TPOFINAL'!!Etapa methodsFor: 'queries' stamp: '' prior: 33588964!inicializar:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaListafechaLlegada :=unaFechaLlegada .diasEnCiudad := unosDias .hotel :=unHotel.listaActividades := unaLista! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Etapa class	instanceVariableNames: ''!!Etapa class methodsFor: 'constructor' stamp: '' prior: 33589334!crear:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaLista	|nuevaEtapa|	nuevaEtapa := self new.	nuevaEtapa inicializar:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaLista.	^ nuevaEtapa ! !Object subclass: #Excursion	instanceVariableNames: 'costo cantPersonasE'	classVariableNames: ''	package: 'TPOFINAL'!!Excursion methodsFor: 'queries' stamp: '' prior: 33589795!inicializar:unCosto conCantPersonasE: unaCantcosto := unCosto .cantPersonasE := unaCant .! !!Excursion methodsFor: 'queries' stamp: 'Caiu 7/29/2023 21:47' prior: 33589954!actualizarCantPersonasE: unaCantPersonascantPersonasE := unaCantPersonas ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Excursion class	instanceVariableNames: ''!!Excursion class methodsFor: 'constructor' stamp: '' prior: 33590180!crar:unCosto conCantPersonasE: unaCant	|nuevaExcursion|	nuevaExcursion := self new.	nuevaExcursion inicializar:unCosto conCantPersonasE: unaCant.	^nuevaExcursion ! !!Excursion class methodsFor: 'constructor' stamp: 'Caiu 7/30/2023 17:05' prior: 33590424!crear: unCosto conCantPersonasE: unaCant	|nuevaExcursion|	nuevaExcursion := self new.	nuevaExcursion inicializar:unCosto conCantPersonasE: unaCant.	^nuevaExcursion ! !Object subclass: #Viaje	instanceVariableNames: 'nombre costoPersona impuestos'	classVariableNames: ''	package: 'TPOFINAL'!!Viaje methodsFor: 'printing' stamp: 'Jere 1/25/2024 19:06'!toString^ nombre, 'costo: ',costoPersona.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 22:06' prior: 33590785!setValorImpuesto: nuevoValorimpuestos := nuevoValor.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/30/2023 19:52' prior: 33590989!getCostoXPersona^ costoPersona.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 21:17' prior: 33590904!getNombre^ nombre.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 22:06' prior: 33591087!setCostoPersona: nuevoCostocostoPersona := nuevoCosto.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/30/2023 19:53' prior: 33591208!getImpuesto^ impuestos.! !!Viaje methodsFor: 'queries' stamp: '' prior: 33591266!verificarFecha: fecha1 conOtraFecha: fecha2self subclassResponsibility.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:36' prior: 33591402!obtenerCostoTotal: cantPersonas^ (costoPersona * cantPersonas) + impuestos.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/29/2023 21:15' prior: 33591542!esIgual: unNombre^ nombre = unNombre.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:09' prior: 33591644!modificarFecha: fecha1 conFecha2: fecha2self subclassResponsibility.! !!Viaje methodsFor: 'queries' stamp: '' prior: 33591747!inicializar:unNombre conCostoPersona:unCosto conImpuestos:unosImpuestosnombre := unNombre .costoPersona :=unCosto .impuestos := unosImpuestos .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Viaje class	instanceVariableNames: ''!!Viaje class methodsFor: 'constructor' stamp: '' prior: 33592037!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos|nuevoViaje|nuevoViaje := self new.nuevoViaje inicializar:unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.^nuevoViaje ! !Viaje subclass: #ViajeEspecial	instanceVariableNames: 'disponibilidad fechaSalida ciudad fechaRegreso'	classVariableNames: ''	package: 'TPOFINAL'!!ViajeEspecial methodsFor: 'queries' stamp: '' prior: 33592430!inicializar:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaRdisponibilidad := unaDisponibilidad .fechaSalida :=unaFechaS .fechaRegreso := unaFechaR .ciudad:= unaCiudad.! !!ViajeEspecial methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:19' prior: 33592716!verificarFecha: fecha1 conOtraFecha: fecha2|rta|.rta := false.((disponibilidad) > 0 & (fechaSalida>=fecha1) & (fechaSalida<=fecha2)) ifTrue:[rta := true].^ rta.! !!ViajeEspecial methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:10' prior: 33592952!modificarFecha: fecha1 conFecha2: fecha2|fueModificada|.fueModificada := false.(fecha2>=fecha1) ifTrue:[fueModificada := true. fechaSalida := fecha1. fechaRegreso := fecha2].^ fueModificada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeEspecial class	instanceVariableNames: ''!!ViajeEspecial class methodsFor: 'constructor' stamp: '' prior: 33593306!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos conDisponibilidad:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaR|nuevoViajeEspecial|nuevoViajeEspecial := self crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.nuevoViajeEspecial inicializar:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaR.^nuevoViajeEspecial ! !Viaje subclass: #ViajeOrganizado	instanceVariableNames: 'cantDias colEtapas colOpcionesSalida colExcursiones'	classVariableNames: ''	package: 'TPOFINAL'!!ViajeOrganizado methodsFor: 'queries' stamp: '' prior: 33594177!inicializar:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalidacantDias := unaCantDias .colEtapas := unaColEtapas .colOpcionesSalida := unaColOpSalida .colExcursiones := OrderedCollection new.! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:13' prior: 33593971!liberarCupo: laCantPersonas enFecha: laFecha "si existe una opSalida en colOpcionesSalida tal que fechaSalida == laFecha entonces cupo := cupo + laCantPersonas "! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:27' prior: 33594726!modificarFecha: fecha1 conFecha2: fecha2|fueModificada valorAux|.fueModificada := false.colOpcionesSalida keysAndValuesDo: [:clave :valor | (clave=fecha1) ifTrue:[valorAux := valor.colOpcionesSalida remove: clave. colOpcionesSalida at:fecha2 put: valorAux. fueModificada := true]].^ fueModificada.! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/29/2023 21:46' prior: 33594576!actualizarExcursionesEnViaje: unaExcursioncolExcursiones add: unaExcursion.! !!ViajeOrganizado methodsFor: 'queries' stamp: '' prior: 33594440!agregarExcursion: unaExcursioncolExcursiones add:unaExcursion! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/29/2023 23:07' prior: 33595101!buscaFecha: laFecha conCupo: laCantPersonas|fechaDisponible|fechaDisponible := colOpcionesSalida detect: [ :cdaOpSalida | cdaOpSalida " como comparo elementos de una dupla??"  ].^ fechaDisponible .! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:20' prior: 33595375!verificarFecha: fecha1 conOtraFecha: fecha2|rta|rta:=true.colOpcionesSalida keysAndValuesDo: [:clave :cupo| ((clave>=fecha1) & (clave<=fecha2) & (cupo>0)) ifTrue:[rta:=true]].^ rta.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeOrganizado class	instanceVariableNames: ''!!ViajeOrganizado class methodsFor: 'constructor' stamp: '' prior: 33595724!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos conCantDias:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida|nuevoViajeOrganizado|nuevoViajeOrganizado := self crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.nuevoViajeOrganizado inicializar:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida.^nuevoViajeOrganizado ! !PackageManifest subclass: #ManifestTPOFINAL	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL-Manifest'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestTPOFINAL class	instanceVariableNames: ''!!ManifestTPOFINAL class methodsFor: 'code-critics' stamp: 'Jere 7/28/2023 20:49' prior: 33596772!ruleGuardingClauseRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#TPOFINAL)) #'2023-07-28T20:49:39.187-03:00') )! !----End fileIn----!Object subclass: #AAA_Inicializador	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL'!!AAA_Inicializador methodsFor: 'inicializarViaje' stamp: 'Caiu 7/30/2023 16:39' prior: 33702523!inicializarViajeOrganizado|viaje1 viaje2|"viaje1 := crear: 'España-Italia-Londres' conCostoPersona:350 conImpuestos:70 conCantDias: 10 conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida.viaje2 := crear: '' conCostoPersona:350 conImpuestos:70 conCantDias: 10 conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida."! !!AAA_Inicializador methodsFor: 'inicializarViaje' stamp: 'Caiu 7/30/2023 17:34' prior: 33702962!inicializarViajeEspecial|viaje1 viaje2 viaje3|viaje1 := ViajeEspecial crear: 'Recital de Tan Bionica' conCostoPersona: 300	conImpuestos: 75 conDisponibilidad: 10	conFechaSalida: ((Date today)addMonths: 4)								conCiudad: 'Buenos Aires' conFechaRegreso: (((Date today)addMonths: 4)addDays: 3).viaje2 := ViajeEspecial crear: 'Mundial De Futbol Qatar 2022' conCostoPersona: 1200	conImpuestos: 300 conDisponibilidad: 4	conFechaSalida:'18-12-22'asDate  								conCiudad: 'Qatar' conFechaRegreso: '23-12-22' asDate .viaje3 := ViajeEspecial crear: 'Carnaval Rio 2024' conCostoPersona: 600	conImpuestos: 35 conDisponibilidad: 5	conFechaSalida: ((Date today)addMonths: 6)								conCiudad: 'Rio De Janeiro' conFechaRegreso: (((Date today)addMonths: 6)addDays: 10)  .								! !!AAA_Inicializador methodsFor: 'InicializarCliente' stamp: 'Caiu 7/30/2023 15:59' prior: 33703840!inicializarClientesNormales|cliente1 cliente2 cliente3|cliente1 := Cliente crear: 'Cayo' conDni: 40000000 conCiudadResidencia: 'Alumine' conContacto: 20000000.cliente2 := Cliente crear: 'Herrera' conDni: 41111111 conCiudadResidencia: 'Neuquen' conContacto: 21111111.cliente3 := Cliente crear: 'Vicentino' conDni: 42222222 conCiudadResidencia: 'Cinco Saltos' conContacto: 22222222.			! !!AAA_Inicializador methodsFor: 'InicializarCliente' stamp: 'Caiu 7/30/2023 16:01' prior: 33704330!inicializarClienteFrecuente|clienteF1|clienteF1 := ClienteFrecuente crear: 'Tartaglia' conDni: 44444444  conCiudadResidencia: 'Fiske Menuco'  conContacto: 2555555555  conMillas: 500 ! !!AAA_Inicializador methodsFor: 'InicializarExcursion' stamp: 'Caiu 7/30/2023 17:17' prior: 33704619!inicializarExcursionesOpcionales|exOp1 exOp2 exOp3|exOp1 := Excursion crear: 500 conCantPersonasE: 2.exOp2 := Excursion crear: 350 conCantPersonasE: 1.exOp3 := Excursion crear: 1500 conCantPersonasE: 4.! !!AAA_Inicializador methodsFor: 'InicializarContrato' stamp: 'Caiu 7/30/2023 17:41' prior: 33704929!inicializarContratos|contrato1 contrato2 contrato3|"contrato1 := Contrato crear: 000 conFechaCreacion: (Date today)  conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: .contrato2 := Contrato crear: 001 conFechaCreacion: ((Date today)addMonths: 2) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: .contrato3 := Contrato crear: 002 conFechaCreacion: ((Date today)addMonths: 3) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas: ."! !!AAA_Inicializador methodsFor: 'InicializarContrato' stamp: 'Caiu 7/30/2023 17:41' prior: 33705539!inicializarContratosFlexibles|contratoF1 contratoF2|"contratoF1 := ContratoFlexible crear: 004 conFechaCreacion: (Date today) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas:  conValorPlus: .contratoF2 := ContratoFlexible crear: 005 conFechaCreacion: (Date today) conViaje:  conFechaViaje:  conCantPersonas:  conColCuotas:  conCantCuotas:  conValorPlus: ."! !!AAA_Inicializador methodsFor: 'inicializarCuota' stamp: 'Caiu 7/30/2023 16:51' prior: 33706025!inicializarCuotas|cta1 cta2 cta3 cta4 cta5 cta6 cta7|cta1 := Cuota crear: (Date today).cta2 := Cuota crear: ((Date today)addDays: 6).cta3 := Cuota crear: ((Date today)addDays: 14).cta4 := Cuota crear: ((Date today)addMonths:1).cta5 := Cuota crear: ((Date today)addMonths:3).cta6 := Cuota crear: ((Date today)addMonths:3).cta7 := Cuota crear: ((Date today)addMonths:5).! !Object subclass: #Cliente	instanceVariableNames: 'apellido dni ciudadResidencia contacto colContratos contrasenia'	classVariableNames: ''	package: 'TPOFINAL'!!Cliente methodsFor: 'queries' stamp: 'Jere 1/23/2024 19:25' prior: 33706646!esIgual: unDni^ dni asString = unDni asString.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:30' prior: 33706775!revisarContratos|rta|.rta := colContratos detect:[:contrato | contrato revisarCuotas] ifNone:[nil]."se fija si hay un contrato con cuotas sin pagar a punto de vencer"^ rta isNotNil.! !!Cliente methodsFor: 'queries' stamp: 'GiuliannaVicentino 8/1/2023 19:45' prior: 33707054!tieneContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta isNotNil .! !!Cliente methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:02' prior: 33707262!getContrasenia^ contrasenia.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/24/2023 17:43' prior: 33707373!agregarContrato: unNumero conViaje: unViaje conFechaViaje: unaFecha conPersonas: personas conCuotas: cuotas|unContrato|.unContrato := Contrato crear: unNumero conFechaCreacion: Date today conViaje: unViaje conFechaViaje: unaFecha conCantPersonas: personas conColCuotas: cuotas conCantCuotas: cuotas size.colContratos add: unContrato.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:47' prior: 33707791!eliminarRefViaje: unNombreViajecolContratos do:[:contrato | (contrato tieneViaje: unNombreViaje) ifTrue:[colContratos remove: contrato]].! !!Cliente methodsFor: 'queries' stamp: '' prior: 33707991!agregarContrato: unContratocolContratos add:unContrato.! !!Cliente methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:22' prior: 33708129!buscarContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta .! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:07' prior: 33708329!pagarCuotas: cantCuotasAPagar conContrato: elContrato^ elContrato cancelarCuotas: cantCuotasAPagar.! !!Cliente methodsFor: 'queries' stamp: 'Jere 7/28/2023 19:57' prior: 33708511!obtenerContrato: nroContrato|rta|.rta := colContratos detect:[:unContrato | unContrato esIgual: nroContrato].^ rta.! !!Cliente methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:00' prior: 33708711!inicializar: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContraseniaapellido:= unApellido .dni:= unDni .ciudadResidencia := unaCiudad .contacto := unContacto .colContratos := OrderedCollection new.contrasenia := unaContrasenia.! !!Cliente methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/24/2023 21:11' prior: 33709095!buscarContratoAPagar: unNroContrato|elContrato|elContrato := colContratos detect: [:cadaContrato| (cadaContrato numero = unNroContrato )].^ elContrato.! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33709333!ciudadResidencia: anObject	ciudadResidencia := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33709474!dni	^ dni! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33709569!apellido	^ apellido! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33709674!colContratos	^ colContratos! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33709787!apellido: anObject	apellido := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33709912!colContratos: anObject	colContratos := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33710045!contacto	^ contacto! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33710150!dni: anObject	dni := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33710265!ciudadResidencia	^ ciudadResidencia! !!Cliente methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33710386!contacto: anObject	contacto := anObject! !!Cliente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 19:49' prior: 33710511!getContratos^ colContratos.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 19:30' prior: 33710617!getContratosString|contratos|.contratos := OrderedCollection new.colContratos do:[:contrato | contratos add: contrato toString].^ contratos.! !!Cliente methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:22' prior: 33710844!cancelarContratoA: unNroContrato|elContrato elReembolso elViaje laFecha laCantPersonas|elContrato  := (colContratos detect: [:cdaContrato | (cdaContrato getNroContrato = unNroContrato  )]).elReembolso := elContrato reembolsar.elViaje := elContrato getRefViaje.laFecha := elContrato getFechaViaje.laCantPersonas := elContrato getCantPersonas.elViaje liberarCupo: laCantPersonas enFecha: laFecha .colContratos remove: [ :cdaContrato | cdaContrato = elContrato].^ elReembolso .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'constructor' stamp: 'Jere 1/15/2024 20:06' prior: 33711521!crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra|nuevoCliente|nuevoCliente:=self new.nuevoCliente inicializar: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra.^ nuevoCliente.! !Cliente subclass: #ClienteFrecuente	instanceVariableNames: 'millas'	classVariableNames: ''	package: 'TPOFINAL'!!ClienteFrecuente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:47' prior: 33712031!getMillas^ millas.! !!ClienteFrecuente methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:45' prior: 33712143!setMillas: unasMillasmillas := unasMillas.! !!ClienteFrecuente methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:24' prior: 33712277!cancelarContratoA: unNroContrato|elReembolso|elReembolso := super cancelarContratoA: unNroContrato. millas := millas + elReembolso.^ elReembolso .! !!ClienteFrecuente methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:58' prior: 33712518!pagarCuotasCFrecuente: cantCuotasAPagar conQuiereMillas: quiereMillas conContrato: elContrato|rta|.rta := elContrato pagarContratoFrecuente: cantCuotasAPagar conQuiereMillas: quiereMillas conCliente: self.^ rta.! !!ClienteFrecuente methodsFor: 'queries' stamp: 'Caiu 7/30/2023 15:56' prior: 33712824!inicializar: unasMillasmillas:= unasMillas .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ClienteFrecuente class	instanceVariableNames: ''!!ClienteFrecuente class methodsFor: 'constructor' stamp: 'Jere 1/16/2024 17:34' prior: 33713081!crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conMillas: unasMillas conContrasenia: unaContra|nuevoClienteFrecuente|nuevoClienteFrecuente := self crear: unApellido conDni: unDni conCiudadResidencia: unaCiudad conContacto: unContacto conContrasenia: unaContra.nuevoClienteFrecuente inicializar: unasMillas.^nuevoClienteFrecuente ! !Object subclass: #Contrato	instanceVariableNames: 'numero fechaCreacion refViaje fechaViaje cantPersonas colCuotas cantCuotas colExcursionesContrato'	classVariableNames: ''	package: 'TPOFINAL'!!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33713737!colCuotas	^ colCuotas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33713845!fechaCreacion: anObject	fechaCreacion := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/29/2023 23:10' prior: 33713981!getNroContrato^ numero ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:09' prior: 33714090!getFechaViaje^ fechaViaje ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33714202!cantCuotas	^ cantCuotas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33714312!cantCuotas: anObject	cantCuotas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33714442!fechaViaje: anObject	fechaViaje := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33714572!numero: anObject	numero := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:10' prior: 33714694!getCantPersonas^ cantPersonas ! !!Contrato methodsFor: 'accessing' stamp: 'Jere 7/28/2023 20:10' prior: 33714810!getCuotas^ colCuotas.! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33714917!refViaje	^ refViaje! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715023!colCuotas: anObject	colCuotas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715151!fechaCreacion	^ fechaCreacion! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715267!refViaje: anObject	refViaje := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/30/2023 00:10' prior: 33715393!getRefViaje ^ refViaje ! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715502!cantPersonas	^ cantPersonas! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715616!cantPersonas: anObject	cantPersonas := anObject! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715750!fechaViaje	^ fechaViaje! !!Contrato methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 14:37' prior: 33715860!numero	^ numero! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:29' prior: 33715960!revisarCuotas|rta|.(colCuotas size > 0)ifTrue:[rta := colCuotas detect:[:cuota | cuota revisarFechaVencimiento] ifNone:[nil]].^ rta isNotNil. ! !!Contrato methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/31/2023 20:04' prior: 33716202!esIgual: unNumContrato^unNumContrato = numero ! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:42' prior: 33716332!tieneViaje: unNombreViaje^ refViaje esIgual: unNombreViaje.! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 22:46' prior: 33716484!inicializar: unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCantnumero:=unNumero.fechaCreacion :=unaFechaCreacion .refViaje := unViaje .fechaViaje := unaFechaV .colCuotas := unaColCuotas .cantCuotas := unaCant .cantPersonas := unaCantPersonas .colExcursionesContrato := OrderedCollection new.! !!Contrato methodsFor: 'queries' stamp: '' prior: 33716962!cancelarCuotas: cuotasAPagar"este metodo da por sentado que la coleccion de cuotas está ordenada de modo que la ultima cuota es la mas proxima a vencer"    |pagoExitoso cuotasAPagarAux cuotaAux|    cuotasAPagarAux := cuotasAPagar."chequea que efectivamene tenga cuotas que pagar" 1 to: cuotasAPagarAux  do: [:each|	      cuotaAux := colCuotas detect: [:unaCuota| (unaCuota cuotaPagada)]. cuotaAux ifNotNil: [cuotaAux pagar. pagoExitoso := true]    ].    ^ pagoExitoso .! !!Contrato methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:49' prior: 33717529!pagarContratoFrecuente: cantCuotasPagar conQuiereMillas: quiereMillas conCliente: unCliente|pagoExitoso costoTotal millasPosibles|.pagoExitoso := self cancelarCuotas: cantCuotasPagar.(pagoExitoso & quiereMillas) ifTrue:	[		|millasCliente|.		millasCliente := unCliente getMillas.		costoTotal := refViaje obtenerCostoTotal: cantPersonas.		millasPosibles := costoTotal * 0.10.		(millasCliente >= millasPosibles) ifTrue:[unCliente setMillas: millasCliente-millasPosibles].	].^ pagoExitoso.! !!Contrato methodsFor: 'queries' stamp: 'Jere 1/25/2024 19:45' prior: 33718093!toString^ 'Numero de contrato: ',numero asString,' | Nombre del viaje: ',refViaje getNombre,' | Fecha creacion: ',fechaCreacion asString,' | Cantidad de personas: ',cantPersonas asString,' | Cantidad de cuotas por pagar: ',cantCuotas asString,'.'.! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:42' prior: 33718435!eliminarCuotas: cuotasAPagar				"este metodo da por sentado que la coleccion de cuotas está ordenada de modo que la ultima cuota es la mas proxima a vencer"	|pagoExitoso cuotasAPagarAux |	cuotasAPagarAux := cuotasAPagar."chequea que efectivamene tenga cuotas que pagar" 1 to: cuotasAPagarAux  size do: [ colCuotas detect: [ :unaCuota| (unaCuota cuotaPagada) ifTrue:[ unaCuota pagar.   cuotasAPagarAux := (cuotasAPagarAux - 1).pagoExitoso := true.  ] ]. ]. 						^ pagoExitoso .		 ! !!Contrato methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:33' prior: 33719009!efectivizarContratoB|efectivizado|efectivizado := ((cantCuotas  = 0) & (( fechaViaje > ((Date today) addDays: 7 )))).^ efectivizado .! !!Contrato methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 23:15' prior: 33719237!agregarExcursionOp: unaExcursion para: unaCantPersonas	|agregado|	(unaCantPersonas <= cantPersonas) ifTrue: [(unaExcursion actualizarCantPersonasE: unaCantPersonas ).															(refViaje actualizarExcursionesEnViaje: unaExcursion).															(agregado := true).															colExcursionesContrato add: unaExcursion.] 																										ifFalse: (agregado := false).		^ agregado.  	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Contrato class	instanceVariableNames: ''!!Contrato class methodsFor: 'constructor' stamp: '' prior: 33719821!crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant|nuevoContrato|nuevoContrato := self new.nuevoContrato inicializar: unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant.^nuevoContrato ! !Contrato subclass: #ContratoFlexible	instanceVariableNames: 'valorPlus'	classVariableNames: ''	package: 'TPOFINAL'!!ContratoFlexible methodsFor: 'punto_e' stamp: 'Jere 7/30/2023 19:54' prior: 33720458!reembolsar|elReembolso elCosto elImpuesto|elCosto := refViaje getCostoXPersona.elImpuesto := refViaje getImpuesto.((Date today) <= (fechaViaje addMonths: -3))ifTrue: [    elReembolso := ((0,75)* ((elCosto * cantPersonas) + elImpuesto )).] ifFalse: [	elReembolso := ((0,25)* ((elCosto * cantPersonas) + elImpuesto)).    ((Date today) > (fechaViaje addMonths: -3) & ((Date today) < (fechaViaje addMonths: -2))) ifTrue: [        elReembolso := ((0,50)* ((elCosto * cantPersonas) + elImpuesto )).    ]     ].																	 ^ elReembolso ! !!ContratoFlexible methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 23:02' prior: 33721098!modificarContratoB: unaFecha |modificacionValida|(self tieneViajeOrganizado) ifTrue: [ (refViaje buscaFecha: unaFecha conCupo: cantPersonas )ifTrue: [ self fechaViaje: unaFecha. modificacionValida := true.  ] ifFalse: [ modificacionValida := false ]  ] ifFalse: [ modificacionValida := false ].^ modificacionValida. ! !!ContratoFlexible methodsFor: 'queries' stamp: 'GiuliVicentino 1/3/2024 22:23' prior: 33721518!inicializarvalorPlus := (((refViaje getCostoXPersona) * cantPersonas) + (((refViaje getCostoXPersona) * cantPersonas)*0.10)).! !!ContratoFlexible methodsFor: 'queries' stamp: 'GiuliannaVicentino 7/21/2023 20:05' prior: 33721749!inicializar:unValorPlusvalorPlus :=unValorPlus ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ContratoFlexible class	instanceVariableNames: ''!!ContratoFlexible class methodsFor: 'constructor' stamp: '' prior: 33721989!crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant conValorPlus: unValorPlus	|nuevoContratoFlexible|	nuevoContratoFlexible := self crear:unNumero conFechaCreacion: unaFechaCreacion conViaje: unViaje conFechaViaje: unaFechaV conCantPersonas:unaCantPersonas conColCuotas:unaColCuotas conCantCuotas:unaCant.	nuevoContratoFlexible inicializar.	^nuevoContratoFlexible ! !Object subclass: #Cuota	instanceVariableNames: 'fechaVencimiento estado'	classVariableNames: ''	package: 'TPOFINAL'!!Cuota methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:23' prior: 33722690!inicializar:unaFechafechaVencimiento := unaFecha .estado:= false! !!Cuota methodsFor: 'queries' stamp: '' prior: 33722817!cuotaPagada^estado not.! !!Cuota methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:23' prior: 33722932!pagarestado:=true! !!Cuota methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:28' prior: 33723030!revisarFechaVencimiento^ ((Date today<fechaVencimiento) & (Date today>= (fechaVencimiento - 7 days))). "es decir que esta en los ultimos 7 dias"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cuota class	instanceVariableNames: ''!!Cuota class methodsFor: 'constructor' stamp: '' prior: 33723345!crear: unaFecha	|nuevaCuota|	nuevaCuota := self new.	nuevaCuota inicializar:unaFecha.	^nuevaCuota ! !Object subclass: #EmpresaTurismo	instanceVariableNames: 'colClientes colViajes'	classVariableNames: ''	package: 'TPOFINAL'!!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33723666!colViajes	^ colViajes! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33723780!colClientes: anObject	colClientes := anObject! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33723918!colClientes	^ colClientes! !!EmpresaTurismo methodsFor: 'accessing' stamp: 'Caiu 7/22/2023 13:48' prior: 33724036!colViajes: anObject	colViajes := anObject! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:49' prior: 33724168!cancelarViaje: unNombreViajecolClientes do:[:cliente | cliente eliminarRefViaje: unNombreViaje].! !!EmpresaTurismo methodsFor: 'queries' stamp: 'GiuliVicentino 12/12/2023 17:53' prior: 33724365!generarContrato: unDni conNum: unNumero conViaje: unViaje conFecha: unaFecha conPersonas: personas conCuotas: cuotas|unCliente|.unCliente := colClientes detect:[:cliente | cliente esIgual: unDni] ifNone:[nil].(unCliente) ifNotNil:[unCliente agregarContrato: unNumero conViaje: unViaje conFechaViaje:  unaFecha conPersonas: personas conCuotas: cuotas].! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:16' prior: 33724809!listar: fecha1 conOtraFecha: fecha2|listado|listado:=OrderedCollection new.listado := colViajes select:[:unViaje|unViaje verificarFecha: fecha1 conOtraFecha: fecha2].^ listado.! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33725058!agregarCliente: unClientecolClientes add:unCliente.! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33725179!revisionDiariaContratos|clientesANotificar|.clientesANotificar := colClientes select:[:cliente | cliente revisarContratos]."se retornan los clientes y luego se les deberia mandar una notificacion a cada uno"^ clientesANotificar.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 1/15/2024 20:03' prior: 33725500!verificarContrasenia: unCliente conContrasenia: unaContrasenia|correcta contraseniaCorrecta|.contraseniaCorrecta := unCliente getContrasenia.correcta := unaContrasenia = contraseniaCorrecta.^ correcta.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/23/2024 11:29' prior: 33725798!encontrarClienteconDNI: unDni^ colClientes detect:[:unCliente | unCliente esIgual: unDni]ifNone: [nil].! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33725972!agregarViaje: unViajecolViajes add:unViaje.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/29/2023 22:08' prior: 33726105!modificarValorImpuestos: nuevoValor conNombreViaje: nombreViaje|elViaje|.elViaje := colViajes detect:[:viaje | viaje esIgual: nombreViaje].elViaje setValorImpuesto: nuevoValor.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/30/2023 20:00' prior: 33726373!modificarFechaViaje: unNombreViaje conFecha1: fecha1 conFecha2: fecha2|elViaje|.elViaje := colViajes detect:[:unViaje | unViaje esIgual: unNombreViaje].! !!EmpresaTurismo methodsFor: 'queries' stamp: '' prior: 33726597!inicializar colClientes:= OrderedCollection new.colViajes := OrderedCollection new.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'GiuliannaVicentino 8/1/2023 19:46' prior: 33726784!registrarPagos:unNroContrato conCuotas: cantCuotasAPagar conQuiereMillas:quiereMillas|clienteAPagar contratoAPagar mensajeRespuesta|.clienteAPagar := colClientes detect:[:cadaCliente | cadaCliente tieneContrato: unNroContrato].(clienteAPagar) ifNotNil:[contratoAPagar := clienteAPagar  buscarContrato: unNroContrato.].(contratoAPagar) ifNotNil: [quiereMillas ifTrue:[[clienteAPagar  pagarContratoFrecuente:cantCuotasAPagar conQuiereMillas: quiereMillas conCliente:clienteAPagar] ifTrue: [mensajeRespuesta := 'Pago Exitoso'] ifFalse: [[mensajeRespuesta := 'Error al pagar las Cuotas']]] ifFalse:[clienteAPagar pagarCuotas: cantCuotasAPagar conContrato:contratoAPagar]].  ^ mensajeRespuesta.! !!EmpresaTurismo methodsFor: 'queries' stamp: 'Jere 7/29/2023 22:07' prior: 33727570!modificarCostoPersona: nuevoCosto conNombreViaje: nombreViaje|unViaje|.unViaje := colViajes detect:[:viaje | viaje esIgual: nombreViaje].unViaje setCostoPersona: nuevoCosto.! !!EmpresaTurismo methodsFor: 'punto_e' stamp: 'Caiu 7/29/2023 22:55' prior: 33727836!ModificarContrato: unNroContrato A: unaFecha| elCliente elContrato reembolso|elContrato := (colClientes   detect: [ :cdaCliente | cdaCliente buscarContrato: unNroContrato  ]).( elContrato isNotNil ) ifTrue: [ elCliente := (colClientes   detect: [ :cdaCliente | cdaCliente buscarContrato: unNroContrato.											  (elContrato modificarContratoB: unaFecha) ifFalse: [reembolso := (elCliente cancelarContrato: unNroContrato)] . ]) ].^ reembolso ! !!EmpresaTurismo methodsFor: 'punto_e' stamp: 'Jere 7/30/2023 18:56' prior: 33728374!efectivizarContratoA: unNroContrato	|elContrato elCliente|	elCliente  := colClientes detect:[:cdaCliente | (cdaCliente getNroContrato)=unNroContrato].	(elCliente) ifNotNil: [elContrato := elCliente buscarContrato: unNroContrato].	^ elContrato efectivizarContratoB.! !!EmpresaTurismo methodsFor: 'punto_f' stamp: 'GiuliVicentino 1/3/2024 23:26' prior: 33728740!agregarExcOpcional: unaExcursion AContrato: nroContrato paraCantPersonas: unaCantPersonas	| agregada elCliente elContrato |	elCliente := colClientes detect: [ :cdaCliente | (cdaCliente buscarContrato: nroContrato) isNotNil  ].	Transcript show: 'jeree'.	elCliente ifNotNil: [elContrato:= elCliente buscarContrato:nroContrato.		                 agregada := (elContrato agregarExcursionOp:unaExcursion para: unaCantPersonas )].	^ agregada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EmpresaTurismo class	instanceVariableNames: ''!!EmpresaTurismo class methodsFor: 'constructor' stamp: '' prior: 33729370!crear |nuevaEmpresa|.nuevaEmpresa := self new.nuevaEmpresa inicializar.^nuevaEmpresa .! !Object subclass: #Etapa	instanceVariableNames: 'fechaLlegada diasEnCiudad hotel tipoPension listaActividades'	classVariableNames: ''	package: 'TPOFINAL'!!Etapa methodsFor: 'queries' stamp: '' prior: 33729678!inicializar:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaListafechaLlegada :=unaFechaLlegada .diasEnCiudad := unosDias .hotel :=unHotel.listaActividades := unaLista! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Etapa class	instanceVariableNames: ''!!Etapa class methodsFor: 'constructor' stamp: '' prior: 33730074!crear:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaLista	|nuevaEtapa|	nuevaEtapa := self new.	nuevaEtapa inicializar:unaFechaLlegada conDiasEnCiudad:unosDias conHotel:unHotel conTipoPension:unTipo conListaActividades:unaLista.	^ nuevaEtapa ! !Object subclass: #Excursion	instanceVariableNames: 'costo cantPersonasE'	classVariableNames: ''	package: 'TPOFINAL'!!Excursion methodsFor: 'queries' stamp: '' prior: 33730561!inicializar:unCosto conCantPersonasE: unaCantcosto := unCosto .cantPersonasE := unaCant .! !!Excursion methodsFor: 'queries' stamp: 'Caiu 7/29/2023 21:47' prior: 33730736!actualizarCantPersonasE: unaCantPersonascantPersonasE := unaCantPersonas ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Excursion class	instanceVariableNames: ''!!Excursion class methodsFor: 'constructor' stamp: '' prior: 33730988!crar:unCosto conCantPersonasE: unaCant	|nuevaExcursion|	nuevaExcursion := self new.	nuevaExcursion inicializar:unCosto conCantPersonasE: unaCant.	^nuevaExcursion ! !!Excursion class methodsFor: 'constructor' stamp: 'Caiu 7/30/2023 17:05' prior: 33731248!crear: unCosto conCantPersonasE: unaCant	|nuevaExcursion|	nuevaExcursion := self new.	nuevaExcursion inicializar:unCosto conCantPersonasE: unaCant.	^nuevaExcursion ! !Object subclass: #Viaje	instanceVariableNames: 'nombre costoPersona impuestos'	classVariableNames: ''	package: 'TPOFINAL'!!Viaje methodsFor: 'printing' stamp: 'Jere 1/25/2024 19:06' prior: 33731608!toString^ nombre, 'costo: ',costoPersona.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 22:06' prior: 33731732!setValorImpuesto: nuevoValorimpuestos := nuevoValor.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/30/2023 19:52' prior: 33731867!getCostoXPersona^ costoPersona.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 21:17' prior: 33731981!getNombre^ nombre.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/29/2023 22:06' prior: 33732082!setCostoPersona: nuevoCostocostoPersona := nuevoCosto.! !!Viaje methodsFor: 'accessing' stamp: 'Jere 7/30/2023 19:53' prior: 33732219!getImpuesto^ impuestos.! !!Viaje methodsFor: 'queries' stamp: '' prior: 33732303!verificarFecha: fecha1 conOtraFecha: fecha2self subclassResponsibility.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/28/2023 20:36' prior: 33732455!obtenerCostoTotal: cantPersonas^ (costoPersona * cantPersonas) + impuestos.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/29/2023 21:15' prior: 33732611!esIgual: unNombre^ nombre = unNombre.! !!Viaje methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:09' prior: 33732729!modificarFecha: fecha1 conFecha2: fecha2self subclassResponsibility.! !!Viaje methodsFor: 'queries' stamp: '' prior: 33732858!inicializar:unNombre conCostoPersona:unCosto conImpuestos:unosImpuestosnombre := unNombre .costoPersona :=unCosto .impuestos := unosImpuestos .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Viaje class	instanceVariableNames: ''!!Viaje class methodsFor: 'constructor' stamp: '' prior: 33733174!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos|nuevoViaje|nuevoViaje := self new.nuevoViaje inicializar:unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.^nuevoViaje ! !Viaje subclass: #ViajeEspecial	instanceVariableNames: 'disponibilidad fechaSalida ciudad fechaRegreso'	classVariableNames: ''	package: 'TPOFINAL'!!ViajeEspecial methodsFor: 'queries' stamp: '' prior: 33733593!inicializar:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaRdisponibilidad := unaDisponibilidad .fechaSalida :=unaFechaS .fechaRegreso := unaFechaR .ciudad:= unaCiudad.! !!ViajeEspecial methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:19' prior: 33733895!verificarFecha: fecha1 conOtraFecha: fecha2|rta|.rta := false.((disponibilidad) > 0 & (fechaSalida>=fecha1) & (fechaSalida<=fecha2)) ifTrue:[rta := true].^ rta.! !!ViajeEspecial methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:10' prior: 33734147!modificarFecha: fecha1 conFecha2: fecha2|fueModificada|.fueModificada := false.(fecha2>=fecha1) ifTrue:[fueModificada := true. fechaSalida := fecha1. fechaRegreso := fecha2].^ fueModificada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeEspecial class	instanceVariableNames: ''!!ViajeEspecial class methodsFor: 'constructor' stamp: '' prior: 33734527!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos conDisponibilidad:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaR|nuevoViajeEspecial|nuevoViajeEspecial := self crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.nuevoViajeEspecial inicializar:unaDisponibilidad conFechaSalida: unaFechaS conCiudad:unaCiudad conFechaRegreso:unaFechaR.^nuevoViajeEspecial ! !Viaje subclass: #ViajeOrganizado	instanceVariableNames: 'cantDias colEtapas colOpcionesSalida colExcursiones'	classVariableNames: ''	package: 'TPOFINAL'!!ViajeOrganizado methodsFor: 'queries' stamp: '' prior: 33735188!inicializar:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalidacantDias := unaCantDias .colEtapas := unaColEtapas .colOpcionesSalida := unaColOpSalida .colExcursiones := OrderedCollection new.! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/30/2023 00:13' prior: 33735497!liberarCupo: laCantPersonas enFecha: laFecha "si existe una opSalida en colOpcionesSalida tal que fechaSalida == laFecha entonces cupo := cupo + laCantPersonas "! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Jere 7/30/2023 19:27' prior: 33735749!modificarFecha: fecha1 conFecha2: fecha2|fueModificada valorAux|.fueModificada := false.colOpcionesSalida keysAndValuesDo: [:clave :valor | (clave=fecha1) ifTrue:[valorAux := valor.colOpcionesSalida remove: clave. colOpcionesSalida at:fecha2 put: valorAux. fueModificada := true]].^ fueModificada.! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/29/2023 21:46' prior: 33736140!actualizarExcursionesEnViaje: unaExcursioncolExcursiones add: unaExcursion.! !!ViajeOrganizado methodsFor: 'queries' stamp: '' prior: 33736286!agregarExcursion: unaExcursioncolExcursiones add:unaExcursion! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Caiu 7/29/2023 23:07' prior: 33736438!buscaFecha: laFecha conCupo: laCantPersonas|fechaDisponible|fechaDisponible := colOpcionesSalida detect: [ :cdaOpSalida | cdaOpSalida " como comparo elementos de una dupla??"  ].^ fechaDisponible .! !!ViajeOrganizado methodsFor: 'queries' stamp: 'Jere 7/31/2023 19:20' prior: 33736728!verificarFecha: fecha1 conOtraFecha: fecha2|rta|rta:=true.colOpcionesSalida keysAndValuesDo: [:clave :cupo| ((clave>=fecha1) & (clave<=fecha2) & (cupo>0)) ifTrue:[rta:=true]].^ rta.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeOrganizado class	instanceVariableNames: ''!!ViajeOrganizado class methodsFor: 'constructor' stamp: '' prior: 33737103!crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos conCantDias:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida|nuevoViajeOrganizado|nuevoViajeOrganizado := self crear: unNombre conCostoPersona:unCosto conImpuestos:unosImpuestos.nuevoViajeOrganizado inicializar:unaCantDias conColEtapas:unaColEtapas conColOpcionesSalida: unaColOpSalida.^nuevoViajeOrganizado ! !PackageManifest subclass: #ManifestTPOFINAL	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL-Manifest'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestTPOFINAL class	instanceVariableNames: ''!!ManifestTPOFINAL class methodsFor: 'code-critics' stamp: 'Jere 7/28/2023 20:49' prior: 33737848!ruleGuardingClauseRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#TPOFINAL)) #'2023-07-28T20:49:39.187-03:00') )! !PackageManifest subclass: #ManifestTPOFINALVISUAL	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL VISUAL-Manifest'!!ManifestTPOFINALVISUAL commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestTPOFINALVISUAL class	instanceVariableNames: ''!!ManifestTPOFINALVISUAL class methodsFor: 'code-critics' stamp: 'Jere 1/25/2024 19:47'!ruleStringConcatenationRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#VentanaContratos #crearTabla: #false)) #'2024-01-25T19:47:47.289-03:00') #(#(#RGPackageDefinition #(#'TPOFINAL VISUAL')) #'2024-01-25T19:47:55.281-03:00') )! !SimpleButtonMorph subclass: #BotonAccion	instanceVariableNames: 'bloque'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonAccion methodsFor: 'as yet unclassified' stamp: 'Jere 1/12/2024 17:23' prior: 33554837!mouseAction: unBloque^ bloque := unBloque.! !!BotonAccion methodsFor: 'event handling' stamp: 'Jere 1/12/2024 17:26' prior: 33554957!mouseUp: unEventobloque value.! !BotonAccion subclass: #BotonCerrar	instanceVariableNames: ''	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonCerrar methodsFor: 'event handling' stamp: 'Jere 1/14/2024 18:16' prior: 33555409!mouseUp: unEventosuper mouseUp: unEvento.self owner delete.! !!BotonCerrar methodsFor: 'initialization' stamp: 'Jere 1/14/2024 18:16' prior: 33555181!initializesuper initialize.self label: ('CERRAR' asText allBold). self extent: 45@20; color: Color red; borderColor: Color darkGray ; borderWidth: 3.! !BotonAccion subclass: #BotonInicioSesion	instanceVariableNames: 'campoUser campoClave sistema ventanita'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:36' prior: 33597040!inicializar: unUsuario conContra: unaContra conSistema: unSistemacampoUser := unUsuario.campoClave := unaContra.sistema := unSistema getEmpresa .self iniciarSesion. ! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Jere 1/24/2024 23:51' prior: 33690631!iniciarSesion"es usuario comun"    ((campoUser getText ~= '')  & (campoUser getText asString isAllDigits) & (campoClave getText ~= ''))    ifTrue:     [         |tempUsuario|.        tempUsuario := (sistema encontrarClienteconDNI: campoUser getText asString).        (tempUsuario) ifNotNil:         [              ((tempUsuario getContrasenia) asString = (campoClave getText) asString)                ifTrue: [ self owner delete.ventanita abrirVisualContratosConSist: sistema conCliente: tempUsuario ]                ifFalse: [ ventanita error: 'Contraseña incorrecta.'].        ].         tempUsuario ifNil:             [ventanita error: 'Usuario no existe.'].    ]    ifFalse:    [ ventanita error: 'Error: no ingresó correctamente en algún campo' ]! !!BotonInicioSesion methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/22/2024 10:38' prior: 33598279!inicializar: unUsuario conContra: unaContra conSistema: unSistema conVentana: unaVentanacampoUser := unUsuario.campoClave := unaContra.sistema := unSistema.ventanita:= unaVentana.self iniciarSesion. ! !ScrollPane subclass: #Tabla	instanceVariableNames: 'colorTexto x y ultimoY cabecera fondoCabecera'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!Tabla methodsFor: 'as yet unclassified' stamp: 'Jere 1/26/2024 00:46'!iniciar:xIn y:yIn cabecera:cabeceraInx := xIn.	y := yIn.	ultimoY := 40.	self extent: x@y.	self color: Color white.	self borderWidth: 2.	self borderColor: Color lightBlue.	colorTexto := OrderedCollection new.	cabecera := cabeceraIn asStringMorph.	fondoCabecera := Morph new.	fondoCabecera extent: x@30.	fondoCabecera color: Color white.	fondoCabecera borderColor: Color lightBlue.	fondoCabecera borderWidth: 2.	cabecera borderColor: Color lightBlue.	cabecera borderWidth: 2.	cabecera position:5@10.	self addMorph: fondoCabecera .	self addMorphFront: cabecera. ! !!Tabla methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 18:16'!iniciar:xIn y:yInx := xIn.	y := yIn.	ultimoY := 40.	self extent: x@y.	self color: Color black.	colorTexto := OrderedCollection new.! !!Tabla methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 18:17'!resetearcolorTexto do: [:textMorph | textMorph delete. ].	colorTexto := OrderedCollection new.	ultimoY := 40.! !!Tabla methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 18:16'!agregarTexto:texto| label |    label := texto asStringMorph.    label position: 5@ultimoY.    ultimoY := ultimoY + 15.	 colorTexto add: label.    self scroller addMorph: label behind: fondoCabecera.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tabla class	instanceVariableNames: ''!!Tabla class methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 18:15'!crear:xIn y:yIn^ self new iniciar:xIn y:yIn.! !!Tabla class methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 18:15'!crear:xIn y:yIn cabecera:cabecera^ self new iniciar:xIn y:yIn cabecera:cabecera.! !BorderedMorph subclass: #Ventana	instanceVariableNames: 'empresa botonCerrarVentana'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!Ventana methodsFor: 'initialization' stamp: 'Jere 1/15/2024 20:20' prior: 33556886!initializesuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100)."boton cerrar"botonCerrarVentana := BotonAccion new.self addMorph: botonCerrarVentana.botonCerrarVentana position: self topRight - (botonCerrarVentana width + 22@0)+(0@5).botonCerrarVentana label: 'CERRAR'.botonCerrarVentana mouseAction: [self delete].! !!Ventana methodsFor: 'initialization' stamp: 'Jere 1/25/2024 00:12'!setBotonCerrar: botonbotonCerrarVentana := boton.! !!Ventana methodsFor: 'initialization' stamp: 'Giuuuuli 1/23/2024 10:52' prior: 33686596!setSistema:unSistemaempresa := unSistema.! !!Ventana methodsFor: 'error handling' stamp: 'Jere 1/24/2024 01:24' prior: 33693615!error: unTexto|ventanaAux texto|texto := TextMorph new contents: unTexto; color: Color blue ; bold.ventanaAux  := self class crearVentanaConAncho: (texto width + 330) altura: (texto height + 40) titulo: 'ERROR'.ventanaAux  addMorphCentered: texto.ventanaAux  openCenteredInWorld .! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 11:03' prior: 33690025!abrirVisualContratosConSist:unSistema conCliente: unClienteVentanaContratos crearVistaContratoConSist:unSistema conCliente:unCliente.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:55' prior: 33688284!iniciarSistema: unSistemaempresa := unSistema.VisualEmpresa abrirVisualEmpresaConSist: unSistema .! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:40'!abrirVisualContratos: unClienteVentanaContratos crearVistaContrato: unCliente.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 17:04' prior: 33557847!getEmpresa^ empresa.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 11:21' prior: 33691455!abrirInicioSesionConSist:unSistemaVistaUsuario crearVistaUsuarioConSist:unSistema! !!Ventana methodsFor: 'as yet unclassified' stamp: 'Jere 1/15/2024 20:20' prior: 33558103!abrirInicioSesionVistaUsuario crearVistaUsuario.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ventana class	instanceVariableNames: ''!!Ventana class methodsFor: 'as yet unclassified' stamp: 'Jere 1/25/2024 00:16' prior: 33558338!crearVentanaConAncho: unAncho altura: unaAltura titulo: unTitulo|frame titulo contenedorTitulo|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.contenedorTitulo := Morph new beTransparent; extent: unAncho@40.titulo := TextMorph new contents: (unTitulo asText allBold); fillsOwner: true.titulo font: (LogicalFont familyName: 'Roboto' pointSize: 20).frame addMorphFront: titulo. titulo position: frame topLeft + (10@0).^ frame.! !!Ventana class methodsFor: 'as yet unclassified' stamp: 'Jere 1/15/2024 20:20' prior: 33559260!crearVentanaConAncho: unAncho altura: unaAltura|frame barra bCerrar|frame := self new color: Color veryDarkGray ; extent: unAncho@unaAltura; borderColor: Color darkGray; borderWidth: 3.barra := self new color: Color veryDarkGray; extent: unAncho@20; borderColor: Color darkGray; borderWidth: 3.bCerrar := BotonCerrar new.bCerrar position: frame topRight - bCerrar extent.barra position: frame position - (0@20).frame addMorph: barra.frame addMorph: bCerrar  inFrontOf: barra.^ frame! !Ventana subclass: #VentanaContratos	instanceVariableNames: 'textoTitulo botonActualizar botonAñadir cliente tabla campoNumContrato campoCantPerso texto1 texto2 botonViaje botonModificar'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!VentanaContratos methodsFor: 'as yet unclassified' stamp: 'Jere 1/26/2024 01:37' prior: 33690299!inicializarContratosConSist: unSistema conCliente:unClienteself setSistema: unSistema.super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 1200@400).botonCerrarVentana position: (1185@50).cliente := unCliente.textoTitulo := StringMorph new.textoTitulo contents: 'Hola, ',cliente apellido,'!!'.self addMorph: textoTitulo.textoTitulo position: self topLeft + (15@15)."tabla"tabla := Tabla new.tabla := self crearTabla: cliente.tabla position: self topLeft + (120@60).self addMorph: tabla."texto de ranura"texto1 := StringMorph new.texto1 contents: 'Para modificar un contrato:'.texto1 position: self bottomLeft - (-150@37).self addMorph: texto1."ranura para modificar viaje"campoNumContrato := RubTextFieldMorph new extent:(220@20);ghostText: 'INGRESE EL NUMERO DE CONTRATO'.campoNumContrato borderWidth: 1; borderColor: Color darkGray.self addMorph: campoNumContrato.campoNumContrato position: self bottomLeft - (-330@40)."ranura para cant personas"campoCantPerso := RubTextFieldMorph new extent:(220@20);ghostText: 'INGRESE LA CANTIDAD DE PERSONAS'.self addMorph: campoCantPerso.campoCantPerso borderWidth: 1; borderColor: Color darkGray.campoCantPerso position: self bottomLeft - (-330@75)."texto de ranura2"texto2 := StringMorph new.texto2 contents: 'Para contratar un nuevo viaje:'.texto2 position: self bottomLeft - (-150@75).self addMorph: texto2."boton añadir viaje"botonViaje := BotonAccion new.botonViaje label: 'AÑADIR'.botonViaje position: self bottomLeft - (-555@75).self addMorph: botonViaje."boton modificar viaje"botonModificar := BotonAccion new.botonModificar label: 'MODIFICAR'.botonModificar position: self bottomLeft - (-555@40).botonModificar mouseAction: [].self addMorph: botonModificar.self openCenteredInWorld.! !!VentanaContratos methodsFor: 'as yet unclassified' stamp: 'Jere 1/26/2024 00:45'!crearTabla:  unCliente|coleccion posicion tablaAux contratoAux i|.coleccion := unCliente getContratosString. "este metodo hace una coleccion de strings de cada contrato"posicion := '' asMorph.posicion position: (20@(self lastSubmorph bottom)).tablaAux := Tabla crear: 950 y:250 cabecera: 'Contratos existentes de: ', unCliente apellido,'.'.i := 1.coleccion do: [ :objeto |     contratoAux := objeto asMorph.    contratoAux position: posicion position + (0 @ 20).	posicion position: posicion position + (0@20).    tablaAux agregarTexto: i asString,'.  ',objeto asString.	i := i+1.].^ tablaAux.! !!VentanaContratos methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:14' prior: 33560011!ventanaDeContratos: unClientesuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300).cliente := unCliente.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VentanaContratos class	instanceVariableNames: ''!!VentanaContratos class methodsFor: 'as yet unclassified' stamp: 'Jere 1/24/2024 23:27'!crearVistaContratoConSist:unSistema conCliente:unCliente|aux|.aux:= self new.aux inicializarContratosConSist: unSistema conCliente:unCliente.! !!VentanaContratos class methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 16:10' prior: 33560380!crearVistaContrato: unCliente|aux|.aux:= self new.aux ventanaDeContratos: unCliente.! !Ventana subclass: #VistaUsuario	instanceVariableNames: 'inicioSesion botonAceptar campoUsuario campoContrasenia titulo cliente'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!VistaUsuario methodsFor: 'as yet unclassified' stamp: 'Jere 1/26/2024 00:52' prior: 33688577!ventanaInicioSesionConSist:unSistemaself setSistema: unSistema .super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300)."titulo"titulo := StringMorph new.titulo contents: 'Iniciar Sesion:'.self addMorph: titulo.titulo position: self topLeft + (90@55)."campo usuario"campoUsuario := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU DNI'.self addMorph: campoUsuario.campoUsuario position: self center - (campoUsuario extent/2) - (0@40)."campo contraseña"campoContrasenia := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU CONTRASEÑA'.self addMorph: campoContrasenia.campoContrasenia position: self center - (campoContrasenia extent/2) - (0@5)."boton aceptar"botonAceptar := BotonInicioSesion new.botonAceptar label: 'ACEPTAR'.botonAceptar position: self center - (botonAceptar extent/2) + (0@30) - (70@0).botonAceptar mouseAction: [botonAceptar inicializar: campoUsuario conContra: campoContrasenia conSistema: empresa conVentana:self.].self addMorph: botonAceptar.self openCenteredInWorld.! !!VistaUsuario methodsFor: 'as yet unclassified' stamp: 'Jere 1/16/2024 17:07'!ventanaInicioSesionsuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@300)."titulo"titulo := StringMorph new.titulo contents: 'Iniciar Sesion:'.self addMorph: titulo.titulo position: self topLeft + (90@55)."campo usuario"campoUsuario := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU DNI'.self addMorph: campoUsuario.campoUsuario position: self center - (campoUsuario extent/2) - (0@40).self openCenteredInWorld."campo contraseña"campoContrasenia := RubTextFieldMorph new extent:(200@20);ghostText: 'INGRESE SU CONTRASEÑA'.self addMorph: campoContrasenia.campoContrasenia position: self center - (campoContrasenia extent/2) - (0@5).self openCenteredInWorld."boton aceptar"botonAceptar := BotonInicioSesion new.botonAceptar label: 'ACEPTAR'.botonAceptar position: self center - (botonAceptar extent/2) + (0@30) - (70@0).botonAceptar mouseAction: [botonAceptar inicializar: campoUsuario conContra: campoContrasenia conSistema: self.].self addMorph: botonAceptar.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VistaUsuario class	instanceVariableNames: ''!!VistaUsuario class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:59' prior: 33689843!crearVistaUsuarioConSist:unSistema|aux|.aux := self new.aux ventanaInicioSesionConSist:unSistema.! !!VistaUsuario class methodsFor: 'as yet unclassified' stamp: 'Jere 1/14/2024 18:34' prior: 33561985!crearVistaUsuario|aux|.aux := self new.aux ventanaInicioSesion.! !!VistaUsuario class methodsFor: 'as yet unclassified'!crearConSistema: unSistema usuario: unDni|vista|vista := self crearVentanaConAncho:  770 altura: 600 titulo: 'LIBRERÍA NACIONAL I.A'.vista inicializarConSistema: unSistema usuario: unDni.^ vista! !Ventana subclass: #VisualEmpresa	instanceVariableNames: 'botonCerrar botonContrato numeroContrato fechaHoy miEmpresa origen botonCliente menuDatos botonTest tituloMenu botonUserAdmin botonUserNormal'	classVariableNames: ''	package: 'TPOFINAL VISUAL'!!VisualEmpresa methodsFor: 'initialization' stamp: 'Jere 1/14/2024 19:19' prior: 33562385!initializesuper initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100).origen := self innerBounds origin."texto fecha hoy"fechaHoy := StringMorph new.fechaHoy contents: Date today asString.self addMorph: fechaHoy.fechaHoy position: origen + (5@5)."texto seleccione su rol"tituloMenu := StringMorph new.tituloMenu contents: 'SELECCIONE SU ROL'.tituloMenu position: origen + (160@30).self addMorph: tituloMenu."boton usuario admin"botonUserAdmin := BotonAccion new.self addMorph: botonUserAdmin.botonUserAdmin label: 'ADMINISTRADOR'.botonUserAdmin position: origen + (260@60)."boton usuario normal"botonUserNormal := BotonAccion new.self addMorph: botonUserNormal.botonUserNormal label: 'USUARIO'.botonUserNormal position: origen + (100@60).botonUserNormal mouseAction: [self delete. self abrirInicioSesion]. "abre el inicio de sesion""agregar clientebotonCliente := BotonAccion new.botonCliente label: 'AGREGAR CLIENTE'.botonCliente mouseAction: [nombre := UIManager default	request: 'What''s your name?'	initialAnswer: 'no name'].self addMorph: botonCliente.botonCliente position: origen + (5@25)."self openCenteredInWorld.! !!VisualEmpresa methodsFor: 'initialization' stamp: 'Giuuuuli 1/23/2024 11:21' prior: 33691636!inicializarConSISTEMA:unSistemaself setSistema: unSistema .super initialize.self color: Color paleBlue.self position: 45@45.self bounds: (self position extent: 450@100).origen := self innerBounds origin."texto fecha hoy"fechaHoy := StringMorph new.fechaHoy contents: Date today asString.self addMorph: fechaHoy.fechaHoy position: origen + (5@5)."texto seleccione su rol"tituloMenu := StringMorph new.tituloMenu contents: 'SELECCIONE SU ROL'.tituloMenu position: origen + (160@30).self addMorph: tituloMenu."boton usuario admin"botonUserAdmin := BotonAccion new.self addMorph: botonUserAdmin.botonUserAdmin label: 'ADMINISTRADOR'.botonUserAdmin position: origen + (260@60)."boton usuario normal"botonUserNormal := BotonAccion new.self addMorph: botonUserNormal.botonUserNormal label: 'USUARIO'.botonUserNormal position: origen + (100@60).botonUserNormal mouseAction: [self delete. self abrirInicioSesionConSist: unSistema ]. "abre el inicio de sesion""agregar clientebotonCliente := BotonAccion new.botonCliente label: 'AGREGAR CLIENTE'.botonCliente mouseAction: [nombre := UIManager default	request: 'What''s your name?'	initialAnswer: 'no name'].self addMorph: botonCliente.botonCliente position: origen + (5@25)."self openCenteredInWorld.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VisualEmpresa class	instanceVariableNames: ''!!VisualEmpresa class methodsFor: 'as yet unclassified' stamp: 'Jere 1/14/2024 18:49' prior: 33563792!abrirVisualEmpresa|aux|.aux := VisualEmpresa new.! !!VisualEmpresa class methodsFor: 'as yet unclassified' stamp: 'Giuuuuli 1/23/2024 10:55' prior: 33688075!abrirVisualEmpresaConSist:unSistema|aux|.aux := VisualEmpresa new.aux inicializarConSISTEMA: unSistema.^aux! !----End fileIn----!!EmpresaTurismo methodsFor: 'queries' stamp: 'Giuuuuli 1/27/2024 00:24'!encontrarContratoDeCliente: unCliente conID:unId^ unCliente getContratos detect:[:unContrato | unContrato getNroContrato = unId ]ifNone: [nil].! !----SNAPSHOT----2024-01-27T00:24:58.882-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 139470!----SNAPSHOT----2024-01-27T00:27:27.763-03:00 febreeeroooooooo- 64bit (stable).image priorSource: 238817!